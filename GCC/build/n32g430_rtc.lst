ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"n32g430_rtc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c"
  20              		.section	.text.__NVIC_SetPriority,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	__NVIC_SetPriority:
  27              	.LFB111:
  28              		.file 2 "../firmware/CMSIS/core/core_cm4.h"
   1:../firmware/CMSIS/core/core_cm4.h **** /**************************************************************************//**
   2:../firmware/CMSIS/core/core_cm4.h ****  * @file     core_cm4.h
   3:../firmware/CMSIS/core/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:../firmware/CMSIS/core/core_cm4.h ****  * @version  V5.0.8
   5:../firmware/CMSIS/core/core_cm4.h ****  * @date     04. June 2018
   6:../firmware/CMSIS/core/core_cm4.h ****  ******************************************************************************/
   7:../firmware/CMSIS/core/core_cm4.h **** /*
   8:../firmware/CMSIS/core/core_cm4.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:../firmware/CMSIS/core/core_cm4.h ****  *
  10:../firmware/CMSIS/core/core_cm4.h ****  * SPDX-License-Identifier: Apache-2.0
  11:../firmware/CMSIS/core/core_cm4.h ****  *
  12:../firmware/CMSIS/core/core_cm4.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:../firmware/CMSIS/core/core_cm4.h ****  * not use this file except in compliance with the License.
  14:../firmware/CMSIS/core/core_cm4.h ****  * You may obtain a copy of the License at
  15:../firmware/CMSIS/core/core_cm4.h ****  *
  16:../firmware/CMSIS/core/core_cm4.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:../firmware/CMSIS/core/core_cm4.h ****  *
  18:../firmware/CMSIS/core/core_cm4.h ****  * Unless required by applicable law or agreed to in writing, software
  19:../firmware/CMSIS/core/core_cm4.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:../firmware/CMSIS/core/core_cm4.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:../firmware/CMSIS/core/core_cm4.h ****  * See the License for the specific language governing permissions and
  22:../firmware/CMSIS/core/core_cm4.h ****  * limitations under the License.
  23:../firmware/CMSIS/core/core_cm4.h ****  */
  24:../firmware/CMSIS/core/core_cm4.h **** 
  25:../firmware/CMSIS/core/core_cm4.h **** #if   defined ( __ICCARM__ )
  26:../firmware/CMSIS/core/core_cm4.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:../firmware/CMSIS/core/core_cm4.h **** #elif defined (__clang__)
  28:../firmware/CMSIS/core/core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  29:../firmware/CMSIS/core/core_cm4.h **** #endif
  30:../firmware/CMSIS/core/core_cm4.h **** 
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 2


  31:../firmware/CMSIS/core/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:../firmware/CMSIS/core/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:../firmware/CMSIS/core/core_cm4.h **** 
  34:../firmware/CMSIS/core/core_cm4.h **** #include <stdint.h>
  35:../firmware/CMSIS/core/core_cm4.h **** 
  36:../firmware/CMSIS/core/core_cm4.h **** #ifdef __cplusplus
  37:../firmware/CMSIS/core/core_cm4.h ****  extern "C" {
  38:../firmware/CMSIS/core/core_cm4.h **** #endif
  39:../firmware/CMSIS/core/core_cm4.h **** 
  40:../firmware/CMSIS/core/core_cm4.h **** /**
  41:../firmware/CMSIS/core/core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:../firmware/CMSIS/core/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:../firmware/CMSIS/core/core_cm4.h **** 
  44:../firmware/CMSIS/core/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:../firmware/CMSIS/core/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  46:../firmware/CMSIS/core/core_cm4.h **** 
  47:../firmware/CMSIS/core/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:../firmware/CMSIS/core/core_cm4.h ****      Unions are used for effective representation of core registers.
  49:../firmware/CMSIS/core/core_cm4.h **** 
  50:../firmware/CMSIS/core/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:../firmware/CMSIS/core/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  52:../firmware/CMSIS/core/core_cm4.h ****  */
  53:../firmware/CMSIS/core/core_cm4.h **** 
  54:../firmware/CMSIS/core/core_cm4.h **** 
  55:../firmware/CMSIS/core/core_cm4.h **** /*******************************************************************************
  56:../firmware/CMSIS/core/core_cm4.h ****  *                 CMSIS definitions
  57:../firmware/CMSIS/core/core_cm4.h ****  ******************************************************************************/
  58:../firmware/CMSIS/core/core_cm4.h **** /**
  59:../firmware/CMSIS/core/core_cm4.h ****   \ingroup Cortex_M4
  60:../firmware/CMSIS/core/core_cm4.h ****   @{
  61:../firmware/CMSIS/core/core_cm4.h ****  */
  62:../firmware/CMSIS/core/core_cm4.h **** 
  63:../firmware/CMSIS/core/core_cm4.h **** #include "cmsis_version.h"
  64:../firmware/CMSIS/core/core_cm4.h **** 
  65:../firmware/CMSIS/core/core_cm4.h **** /* CMSIS CM4 definitions */
  66:../firmware/CMSIS/core/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:../firmware/CMSIS/core/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:../firmware/CMSIS/core/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  69:../firmware/CMSIS/core/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:../firmware/CMSIS/core/core_cm4.h **** 
  71:../firmware/CMSIS/core/core_cm4.h **** #define __CORTEX_M                (4U)                                   /*!< Cortex-M Core */
  72:../firmware/CMSIS/core/core_cm4.h **** 
  73:../firmware/CMSIS/core/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:../firmware/CMSIS/core/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:../firmware/CMSIS/core/core_cm4.h **** */
  76:../firmware/CMSIS/core/core_cm4.h **** #if defined ( __CC_ARM )
  77:../firmware/CMSIS/core/core_cm4.h ****   #if defined __TARGET_FPU_VFP
  78:../firmware/CMSIS/core/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:../firmware/CMSIS/core/core_cm4.h ****       #define __FPU_USED       1U
  80:../firmware/CMSIS/core/core_cm4.h ****     #else
  81:../firmware/CMSIS/core/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:../firmware/CMSIS/core/core_cm4.h ****       #define __FPU_USED       0U
  83:../firmware/CMSIS/core/core_cm4.h ****     #endif
  84:../firmware/CMSIS/core/core_cm4.h ****   #else
  85:../firmware/CMSIS/core/core_cm4.h ****     #define __FPU_USED         0U
  86:../firmware/CMSIS/core/core_cm4.h ****   #endif
  87:../firmware/CMSIS/core/core_cm4.h **** 
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 3


  88:../firmware/CMSIS/core/core_cm4.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:../firmware/CMSIS/core/core_cm4.h ****   #if defined __ARM_PCS_VFP
  90:../firmware/CMSIS/core/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:../firmware/CMSIS/core/core_cm4.h ****       #define __FPU_USED       1U
  92:../firmware/CMSIS/core/core_cm4.h ****     #else
  93:../firmware/CMSIS/core/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:../firmware/CMSIS/core/core_cm4.h ****       #define __FPU_USED       0U
  95:../firmware/CMSIS/core/core_cm4.h ****     #endif
  96:../firmware/CMSIS/core/core_cm4.h ****   #else
  97:../firmware/CMSIS/core/core_cm4.h ****     #define __FPU_USED         0U
  98:../firmware/CMSIS/core/core_cm4.h ****   #endif
  99:../firmware/CMSIS/core/core_cm4.h **** 
 100:../firmware/CMSIS/core/core_cm4.h **** #elif defined ( __GNUC__ )
 101:../firmware/CMSIS/core/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:../firmware/CMSIS/core/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:../firmware/CMSIS/core/core_cm4.h ****       #define __FPU_USED       1U
 104:../firmware/CMSIS/core/core_cm4.h ****     #else
 105:../firmware/CMSIS/core/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:../firmware/CMSIS/core/core_cm4.h ****       #define __FPU_USED       0U
 107:../firmware/CMSIS/core/core_cm4.h ****     #endif
 108:../firmware/CMSIS/core/core_cm4.h ****   #else
 109:../firmware/CMSIS/core/core_cm4.h ****     #define __FPU_USED         0U
 110:../firmware/CMSIS/core/core_cm4.h ****   #endif
 111:../firmware/CMSIS/core/core_cm4.h **** 
 112:../firmware/CMSIS/core/core_cm4.h **** #elif defined ( __ICCARM__ )
 113:../firmware/CMSIS/core/core_cm4.h ****   #if defined __ARMVFP__
 114:../firmware/CMSIS/core/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:../firmware/CMSIS/core/core_cm4.h ****       #define __FPU_USED       1U
 116:../firmware/CMSIS/core/core_cm4.h ****     #else
 117:../firmware/CMSIS/core/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:../firmware/CMSIS/core/core_cm4.h ****       #define __FPU_USED       0U
 119:../firmware/CMSIS/core/core_cm4.h ****     #endif
 120:../firmware/CMSIS/core/core_cm4.h ****   #else
 121:../firmware/CMSIS/core/core_cm4.h ****     #define __FPU_USED         0U
 122:../firmware/CMSIS/core/core_cm4.h ****   #endif
 123:../firmware/CMSIS/core/core_cm4.h **** 
 124:../firmware/CMSIS/core/core_cm4.h **** #elif defined ( __TI_ARM__ )
 125:../firmware/CMSIS/core/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 126:../firmware/CMSIS/core/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:../firmware/CMSIS/core/core_cm4.h ****       #define __FPU_USED       1U
 128:../firmware/CMSIS/core/core_cm4.h ****     #else
 129:../firmware/CMSIS/core/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:../firmware/CMSIS/core/core_cm4.h ****       #define __FPU_USED       0U
 131:../firmware/CMSIS/core/core_cm4.h ****     #endif
 132:../firmware/CMSIS/core/core_cm4.h ****   #else
 133:../firmware/CMSIS/core/core_cm4.h ****     #define __FPU_USED         0U
 134:../firmware/CMSIS/core/core_cm4.h ****   #endif
 135:../firmware/CMSIS/core/core_cm4.h **** 
 136:../firmware/CMSIS/core/core_cm4.h **** #elif defined ( __TASKING__ )
 137:../firmware/CMSIS/core/core_cm4.h ****   #if defined __FPU_VFP__
 138:../firmware/CMSIS/core/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:../firmware/CMSIS/core/core_cm4.h ****       #define __FPU_USED       1U
 140:../firmware/CMSIS/core/core_cm4.h ****     #else
 141:../firmware/CMSIS/core/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:../firmware/CMSIS/core/core_cm4.h ****       #define __FPU_USED       0U
 143:../firmware/CMSIS/core/core_cm4.h ****     #endif
 144:../firmware/CMSIS/core/core_cm4.h ****   #else
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 4


 145:../firmware/CMSIS/core/core_cm4.h ****     #define __FPU_USED         0U
 146:../firmware/CMSIS/core/core_cm4.h ****   #endif
 147:../firmware/CMSIS/core/core_cm4.h **** 
 148:../firmware/CMSIS/core/core_cm4.h **** #elif defined ( __CSMC__ )
 149:../firmware/CMSIS/core/core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 150:../firmware/CMSIS/core/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:../firmware/CMSIS/core/core_cm4.h ****       #define __FPU_USED       1U
 152:../firmware/CMSIS/core/core_cm4.h ****     #else
 153:../firmware/CMSIS/core/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:../firmware/CMSIS/core/core_cm4.h ****       #define __FPU_USED       0U
 155:../firmware/CMSIS/core/core_cm4.h ****     #endif
 156:../firmware/CMSIS/core/core_cm4.h ****   #else
 157:../firmware/CMSIS/core/core_cm4.h ****     #define __FPU_USED         0U
 158:../firmware/CMSIS/core/core_cm4.h ****   #endif
 159:../firmware/CMSIS/core/core_cm4.h **** 
 160:../firmware/CMSIS/core/core_cm4.h **** #endif
 161:../firmware/CMSIS/core/core_cm4.h **** 
 162:../firmware/CMSIS/core/core_cm4.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:../firmware/CMSIS/core/core_cm4.h **** 
 164:../firmware/CMSIS/core/core_cm4.h **** 
 165:../firmware/CMSIS/core/core_cm4.h **** #ifdef __cplusplus
 166:../firmware/CMSIS/core/core_cm4.h **** }
 167:../firmware/CMSIS/core/core_cm4.h **** #endif
 168:../firmware/CMSIS/core/core_cm4.h **** 
 169:../firmware/CMSIS/core/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 170:../firmware/CMSIS/core/core_cm4.h **** 
 171:../firmware/CMSIS/core/core_cm4.h **** #ifndef __CMSIS_GENERIC
 172:../firmware/CMSIS/core/core_cm4.h **** 
 173:../firmware/CMSIS/core/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 174:../firmware/CMSIS/core/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 175:../firmware/CMSIS/core/core_cm4.h **** 
 176:../firmware/CMSIS/core/core_cm4.h **** #ifdef __cplusplus
 177:../firmware/CMSIS/core/core_cm4.h ****  extern "C" {
 178:../firmware/CMSIS/core/core_cm4.h **** #endif
 179:../firmware/CMSIS/core/core_cm4.h **** 
 180:../firmware/CMSIS/core/core_cm4.h **** /* check device defines and use defaults */
 181:../firmware/CMSIS/core/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 182:../firmware/CMSIS/core/core_cm4.h ****   #ifndef __CM4_REV
 183:../firmware/CMSIS/core/core_cm4.h ****     #define __CM4_REV               0x0000U
 184:../firmware/CMSIS/core/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 185:../firmware/CMSIS/core/core_cm4.h ****   #endif
 186:../firmware/CMSIS/core/core_cm4.h **** 
 187:../firmware/CMSIS/core/core_cm4.h ****   #ifndef __FPU_PRESENT
 188:../firmware/CMSIS/core/core_cm4.h ****     #define __FPU_PRESENT             0U
 189:../firmware/CMSIS/core/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:../firmware/CMSIS/core/core_cm4.h ****   #endif
 191:../firmware/CMSIS/core/core_cm4.h **** 
 192:../firmware/CMSIS/core/core_cm4.h ****   #ifndef __MPU_PRESENT
 193:../firmware/CMSIS/core/core_cm4.h ****     #define __MPU_PRESENT             0U
 194:../firmware/CMSIS/core/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:../firmware/CMSIS/core/core_cm4.h ****   #endif
 196:../firmware/CMSIS/core/core_cm4.h **** 
 197:../firmware/CMSIS/core/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 198:../firmware/CMSIS/core/core_cm4.h ****     #define __NVIC_PRIO_BITS          3U
 199:../firmware/CMSIS/core/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 200:../firmware/CMSIS/core/core_cm4.h ****   #endif
 201:../firmware/CMSIS/core/core_cm4.h **** 
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 5


 202:../firmware/CMSIS/core/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 203:../firmware/CMSIS/core/core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 204:../firmware/CMSIS/core/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 205:../firmware/CMSIS/core/core_cm4.h ****   #endif
 206:../firmware/CMSIS/core/core_cm4.h **** #endif
 207:../firmware/CMSIS/core/core_cm4.h **** 
 208:../firmware/CMSIS/core/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 209:../firmware/CMSIS/core/core_cm4.h **** /**
 210:../firmware/CMSIS/core/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 211:../firmware/CMSIS/core/core_cm4.h **** 
 212:../firmware/CMSIS/core/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 213:../firmware/CMSIS/core/core_cm4.h ****     \li to specify the access to peripheral variables.
 214:../firmware/CMSIS/core/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 215:../firmware/CMSIS/core/core_cm4.h **** */
 216:../firmware/CMSIS/core/core_cm4.h **** #ifdef __cplusplus
 217:../firmware/CMSIS/core/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 218:../firmware/CMSIS/core/core_cm4.h **** #else
 219:../firmware/CMSIS/core/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 220:../firmware/CMSIS/core/core_cm4.h **** #endif
 221:../firmware/CMSIS/core/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 222:../firmware/CMSIS/core/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 223:../firmware/CMSIS/core/core_cm4.h **** 
 224:../firmware/CMSIS/core/core_cm4.h **** /* following defines should be used for structure members */
 225:../firmware/CMSIS/core/core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 226:../firmware/CMSIS/core/core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 227:../firmware/CMSIS/core/core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 228:../firmware/CMSIS/core/core_cm4.h **** 
 229:../firmware/CMSIS/core/core_cm4.h **** /*@} end of group Cortex_M4 */
 230:../firmware/CMSIS/core/core_cm4.h **** 
 231:../firmware/CMSIS/core/core_cm4.h **** 
 232:../firmware/CMSIS/core/core_cm4.h **** 
 233:../firmware/CMSIS/core/core_cm4.h **** /*******************************************************************************
 234:../firmware/CMSIS/core/core_cm4.h ****  *                 Register Abstraction
 235:../firmware/CMSIS/core/core_cm4.h ****   Core Register contain:
 236:../firmware/CMSIS/core/core_cm4.h ****   - Core Register
 237:../firmware/CMSIS/core/core_cm4.h ****   - Core NVIC Register
 238:../firmware/CMSIS/core/core_cm4.h ****   - Core SCB Register
 239:../firmware/CMSIS/core/core_cm4.h ****   - Core SysTick Register
 240:../firmware/CMSIS/core/core_cm4.h ****   - Core Debug Register
 241:../firmware/CMSIS/core/core_cm4.h ****   - Core MPU Register
 242:../firmware/CMSIS/core/core_cm4.h ****   - Core FPU Register
 243:../firmware/CMSIS/core/core_cm4.h ****  ******************************************************************************/
 244:../firmware/CMSIS/core/core_cm4.h **** /**
 245:../firmware/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 246:../firmware/CMSIS/core/core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 247:../firmware/CMSIS/core/core_cm4.h **** */
 248:../firmware/CMSIS/core/core_cm4.h **** 
 249:../firmware/CMSIS/core/core_cm4.h **** /**
 250:../firmware/CMSIS/core/core_cm4.h ****   \ingroup    CMSIS_core_register
 251:../firmware/CMSIS/core/core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 252:../firmware/CMSIS/core/core_cm4.h ****   \brief      Core Register type definitions.
 253:../firmware/CMSIS/core/core_cm4.h ****   @{
 254:../firmware/CMSIS/core/core_cm4.h ****  */
 255:../firmware/CMSIS/core/core_cm4.h **** 
 256:../firmware/CMSIS/core/core_cm4.h **** /**
 257:../firmware/CMSIS/core/core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 258:../firmware/CMSIS/core/core_cm4.h ****  */
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 6


 259:../firmware/CMSIS/core/core_cm4.h **** typedef union
 260:../firmware/CMSIS/core/core_cm4.h **** {
 261:../firmware/CMSIS/core/core_cm4.h ****   struct
 262:../firmware/CMSIS/core/core_cm4.h ****   {
 263:../firmware/CMSIS/core/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 264:../firmware/CMSIS/core/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 265:../firmware/CMSIS/core/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 266:../firmware/CMSIS/core/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 267:../firmware/CMSIS/core/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 268:../firmware/CMSIS/core/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 269:../firmware/CMSIS/core/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 270:../firmware/CMSIS/core/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 271:../firmware/CMSIS/core/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 272:../firmware/CMSIS/core/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 273:../firmware/CMSIS/core/core_cm4.h **** } APSR_Type;
 274:../firmware/CMSIS/core/core_cm4.h **** 
 275:../firmware/CMSIS/core/core_cm4.h **** /* APSR Register Definitions */
 276:../firmware/CMSIS/core/core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 277:../firmware/CMSIS/core/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 278:../firmware/CMSIS/core/core_cm4.h **** 
 279:../firmware/CMSIS/core/core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 280:../firmware/CMSIS/core/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 281:../firmware/CMSIS/core/core_cm4.h **** 
 282:../firmware/CMSIS/core/core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 283:../firmware/CMSIS/core/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 284:../firmware/CMSIS/core/core_cm4.h **** 
 285:../firmware/CMSIS/core/core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 286:../firmware/CMSIS/core/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 287:../firmware/CMSIS/core/core_cm4.h **** 
 288:../firmware/CMSIS/core/core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 289:../firmware/CMSIS/core/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 290:../firmware/CMSIS/core/core_cm4.h **** 
 291:../firmware/CMSIS/core/core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 292:../firmware/CMSIS/core/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 293:../firmware/CMSIS/core/core_cm4.h **** 
 294:../firmware/CMSIS/core/core_cm4.h **** 
 295:../firmware/CMSIS/core/core_cm4.h **** /**
 296:../firmware/CMSIS/core/core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 297:../firmware/CMSIS/core/core_cm4.h ****  */
 298:../firmware/CMSIS/core/core_cm4.h **** typedef union
 299:../firmware/CMSIS/core/core_cm4.h **** {
 300:../firmware/CMSIS/core/core_cm4.h ****   struct
 301:../firmware/CMSIS/core/core_cm4.h ****   {
 302:../firmware/CMSIS/core/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 303:../firmware/CMSIS/core/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 304:../firmware/CMSIS/core/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 305:../firmware/CMSIS/core/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 306:../firmware/CMSIS/core/core_cm4.h **** } IPSR_Type;
 307:../firmware/CMSIS/core/core_cm4.h **** 
 308:../firmware/CMSIS/core/core_cm4.h **** /* IPSR Register Definitions */
 309:../firmware/CMSIS/core/core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 310:../firmware/CMSIS/core/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 311:../firmware/CMSIS/core/core_cm4.h **** 
 312:../firmware/CMSIS/core/core_cm4.h **** 
 313:../firmware/CMSIS/core/core_cm4.h **** /**
 314:../firmware/CMSIS/core/core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 315:../firmware/CMSIS/core/core_cm4.h ****  */
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 7


 316:../firmware/CMSIS/core/core_cm4.h **** typedef union
 317:../firmware/CMSIS/core/core_cm4.h **** {
 318:../firmware/CMSIS/core/core_cm4.h ****   struct
 319:../firmware/CMSIS/core/core_cm4.h ****   {
 320:../firmware/CMSIS/core/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 321:../firmware/CMSIS/core/core_cm4.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 322:../firmware/CMSIS/core/core_cm4.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 323:../firmware/CMSIS/core/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 324:../firmware/CMSIS/core/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 325:../firmware/CMSIS/core/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 326:../firmware/CMSIS/core/core_cm4.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 327:../firmware/CMSIS/core/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 328:../firmware/CMSIS/core/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 329:../firmware/CMSIS/core/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 330:../firmware/CMSIS/core/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 331:../firmware/CMSIS/core/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 332:../firmware/CMSIS/core/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 333:../firmware/CMSIS/core/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 334:../firmware/CMSIS/core/core_cm4.h **** } xPSR_Type;
 335:../firmware/CMSIS/core/core_cm4.h **** 
 336:../firmware/CMSIS/core/core_cm4.h **** /* xPSR Register Definitions */
 337:../firmware/CMSIS/core/core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 338:../firmware/CMSIS/core/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 339:../firmware/CMSIS/core/core_cm4.h **** 
 340:../firmware/CMSIS/core/core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 341:../firmware/CMSIS/core/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 342:../firmware/CMSIS/core/core_cm4.h **** 
 343:../firmware/CMSIS/core/core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 344:../firmware/CMSIS/core/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 345:../firmware/CMSIS/core/core_cm4.h **** 
 346:../firmware/CMSIS/core/core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 347:../firmware/CMSIS/core/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 348:../firmware/CMSIS/core/core_cm4.h **** 
 349:../firmware/CMSIS/core/core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 350:../firmware/CMSIS/core/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 351:../firmware/CMSIS/core/core_cm4.h **** 
 352:../firmware/CMSIS/core/core_cm4.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 353:../firmware/CMSIS/core/core_cm4.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 354:../firmware/CMSIS/core/core_cm4.h **** 
 355:../firmware/CMSIS/core/core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 356:../firmware/CMSIS/core/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 357:../firmware/CMSIS/core/core_cm4.h **** 
 358:../firmware/CMSIS/core/core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 359:../firmware/CMSIS/core/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 360:../firmware/CMSIS/core/core_cm4.h **** 
 361:../firmware/CMSIS/core/core_cm4.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 362:../firmware/CMSIS/core/core_cm4.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 363:../firmware/CMSIS/core/core_cm4.h **** 
 364:../firmware/CMSIS/core/core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 365:../firmware/CMSIS/core/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 366:../firmware/CMSIS/core/core_cm4.h **** 
 367:../firmware/CMSIS/core/core_cm4.h **** 
 368:../firmware/CMSIS/core/core_cm4.h **** /**
 369:../firmware/CMSIS/core/core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 370:../firmware/CMSIS/core/core_cm4.h ****  */
 371:../firmware/CMSIS/core/core_cm4.h **** typedef union
 372:../firmware/CMSIS/core/core_cm4.h **** {
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 8


 373:../firmware/CMSIS/core/core_cm4.h ****   struct
 374:../firmware/CMSIS/core/core_cm4.h ****   {
 375:../firmware/CMSIS/core/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 376:../firmware/CMSIS/core/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 377:../firmware/CMSIS/core/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 378:../firmware/CMSIS/core/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 379:../firmware/CMSIS/core/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 380:../firmware/CMSIS/core/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 381:../firmware/CMSIS/core/core_cm4.h **** } CONTROL_Type;
 382:../firmware/CMSIS/core/core_cm4.h **** 
 383:../firmware/CMSIS/core/core_cm4.h **** /* CONTROL Register Definitions */
 384:../firmware/CMSIS/core/core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 385:../firmware/CMSIS/core/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 386:../firmware/CMSIS/core/core_cm4.h **** 
 387:../firmware/CMSIS/core/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 388:../firmware/CMSIS/core/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 389:../firmware/CMSIS/core/core_cm4.h **** 
 390:../firmware/CMSIS/core/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 391:../firmware/CMSIS/core/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 392:../firmware/CMSIS/core/core_cm4.h **** 
 393:../firmware/CMSIS/core/core_cm4.h **** /*@} end of group CMSIS_CORE */
 394:../firmware/CMSIS/core/core_cm4.h **** 
 395:../firmware/CMSIS/core/core_cm4.h **** 
 396:../firmware/CMSIS/core/core_cm4.h **** /**
 397:../firmware/CMSIS/core/core_cm4.h ****   \ingroup    CMSIS_core_register
 398:../firmware/CMSIS/core/core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 399:../firmware/CMSIS/core/core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 400:../firmware/CMSIS/core/core_cm4.h ****   @{
 401:../firmware/CMSIS/core/core_cm4.h ****  */
 402:../firmware/CMSIS/core/core_cm4.h **** 
 403:../firmware/CMSIS/core/core_cm4.h **** /**
 404:../firmware/CMSIS/core/core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 405:../firmware/CMSIS/core/core_cm4.h ****  */
 406:../firmware/CMSIS/core/core_cm4.h **** typedef struct
 407:../firmware/CMSIS/core/core_cm4.h **** {
 408:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 409:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED0[24U];
 410:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 411:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RSERVED1[24U];
 412:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 413:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED2[24U];
 414:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 415:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED3[24U];
 416:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 417:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED4[56U];
 418:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 419:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED5[644U];
 420:../firmware/CMSIS/core/core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 421:../firmware/CMSIS/core/core_cm4.h **** }  NVIC_Type;
 422:../firmware/CMSIS/core/core_cm4.h **** 
 423:../firmware/CMSIS/core/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 424:../firmware/CMSIS/core/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 425:../firmware/CMSIS/core/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 426:../firmware/CMSIS/core/core_cm4.h **** 
 427:../firmware/CMSIS/core/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 428:../firmware/CMSIS/core/core_cm4.h **** 
 429:../firmware/CMSIS/core/core_cm4.h **** 
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 9


 430:../firmware/CMSIS/core/core_cm4.h **** /**
 431:../firmware/CMSIS/core/core_cm4.h ****   \ingroup  CMSIS_core_register
 432:../firmware/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 433:../firmware/CMSIS/core/core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 434:../firmware/CMSIS/core/core_cm4.h ****   @{
 435:../firmware/CMSIS/core/core_cm4.h ****  */
 436:../firmware/CMSIS/core/core_cm4.h **** 
 437:../firmware/CMSIS/core/core_cm4.h **** /**
 438:../firmware/CMSIS/core/core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 439:../firmware/CMSIS/core/core_cm4.h ****  */
 440:../firmware/CMSIS/core/core_cm4.h **** typedef struct
 441:../firmware/CMSIS/core/core_cm4.h **** {
 442:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 443:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 444:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 445:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 446:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 447:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 448:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 449:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 450:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 451:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 452:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 453:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 454:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 455:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 456:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 457:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 458:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 459:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 460:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 461:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED0[5U];
 462:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 463:../firmware/CMSIS/core/core_cm4.h **** } SCB_Type;
 464:../firmware/CMSIS/core/core_cm4.h **** 
 465:../firmware/CMSIS/core/core_cm4.h **** /* SCB CPUID Register Definitions */
 466:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 467:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 468:../firmware/CMSIS/core/core_cm4.h **** 
 469:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 470:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 471:../firmware/CMSIS/core/core_cm4.h **** 
 472:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 473:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 474:../firmware/CMSIS/core/core_cm4.h **** 
 475:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 476:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 477:../firmware/CMSIS/core/core_cm4.h **** 
 478:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 479:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 480:../firmware/CMSIS/core/core_cm4.h **** 
 481:../firmware/CMSIS/core/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 482:../firmware/CMSIS/core/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 483:../firmware/CMSIS/core/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 484:../firmware/CMSIS/core/core_cm4.h **** 
 485:../firmware/CMSIS/core/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 486:../firmware/CMSIS/core/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 10


 487:../firmware/CMSIS/core/core_cm4.h **** 
 488:../firmware/CMSIS/core/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 489:../firmware/CMSIS/core/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 490:../firmware/CMSIS/core/core_cm4.h **** 
 491:../firmware/CMSIS/core/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 492:../firmware/CMSIS/core/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 493:../firmware/CMSIS/core/core_cm4.h **** 
 494:../firmware/CMSIS/core/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 495:../firmware/CMSIS/core/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 496:../firmware/CMSIS/core/core_cm4.h **** 
 497:../firmware/CMSIS/core/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 498:../firmware/CMSIS/core/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 499:../firmware/CMSIS/core/core_cm4.h **** 
 500:../firmware/CMSIS/core/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 501:../firmware/CMSIS/core/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 502:../firmware/CMSIS/core/core_cm4.h **** 
 503:../firmware/CMSIS/core/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 504:../firmware/CMSIS/core/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 505:../firmware/CMSIS/core/core_cm4.h **** 
 506:../firmware/CMSIS/core/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 507:../firmware/CMSIS/core/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 508:../firmware/CMSIS/core/core_cm4.h **** 
 509:../firmware/CMSIS/core/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 510:../firmware/CMSIS/core/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 511:../firmware/CMSIS/core/core_cm4.h **** 
 512:../firmware/CMSIS/core/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 513:../firmware/CMSIS/core/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 514:../firmware/CMSIS/core/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 515:../firmware/CMSIS/core/core_cm4.h **** 
 516:../firmware/CMSIS/core/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 517:../firmware/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 518:../firmware/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 519:../firmware/CMSIS/core/core_cm4.h **** 
 520:../firmware/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 521:../firmware/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 522:../firmware/CMSIS/core/core_cm4.h **** 
 523:../firmware/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 524:../firmware/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 525:../firmware/CMSIS/core/core_cm4.h **** 
 526:../firmware/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 527:../firmware/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 528:../firmware/CMSIS/core/core_cm4.h **** 
 529:../firmware/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 530:../firmware/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 531:../firmware/CMSIS/core/core_cm4.h **** 
 532:../firmware/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 533:../firmware/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 534:../firmware/CMSIS/core/core_cm4.h **** 
 535:../firmware/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 536:../firmware/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 537:../firmware/CMSIS/core/core_cm4.h **** 
 538:../firmware/CMSIS/core/core_cm4.h **** /* SCB System Control Register Definitions */
 539:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 540:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 541:../firmware/CMSIS/core/core_cm4.h **** 
 542:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 543:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 11


 544:../firmware/CMSIS/core/core_cm4.h **** 
 545:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 546:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 547:../firmware/CMSIS/core/core_cm4.h **** 
 548:../firmware/CMSIS/core/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 549:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 550:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 551:../firmware/CMSIS/core/core_cm4.h **** 
 552:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 553:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 554:../firmware/CMSIS/core/core_cm4.h **** 
 555:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 556:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 557:../firmware/CMSIS/core/core_cm4.h **** 
 558:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 559:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 560:../firmware/CMSIS/core/core_cm4.h **** 
 561:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 562:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 563:../firmware/CMSIS/core/core_cm4.h **** 
 564:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 565:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 566:../firmware/CMSIS/core/core_cm4.h **** 
 567:../firmware/CMSIS/core/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 568:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 569:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 570:../firmware/CMSIS/core/core_cm4.h **** 
 571:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 572:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 573:../firmware/CMSIS/core/core_cm4.h **** 
 574:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 575:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 576:../firmware/CMSIS/core/core_cm4.h **** 
 577:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 578:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 579:../firmware/CMSIS/core/core_cm4.h **** 
 580:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 581:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 582:../firmware/CMSIS/core/core_cm4.h **** 
 583:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 584:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 585:../firmware/CMSIS/core/core_cm4.h **** 
 586:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 587:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 588:../firmware/CMSIS/core/core_cm4.h **** 
 589:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 590:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 591:../firmware/CMSIS/core/core_cm4.h **** 
 592:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 593:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 594:../firmware/CMSIS/core/core_cm4.h **** 
 595:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 596:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 597:../firmware/CMSIS/core/core_cm4.h **** 
 598:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 599:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 600:../firmware/CMSIS/core/core_cm4.h **** 
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 12


 601:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 602:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 603:../firmware/CMSIS/core/core_cm4.h **** 
 604:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 605:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 606:../firmware/CMSIS/core/core_cm4.h **** 
 607:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 608:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 609:../firmware/CMSIS/core/core_cm4.h **** 
 610:../firmware/CMSIS/core/core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 611:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 612:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 613:../firmware/CMSIS/core/core_cm4.h **** 
 614:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 615:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 616:../firmware/CMSIS/core/core_cm4.h **** 
 617:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 618:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 619:../firmware/CMSIS/core/core_cm4.h **** 
 620:../firmware/CMSIS/core/core_cm4.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 621:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 622:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 623:../firmware/CMSIS/core/core_cm4.h **** 
 624:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 625:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 626:../firmware/CMSIS/core/core_cm4.h **** 
 627:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 628:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 629:../firmware/CMSIS/core/core_cm4.h **** 
 630:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 631:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 632:../firmware/CMSIS/core/core_cm4.h **** 
 633:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 634:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 635:../firmware/CMSIS/core/core_cm4.h **** 
 636:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 637:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 638:../firmware/CMSIS/core/core_cm4.h **** 
 639:../firmware/CMSIS/core/core_cm4.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 640:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 641:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 642:../firmware/CMSIS/core/core_cm4.h **** 
 643:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 644:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 645:../firmware/CMSIS/core/core_cm4.h **** 
 646:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 647:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 648:../firmware/CMSIS/core/core_cm4.h **** 
 649:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 650:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 651:../firmware/CMSIS/core/core_cm4.h **** 
 652:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 653:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 654:../firmware/CMSIS/core/core_cm4.h **** 
 655:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 656:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 657:../firmware/CMSIS/core/core_cm4.h **** 
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 13


 658:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 659:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 660:../firmware/CMSIS/core/core_cm4.h **** 
 661:../firmware/CMSIS/core/core_cm4.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 662:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 663:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 664:../firmware/CMSIS/core/core_cm4.h **** 
 665:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 666:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 667:../firmware/CMSIS/core/core_cm4.h **** 
 668:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 669:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 670:../firmware/CMSIS/core/core_cm4.h **** 
 671:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 672:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 673:../firmware/CMSIS/core/core_cm4.h **** 
 674:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 675:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 676:../firmware/CMSIS/core/core_cm4.h **** 
 677:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 678:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 679:../firmware/CMSIS/core/core_cm4.h **** 
 680:../firmware/CMSIS/core/core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 681:../firmware/CMSIS/core/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 682:../firmware/CMSIS/core/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 683:../firmware/CMSIS/core/core_cm4.h **** 
 684:../firmware/CMSIS/core/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 685:../firmware/CMSIS/core/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 686:../firmware/CMSIS/core/core_cm4.h **** 
 687:../firmware/CMSIS/core/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 688:../firmware/CMSIS/core/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 689:../firmware/CMSIS/core/core_cm4.h **** 
 690:../firmware/CMSIS/core/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 691:../firmware/CMSIS/core/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 692:../firmware/CMSIS/core/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 693:../firmware/CMSIS/core/core_cm4.h **** 
 694:../firmware/CMSIS/core/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 695:../firmware/CMSIS/core/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 696:../firmware/CMSIS/core/core_cm4.h **** 
 697:../firmware/CMSIS/core/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 698:../firmware/CMSIS/core/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 699:../firmware/CMSIS/core/core_cm4.h **** 
 700:../firmware/CMSIS/core/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 701:../firmware/CMSIS/core/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 702:../firmware/CMSIS/core/core_cm4.h **** 
 703:../firmware/CMSIS/core/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 704:../firmware/CMSIS/core/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 705:../firmware/CMSIS/core/core_cm4.h **** 
 706:../firmware/CMSIS/core/core_cm4.h **** /*@} end of group CMSIS_SCB */
 707:../firmware/CMSIS/core/core_cm4.h **** 
 708:../firmware/CMSIS/core/core_cm4.h **** 
 709:../firmware/CMSIS/core/core_cm4.h **** /**
 710:../firmware/CMSIS/core/core_cm4.h ****   \ingroup  CMSIS_core_register
 711:../firmware/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 712:../firmware/CMSIS/core/core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 713:../firmware/CMSIS/core/core_cm4.h ****   @{
 714:../firmware/CMSIS/core/core_cm4.h ****  */
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 14


 715:../firmware/CMSIS/core/core_cm4.h **** 
 716:../firmware/CMSIS/core/core_cm4.h **** /**
 717:../firmware/CMSIS/core/core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 718:../firmware/CMSIS/core/core_cm4.h ****  */
 719:../firmware/CMSIS/core/core_cm4.h **** typedef struct
 720:../firmware/CMSIS/core/core_cm4.h **** {
 721:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED0[1U];
 722:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 723:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 724:../firmware/CMSIS/core/core_cm4.h **** } SCnSCB_Type;
 725:../firmware/CMSIS/core/core_cm4.h **** 
 726:../firmware/CMSIS/core/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 727:../firmware/CMSIS/core/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 728:../firmware/CMSIS/core/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 729:../firmware/CMSIS/core/core_cm4.h **** 
 730:../firmware/CMSIS/core/core_cm4.h **** /* Auxiliary Control Register Definitions */
 731:../firmware/CMSIS/core/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 732:../firmware/CMSIS/core/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 733:../firmware/CMSIS/core/core_cm4.h **** 
 734:../firmware/CMSIS/core/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 735:../firmware/CMSIS/core/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 736:../firmware/CMSIS/core/core_cm4.h **** 
 737:../firmware/CMSIS/core/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 738:../firmware/CMSIS/core/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 739:../firmware/CMSIS/core/core_cm4.h **** 
 740:../firmware/CMSIS/core/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 741:../firmware/CMSIS/core/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 742:../firmware/CMSIS/core/core_cm4.h **** 
 743:../firmware/CMSIS/core/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 744:../firmware/CMSIS/core/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 745:../firmware/CMSIS/core/core_cm4.h **** 
 746:../firmware/CMSIS/core/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 747:../firmware/CMSIS/core/core_cm4.h **** 
 748:../firmware/CMSIS/core/core_cm4.h **** 
 749:../firmware/CMSIS/core/core_cm4.h **** /**
 750:../firmware/CMSIS/core/core_cm4.h ****   \ingroup  CMSIS_core_register
 751:../firmware/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 752:../firmware/CMSIS/core/core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 753:../firmware/CMSIS/core/core_cm4.h ****   @{
 754:../firmware/CMSIS/core/core_cm4.h ****  */
 755:../firmware/CMSIS/core/core_cm4.h **** 
 756:../firmware/CMSIS/core/core_cm4.h **** /**
 757:../firmware/CMSIS/core/core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 758:../firmware/CMSIS/core/core_cm4.h ****  */
 759:../firmware/CMSIS/core/core_cm4.h **** typedef struct
 760:../firmware/CMSIS/core/core_cm4.h **** {
 761:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 762:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 763:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 764:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 765:../firmware/CMSIS/core/core_cm4.h **** } SysTick_Type;
 766:../firmware/CMSIS/core/core_cm4.h **** 
 767:../firmware/CMSIS/core/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 768:../firmware/CMSIS/core/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 769:../firmware/CMSIS/core/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 770:../firmware/CMSIS/core/core_cm4.h **** 
 771:../firmware/CMSIS/core/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 15


 772:../firmware/CMSIS/core/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 773:../firmware/CMSIS/core/core_cm4.h **** 
 774:../firmware/CMSIS/core/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 775:../firmware/CMSIS/core/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 776:../firmware/CMSIS/core/core_cm4.h **** 
 777:../firmware/CMSIS/core/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 778:../firmware/CMSIS/core/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 779:../firmware/CMSIS/core/core_cm4.h **** 
 780:../firmware/CMSIS/core/core_cm4.h **** /* SysTick Reload Register Definitions */
 781:../firmware/CMSIS/core/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 782:../firmware/CMSIS/core/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 783:../firmware/CMSIS/core/core_cm4.h **** 
 784:../firmware/CMSIS/core/core_cm4.h **** /* SysTick Current Register Definitions */
 785:../firmware/CMSIS/core/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 786:../firmware/CMSIS/core/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 787:../firmware/CMSIS/core/core_cm4.h **** 
 788:../firmware/CMSIS/core/core_cm4.h **** /* SysTick Calibration Register Definitions */
 789:../firmware/CMSIS/core/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 790:../firmware/CMSIS/core/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 791:../firmware/CMSIS/core/core_cm4.h **** 
 792:../firmware/CMSIS/core/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 793:../firmware/CMSIS/core/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 794:../firmware/CMSIS/core/core_cm4.h **** 
 795:../firmware/CMSIS/core/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 796:../firmware/CMSIS/core/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 797:../firmware/CMSIS/core/core_cm4.h **** 
 798:../firmware/CMSIS/core/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 799:../firmware/CMSIS/core/core_cm4.h **** 
 800:../firmware/CMSIS/core/core_cm4.h **** 
 801:../firmware/CMSIS/core/core_cm4.h **** /**
 802:../firmware/CMSIS/core/core_cm4.h ****   \ingroup  CMSIS_core_register
 803:../firmware/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 804:../firmware/CMSIS/core/core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 805:../firmware/CMSIS/core/core_cm4.h ****   @{
 806:../firmware/CMSIS/core/core_cm4.h ****  */
 807:../firmware/CMSIS/core/core_cm4.h **** 
 808:../firmware/CMSIS/core/core_cm4.h **** /**
 809:../firmware/CMSIS/core/core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 810:../firmware/CMSIS/core/core_cm4.h ****  */
 811:../firmware/CMSIS/core/core_cm4.h **** typedef struct
 812:../firmware/CMSIS/core/core_cm4.h **** {
 813:../firmware/CMSIS/core/core_cm4.h ****   __OM  union
 814:../firmware/CMSIS/core/core_cm4.h ****   {
 815:../firmware/CMSIS/core/core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 816:../firmware/CMSIS/core/core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 817:../firmware/CMSIS/core/core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 818:../firmware/CMSIS/core/core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 819:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED0[864U];
 820:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 821:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED1[15U];
 822:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 823:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED2[15U];
 824:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 825:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED3[29U];
 826:../firmware/CMSIS/core/core_cm4.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 827:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 828:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 16


 829:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED4[43U];
 830:../firmware/CMSIS/core/core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 831:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 832:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED5[6U];
 833:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 834:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 835:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 836:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 837:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 838:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 839:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 840:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 841:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 842:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 843:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 844:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 845:../firmware/CMSIS/core/core_cm4.h **** } ITM_Type;
 846:../firmware/CMSIS/core/core_cm4.h **** 
 847:../firmware/CMSIS/core/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 848:../firmware/CMSIS/core/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 849:../firmware/CMSIS/core/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 850:../firmware/CMSIS/core/core_cm4.h **** 
 851:../firmware/CMSIS/core/core_cm4.h **** /* ITM Trace Control Register Definitions */
 852:../firmware/CMSIS/core/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 853:../firmware/CMSIS/core/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 854:../firmware/CMSIS/core/core_cm4.h **** 
 855:../firmware/CMSIS/core/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 856:../firmware/CMSIS/core/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 857:../firmware/CMSIS/core/core_cm4.h **** 
 858:../firmware/CMSIS/core/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 859:../firmware/CMSIS/core/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 860:../firmware/CMSIS/core/core_cm4.h **** 
 861:../firmware/CMSIS/core/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 862:../firmware/CMSIS/core/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 863:../firmware/CMSIS/core/core_cm4.h **** 
 864:../firmware/CMSIS/core/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 865:../firmware/CMSIS/core/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 866:../firmware/CMSIS/core/core_cm4.h **** 
 867:../firmware/CMSIS/core/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 868:../firmware/CMSIS/core/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 869:../firmware/CMSIS/core/core_cm4.h **** 
 870:../firmware/CMSIS/core/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 871:../firmware/CMSIS/core/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 872:../firmware/CMSIS/core/core_cm4.h **** 
 873:../firmware/CMSIS/core/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 874:../firmware/CMSIS/core/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 875:../firmware/CMSIS/core/core_cm4.h **** 
 876:../firmware/CMSIS/core/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 877:../firmware/CMSIS/core/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 878:../firmware/CMSIS/core/core_cm4.h **** 
 879:../firmware/CMSIS/core/core_cm4.h **** /* ITM Integration Write Register Definitions */
 880:../firmware/CMSIS/core/core_cm4.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 881:../firmware/CMSIS/core/core_cm4.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 882:../firmware/CMSIS/core/core_cm4.h **** 
 883:../firmware/CMSIS/core/core_cm4.h **** /* ITM Integration Read Register Definitions */
 884:../firmware/CMSIS/core/core_cm4.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 885:../firmware/CMSIS/core/core_cm4.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 17


 886:../firmware/CMSIS/core/core_cm4.h **** 
 887:../firmware/CMSIS/core/core_cm4.h **** /* ITM Integration Mode Control Register Definitions */
 888:../firmware/CMSIS/core/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 889:../firmware/CMSIS/core/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 890:../firmware/CMSIS/core/core_cm4.h **** 
 891:../firmware/CMSIS/core/core_cm4.h **** /* ITM Lock Status Register Definitions */
 892:../firmware/CMSIS/core/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 893:../firmware/CMSIS/core/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 894:../firmware/CMSIS/core/core_cm4.h **** 
 895:../firmware/CMSIS/core/core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 896:../firmware/CMSIS/core/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 897:../firmware/CMSIS/core/core_cm4.h **** 
 898:../firmware/CMSIS/core/core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 899:../firmware/CMSIS/core/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 900:../firmware/CMSIS/core/core_cm4.h **** 
 901:../firmware/CMSIS/core/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 902:../firmware/CMSIS/core/core_cm4.h **** 
 903:../firmware/CMSIS/core/core_cm4.h **** 
 904:../firmware/CMSIS/core/core_cm4.h **** /**
 905:../firmware/CMSIS/core/core_cm4.h ****   \ingroup  CMSIS_core_register
 906:../firmware/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 907:../firmware/CMSIS/core/core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 908:../firmware/CMSIS/core/core_cm4.h ****   @{
 909:../firmware/CMSIS/core/core_cm4.h ****  */
 910:../firmware/CMSIS/core/core_cm4.h **** 
 911:../firmware/CMSIS/core/core_cm4.h **** /**
 912:../firmware/CMSIS/core/core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 913:../firmware/CMSIS/core/core_cm4.h ****  */
 914:../firmware/CMSIS/core/core_cm4.h **** typedef struct
 915:../firmware/CMSIS/core/core_cm4.h **** {
 916:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 917:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 918:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 919:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 920:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 921:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 922:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 923:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 924:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 925:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 926:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 927:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED0[1U];
 928:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 929:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 930:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 931:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED1[1U];
 932:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 933:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 934:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 935:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED2[1U];
 936:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 937:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 938:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 939:../firmware/CMSIS/core/core_cm4.h **** } DWT_Type;
 940:../firmware/CMSIS/core/core_cm4.h **** 
 941:../firmware/CMSIS/core/core_cm4.h **** /* DWT Control Register Definitions */
 942:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 18


 943:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 944:../firmware/CMSIS/core/core_cm4.h **** 
 945:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 946:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 947:../firmware/CMSIS/core/core_cm4.h **** 
 948:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 949:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 950:../firmware/CMSIS/core/core_cm4.h **** 
 951:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 952:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 953:../firmware/CMSIS/core/core_cm4.h **** 
 954:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 955:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 956:../firmware/CMSIS/core/core_cm4.h **** 
 957:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 958:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 959:../firmware/CMSIS/core/core_cm4.h **** 
 960:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 961:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 962:../firmware/CMSIS/core/core_cm4.h **** 
 963:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 964:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 965:../firmware/CMSIS/core/core_cm4.h **** 
 966:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 967:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 968:../firmware/CMSIS/core/core_cm4.h **** 
 969:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 970:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 971:../firmware/CMSIS/core/core_cm4.h **** 
 972:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 973:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 974:../firmware/CMSIS/core/core_cm4.h **** 
 975:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 976:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 977:../firmware/CMSIS/core/core_cm4.h **** 
 978:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 979:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 980:../firmware/CMSIS/core/core_cm4.h **** 
 981:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 982:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 983:../firmware/CMSIS/core/core_cm4.h **** 
 984:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 985:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 986:../firmware/CMSIS/core/core_cm4.h **** 
 987:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 988:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 989:../firmware/CMSIS/core/core_cm4.h **** 
 990:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 991:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 992:../firmware/CMSIS/core/core_cm4.h **** 
 993:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 994:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 995:../firmware/CMSIS/core/core_cm4.h **** 
 996:../firmware/CMSIS/core/core_cm4.h **** /* DWT CPI Count Register Definitions */
 997:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 998:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 999:../firmware/CMSIS/core/core_cm4.h **** 
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 19


1000:../firmware/CMSIS/core/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
1001:../firmware/CMSIS/core/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
1002:../firmware/CMSIS/core/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
1003:../firmware/CMSIS/core/core_cm4.h **** 
1004:../firmware/CMSIS/core/core_cm4.h **** /* DWT Sleep Count Register Definitions */
1005:../firmware/CMSIS/core/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
1006:../firmware/CMSIS/core/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
1007:../firmware/CMSIS/core/core_cm4.h **** 
1008:../firmware/CMSIS/core/core_cm4.h **** /* DWT LSU Count Register Definitions */
1009:../firmware/CMSIS/core/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
1010:../firmware/CMSIS/core/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1011:../firmware/CMSIS/core/core_cm4.h **** 
1012:../firmware/CMSIS/core/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
1013:../firmware/CMSIS/core/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1014:../firmware/CMSIS/core/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1015:../firmware/CMSIS/core/core_cm4.h **** 
1016:../firmware/CMSIS/core/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1017:../firmware/CMSIS/core/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1018:../firmware/CMSIS/core/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1019:../firmware/CMSIS/core/core_cm4.h **** 
1020:../firmware/CMSIS/core/core_cm4.h **** /* DWT Comparator Function Register Definitions */
1021:../firmware/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1022:../firmware/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1023:../firmware/CMSIS/core/core_cm4.h **** 
1024:../firmware/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1025:../firmware/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1026:../firmware/CMSIS/core/core_cm4.h **** 
1027:../firmware/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1028:../firmware/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1029:../firmware/CMSIS/core/core_cm4.h **** 
1030:../firmware/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1031:../firmware/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1032:../firmware/CMSIS/core/core_cm4.h **** 
1033:../firmware/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1034:../firmware/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1035:../firmware/CMSIS/core/core_cm4.h **** 
1036:../firmware/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1037:../firmware/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1038:../firmware/CMSIS/core/core_cm4.h **** 
1039:../firmware/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1040:../firmware/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1041:../firmware/CMSIS/core/core_cm4.h **** 
1042:../firmware/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1043:../firmware/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1044:../firmware/CMSIS/core/core_cm4.h **** 
1045:../firmware/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1046:../firmware/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1047:../firmware/CMSIS/core/core_cm4.h **** 
1048:../firmware/CMSIS/core/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1049:../firmware/CMSIS/core/core_cm4.h **** 
1050:../firmware/CMSIS/core/core_cm4.h **** 
1051:../firmware/CMSIS/core/core_cm4.h **** /**
1052:../firmware/CMSIS/core/core_cm4.h ****   \ingroup  CMSIS_core_register
1053:../firmware/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1054:../firmware/CMSIS/core/core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1055:../firmware/CMSIS/core/core_cm4.h ****   @{
1056:../firmware/CMSIS/core/core_cm4.h ****  */
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 20


1057:../firmware/CMSIS/core/core_cm4.h **** 
1058:../firmware/CMSIS/core/core_cm4.h **** /**
1059:../firmware/CMSIS/core/core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1060:../firmware/CMSIS/core/core_cm4.h ****  */
1061:../firmware/CMSIS/core/core_cm4.h **** typedef struct
1062:../firmware/CMSIS/core/core_cm4.h **** {
1063:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1064:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1065:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED0[2U];
1066:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1067:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED1[55U];
1068:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1069:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED2[131U];
1070:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1071:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1072:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1073:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED3[759U];
1074:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1075:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1076:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1077:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED4[1U];
1078:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1079:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1080:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1081:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED5[39U];
1082:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1083:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1084:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED7[8U];
1085:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1086:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1087:../firmware/CMSIS/core/core_cm4.h **** } TPI_Type;
1088:../firmware/CMSIS/core/core_cm4.h **** 
1089:../firmware/CMSIS/core/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1090:../firmware/CMSIS/core/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1091:../firmware/CMSIS/core/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1092:../firmware/CMSIS/core/core_cm4.h **** 
1093:../firmware/CMSIS/core/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1094:../firmware/CMSIS/core/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1095:../firmware/CMSIS/core/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1096:../firmware/CMSIS/core/core_cm4.h **** 
1097:../firmware/CMSIS/core/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1098:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1099:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1100:../firmware/CMSIS/core/core_cm4.h **** 
1101:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1102:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1103:../firmware/CMSIS/core/core_cm4.h **** 
1104:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1105:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1106:../firmware/CMSIS/core/core_cm4.h **** 
1107:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1108:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1109:../firmware/CMSIS/core/core_cm4.h **** 
1110:../firmware/CMSIS/core/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1111:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1112:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1113:../firmware/CMSIS/core/core_cm4.h **** 
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 21


1114:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1115:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1116:../firmware/CMSIS/core/core_cm4.h **** 
1117:../firmware/CMSIS/core/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1118:../firmware/CMSIS/core/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1119:../firmware/CMSIS/core/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1120:../firmware/CMSIS/core/core_cm4.h **** 
1121:../firmware/CMSIS/core/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1122:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1123:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1124:../firmware/CMSIS/core/core_cm4.h **** 
1125:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1126:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1127:../firmware/CMSIS/core/core_cm4.h **** 
1128:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1129:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1130:../firmware/CMSIS/core/core_cm4.h **** 
1131:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1132:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1133:../firmware/CMSIS/core/core_cm4.h **** 
1134:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1135:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1136:../firmware/CMSIS/core/core_cm4.h **** 
1137:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1138:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1139:../firmware/CMSIS/core/core_cm4.h **** 
1140:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1141:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1142:../firmware/CMSIS/core/core_cm4.h **** 
1143:../firmware/CMSIS/core/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1144:../firmware/CMSIS/core/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1145:../firmware/CMSIS/core/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1146:../firmware/CMSIS/core/core_cm4.h **** 
1147:../firmware/CMSIS/core/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1148:../firmware/CMSIS/core/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1149:../firmware/CMSIS/core/core_cm4.h **** 
1150:../firmware/CMSIS/core/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1151:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1152:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1153:../firmware/CMSIS/core/core_cm4.h **** 
1154:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1155:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1156:../firmware/CMSIS/core/core_cm4.h **** 
1157:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1158:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1159:../firmware/CMSIS/core/core_cm4.h **** 
1160:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1161:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1162:../firmware/CMSIS/core/core_cm4.h **** 
1163:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1164:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1165:../firmware/CMSIS/core/core_cm4.h **** 
1166:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1167:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1168:../firmware/CMSIS/core/core_cm4.h **** 
1169:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1170:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 22


1171:../firmware/CMSIS/core/core_cm4.h **** 
1172:../firmware/CMSIS/core/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1173:../firmware/CMSIS/core/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1174:../firmware/CMSIS/core/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1175:../firmware/CMSIS/core/core_cm4.h **** 
1176:../firmware/CMSIS/core/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1177:../firmware/CMSIS/core/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1178:../firmware/CMSIS/core/core_cm4.h **** 
1179:../firmware/CMSIS/core/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1180:../firmware/CMSIS/core/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1181:../firmware/CMSIS/core/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1182:../firmware/CMSIS/core/core_cm4.h **** 
1183:../firmware/CMSIS/core/core_cm4.h **** /* TPI DEVID Register Definitions */
1184:../firmware/CMSIS/core/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1185:../firmware/CMSIS/core/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1186:../firmware/CMSIS/core/core_cm4.h **** 
1187:../firmware/CMSIS/core/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1188:../firmware/CMSIS/core/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1189:../firmware/CMSIS/core/core_cm4.h **** 
1190:../firmware/CMSIS/core/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1191:../firmware/CMSIS/core/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1192:../firmware/CMSIS/core/core_cm4.h **** 
1193:../firmware/CMSIS/core/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1194:../firmware/CMSIS/core/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1195:../firmware/CMSIS/core/core_cm4.h **** 
1196:../firmware/CMSIS/core/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1197:../firmware/CMSIS/core/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1198:../firmware/CMSIS/core/core_cm4.h **** 
1199:../firmware/CMSIS/core/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1200:../firmware/CMSIS/core/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1201:../firmware/CMSIS/core/core_cm4.h **** 
1202:../firmware/CMSIS/core/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1203:../firmware/CMSIS/core/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1204:../firmware/CMSIS/core/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1205:../firmware/CMSIS/core/core_cm4.h **** 
1206:../firmware/CMSIS/core/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1207:../firmware/CMSIS/core/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1208:../firmware/CMSIS/core/core_cm4.h **** 
1209:../firmware/CMSIS/core/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1210:../firmware/CMSIS/core/core_cm4.h **** 
1211:../firmware/CMSIS/core/core_cm4.h **** 
1212:../firmware/CMSIS/core/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1213:../firmware/CMSIS/core/core_cm4.h **** /**
1214:../firmware/CMSIS/core/core_cm4.h ****   \ingroup  CMSIS_core_register
1215:../firmware/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1216:../firmware/CMSIS/core/core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1217:../firmware/CMSIS/core/core_cm4.h ****   @{
1218:../firmware/CMSIS/core/core_cm4.h ****  */
1219:../firmware/CMSIS/core/core_cm4.h **** 
1220:../firmware/CMSIS/core/core_cm4.h **** /**
1221:../firmware/CMSIS/core/core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1222:../firmware/CMSIS/core/core_cm4.h ****  */
1223:../firmware/CMSIS/core/core_cm4.h **** typedef struct
1224:../firmware/CMSIS/core/core_cm4.h **** {
1225:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1226:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1227:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 23


1228:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1229:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1230:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1231:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1232:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1233:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1234:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1235:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1236:../firmware/CMSIS/core/core_cm4.h **** } MPU_Type;
1237:../firmware/CMSIS/core/core_cm4.h **** 
1238:../firmware/CMSIS/core/core_cm4.h **** #define MPU_TYPE_RALIASES                  4U
1239:../firmware/CMSIS/core/core_cm4.h **** 
1240:../firmware/CMSIS/core/core_cm4.h **** /* MPU Type Register Definitions */
1241:../firmware/CMSIS/core/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1242:../firmware/CMSIS/core/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1243:../firmware/CMSIS/core/core_cm4.h **** 
1244:../firmware/CMSIS/core/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1245:../firmware/CMSIS/core/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1246:../firmware/CMSIS/core/core_cm4.h **** 
1247:../firmware/CMSIS/core/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1248:../firmware/CMSIS/core/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1249:../firmware/CMSIS/core/core_cm4.h **** 
1250:../firmware/CMSIS/core/core_cm4.h **** /* MPU Control Register Definitions */
1251:../firmware/CMSIS/core/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1252:../firmware/CMSIS/core/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1253:../firmware/CMSIS/core/core_cm4.h **** 
1254:../firmware/CMSIS/core/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1255:../firmware/CMSIS/core/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1256:../firmware/CMSIS/core/core_cm4.h **** 
1257:../firmware/CMSIS/core/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1258:../firmware/CMSIS/core/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1259:../firmware/CMSIS/core/core_cm4.h **** 
1260:../firmware/CMSIS/core/core_cm4.h **** /* MPU Region Number Register Definitions */
1261:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1262:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1263:../firmware/CMSIS/core/core_cm4.h **** 
1264:../firmware/CMSIS/core/core_cm4.h **** /* MPU Region Base Address Register Definitions */
1265:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1266:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1267:../firmware/CMSIS/core/core_cm4.h **** 
1268:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1269:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1270:../firmware/CMSIS/core/core_cm4.h **** 
1271:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1272:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1273:../firmware/CMSIS/core/core_cm4.h **** 
1274:../firmware/CMSIS/core/core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1275:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1276:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1277:../firmware/CMSIS/core/core_cm4.h **** 
1278:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1279:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1280:../firmware/CMSIS/core/core_cm4.h **** 
1281:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1282:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1283:../firmware/CMSIS/core/core_cm4.h **** 
1284:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 24


1285:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1286:../firmware/CMSIS/core/core_cm4.h **** 
1287:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1288:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1289:../firmware/CMSIS/core/core_cm4.h **** 
1290:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1291:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1292:../firmware/CMSIS/core/core_cm4.h **** 
1293:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1294:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1295:../firmware/CMSIS/core/core_cm4.h **** 
1296:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1297:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1298:../firmware/CMSIS/core/core_cm4.h **** 
1299:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1300:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1301:../firmware/CMSIS/core/core_cm4.h **** 
1302:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1303:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1304:../firmware/CMSIS/core/core_cm4.h **** 
1305:../firmware/CMSIS/core/core_cm4.h **** /*@} end of group CMSIS_MPU */
1306:../firmware/CMSIS/core/core_cm4.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1307:../firmware/CMSIS/core/core_cm4.h **** 
1308:../firmware/CMSIS/core/core_cm4.h **** 
1309:../firmware/CMSIS/core/core_cm4.h **** /**
1310:../firmware/CMSIS/core/core_cm4.h ****   \ingroup  CMSIS_core_register
1311:../firmware/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1312:../firmware/CMSIS/core/core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1313:../firmware/CMSIS/core/core_cm4.h ****   @{
1314:../firmware/CMSIS/core/core_cm4.h ****  */
1315:../firmware/CMSIS/core/core_cm4.h **** 
1316:../firmware/CMSIS/core/core_cm4.h **** /**
1317:../firmware/CMSIS/core/core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1318:../firmware/CMSIS/core/core_cm4.h ****  */
1319:../firmware/CMSIS/core/core_cm4.h **** typedef struct
1320:../firmware/CMSIS/core/core_cm4.h **** {
1321:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED0[1U];
1322:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1323:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1324:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1325:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1326:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1327:../firmware/CMSIS/core/core_cm4.h **** } FPU_Type;
1328:../firmware/CMSIS/core/core_cm4.h **** 
1329:../firmware/CMSIS/core/core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1330:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1331:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1332:../firmware/CMSIS/core/core_cm4.h **** 
1333:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1334:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1335:../firmware/CMSIS/core/core_cm4.h **** 
1336:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1337:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1338:../firmware/CMSIS/core/core_cm4.h **** 
1339:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1340:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1341:../firmware/CMSIS/core/core_cm4.h **** 
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 25


1342:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1343:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1344:../firmware/CMSIS/core/core_cm4.h **** 
1345:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1346:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1347:../firmware/CMSIS/core/core_cm4.h **** 
1348:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1349:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1350:../firmware/CMSIS/core/core_cm4.h **** 
1351:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1352:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1353:../firmware/CMSIS/core/core_cm4.h **** 
1354:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1355:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1356:../firmware/CMSIS/core/core_cm4.h **** 
1357:../firmware/CMSIS/core/core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1358:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1359:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1360:../firmware/CMSIS/core/core_cm4.h **** 
1361:../firmware/CMSIS/core/core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1362:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1363:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1364:../firmware/CMSIS/core/core_cm4.h **** 
1365:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1366:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1367:../firmware/CMSIS/core/core_cm4.h **** 
1368:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1369:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1370:../firmware/CMSIS/core/core_cm4.h **** 
1371:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1372:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1373:../firmware/CMSIS/core/core_cm4.h **** 
1374:../firmware/CMSIS/core/core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1375:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1376:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1377:../firmware/CMSIS/core/core_cm4.h **** 
1378:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1379:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1380:../firmware/CMSIS/core/core_cm4.h **** 
1381:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1382:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1383:../firmware/CMSIS/core/core_cm4.h **** 
1384:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1385:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1386:../firmware/CMSIS/core/core_cm4.h **** 
1387:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1388:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1389:../firmware/CMSIS/core/core_cm4.h **** 
1390:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1391:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1392:../firmware/CMSIS/core/core_cm4.h **** 
1393:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1394:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1395:../firmware/CMSIS/core/core_cm4.h **** 
1396:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1397:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1398:../firmware/CMSIS/core/core_cm4.h **** 
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 26


1399:../firmware/CMSIS/core/core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1400:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1401:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1402:../firmware/CMSIS/core/core_cm4.h **** 
1403:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1404:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1405:../firmware/CMSIS/core/core_cm4.h **** 
1406:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1407:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1408:../firmware/CMSIS/core/core_cm4.h **** 
1409:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1410:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1411:../firmware/CMSIS/core/core_cm4.h **** 
1412:../firmware/CMSIS/core/core_cm4.h **** /*@} end of group CMSIS_FPU */
1413:../firmware/CMSIS/core/core_cm4.h **** 
1414:../firmware/CMSIS/core/core_cm4.h **** 
1415:../firmware/CMSIS/core/core_cm4.h **** /**
1416:../firmware/CMSIS/core/core_cm4.h ****   \ingroup  CMSIS_core_register
1417:../firmware/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1418:../firmware/CMSIS/core/core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1419:../firmware/CMSIS/core/core_cm4.h ****   @{
1420:../firmware/CMSIS/core/core_cm4.h ****  */
1421:../firmware/CMSIS/core/core_cm4.h **** 
1422:../firmware/CMSIS/core/core_cm4.h **** /**
1423:../firmware/CMSIS/core/core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1424:../firmware/CMSIS/core/core_cm4.h ****  */
1425:../firmware/CMSIS/core/core_cm4.h **** typedef struct
1426:../firmware/CMSIS/core/core_cm4.h **** {
1427:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1428:../firmware/CMSIS/core/core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1429:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1430:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1431:../firmware/CMSIS/core/core_cm4.h **** } CoreDebug_Type;
1432:../firmware/CMSIS/core/core_cm4.h **** 
1433:../firmware/CMSIS/core/core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1434:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1435:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1436:../firmware/CMSIS/core/core_cm4.h **** 
1437:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1438:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1439:../firmware/CMSIS/core/core_cm4.h **** 
1440:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1441:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1442:../firmware/CMSIS/core/core_cm4.h **** 
1443:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1444:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1445:../firmware/CMSIS/core/core_cm4.h **** 
1446:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1447:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1448:../firmware/CMSIS/core/core_cm4.h **** 
1449:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1450:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1451:../firmware/CMSIS/core/core_cm4.h **** 
1452:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1453:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1454:../firmware/CMSIS/core/core_cm4.h **** 
1455:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 27


1456:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1457:../firmware/CMSIS/core/core_cm4.h **** 
1458:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1459:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1460:../firmware/CMSIS/core/core_cm4.h **** 
1461:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1462:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1463:../firmware/CMSIS/core/core_cm4.h **** 
1464:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1465:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1466:../firmware/CMSIS/core/core_cm4.h **** 
1467:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1468:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1469:../firmware/CMSIS/core/core_cm4.h **** 
1470:../firmware/CMSIS/core/core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1471:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1472:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1473:../firmware/CMSIS/core/core_cm4.h **** 
1474:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1475:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1476:../firmware/CMSIS/core/core_cm4.h **** 
1477:../firmware/CMSIS/core/core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1478:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1479:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1480:../firmware/CMSIS/core/core_cm4.h **** 
1481:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1482:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1483:../firmware/CMSIS/core/core_cm4.h **** 
1484:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1485:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1486:../firmware/CMSIS/core/core_cm4.h **** 
1487:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1488:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1489:../firmware/CMSIS/core/core_cm4.h **** 
1490:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1491:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1492:../firmware/CMSIS/core/core_cm4.h **** 
1493:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1494:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1495:../firmware/CMSIS/core/core_cm4.h **** 
1496:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1497:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1498:../firmware/CMSIS/core/core_cm4.h **** 
1499:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1500:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1501:../firmware/CMSIS/core/core_cm4.h **** 
1502:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1503:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1504:../firmware/CMSIS/core/core_cm4.h **** 
1505:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1506:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1507:../firmware/CMSIS/core/core_cm4.h **** 
1508:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1509:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1510:../firmware/CMSIS/core/core_cm4.h **** 
1511:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1512:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 28


1513:../firmware/CMSIS/core/core_cm4.h **** 
1514:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1515:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1516:../firmware/CMSIS/core/core_cm4.h **** 
1517:../firmware/CMSIS/core/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1518:../firmware/CMSIS/core/core_cm4.h **** 
1519:../firmware/CMSIS/core/core_cm4.h **** 
1520:../firmware/CMSIS/core/core_cm4.h **** /**
1521:../firmware/CMSIS/core/core_cm4.h ****   \ingroup    CMSIS_core_register
1522:../firmware/CMSIS/core/core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1523:../firmware/CMSIS/core/core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1524:../firmware/CMSIS/core/core_cm4.h ****   @{
1525:../firmware/CMSIS/core/core_cm4.h ****  */
1526:../firmware/CMSIS/core/core_cm4.h **** 
1527:../firmware/CMSIS/core/core_cm4.h **** /**
1528:../firmware/CMSIS/core/core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1529:../firmware/CMSIS/core/core_cm4.h ****   \param[in] field  Name of the register bit field.
1530:../firmware/CMSIS/core/core_cm4.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1531:../firmware/CMSIS/core/core_cm4.h ****   \return           Masked and shifted value.
1532:../firmware/CMSIS/core/core_cm4.h **** */
1533:../firmware/CMSIS/core/core_cm4.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1534:../firmware/CMSIS/core/core_cm4.h **** 
1535:../firmware/CMSIS/core/core_cm4.h **** /**
1536:../firmware/CMSIS/core/core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1537:../firmware/CMSIS/core/core_cm4.h ****   \param[in] field  Name of the register bit field.
1538:../firmware/CMSIS/core/core_cm4.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1539:../firmware/CMSIS/core/core_cm4.h ****   \return           Masked and shifted bit field value.
1540:../firmware/CMSIS/core/core_cm4.h **** */
1541:../firmware/CMSIS/core/core_cm4.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1542:../firmware/CMSIS/core/core_cm4.h **** 
1543:../firmware/CMSIS/core/core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1544:../firmware/CMSIS/core/core_cm4.h **** 
1545:../firmware/CMSIS/core/core_cm4.h **** 
1546:../firmware/CMSIS/core/core_cm4.h **** /**
1547:../firmware/CMSIS/core/core_cm4.h ****   \ingroup    CMSIS_core_register
1548:../firmware/CMSIS/core/core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1549:../firmware/CMSIS/core/core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1550:../firmware/CMSIS/core/core_cm4.h ****   @{
1551:../firmware/CMSIS/core/core_cm4.h ****  */
1552:../firmware/CMSIS/core/core_cm4.h **** 
1553:../firmware/CMSIS/core/core_cm4.h **** /* Memory mapping of Core Hardware */
1554:../firmware/CMSIS/core/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1555:../firmware/CMSIS/core/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1556:../firmware/CMSIS/core/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1557:../firmware/CMSIS/core/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1558:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1559:../firmware/CMSIS/core/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1560:../firmware/CMSIS/core/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1561:../firmware/CMSIS/core/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1562:../firmware/CMSIS/core/core_cm4.h **** 
1563:../firmware/CMSIS/core/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1564:../firmware/CMSIS/core/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1565:../firmware/CMSIS/core/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1566:../firmware/CMSIS/core/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1567:../firmware/CMSIS/core/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1568:../firmware/CMSIS/core/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1569:../firmware/CMSIS/core/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 29


1570:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1571:../firmware/CMSIS/core/core_cm4.h **** 
1572:../firmware/CMSIS/core/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1573:../firmware/CMSIS/core/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1574:../firmware/CMSIS/core/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1575:../firmware/CMSIS/core/core_cm4.h **** #endif
1576:../firmware/CMSIS/core/core_cm4.h **** 
1577:../firmware/CMSIS/core/core_cm4.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1578:../firmware/CMSIS/core/core_cm4.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1579:../firmware/CMSIS/core/core_cm4.h **** 
1580:../firmware/CMSIS/core/core_cm4.h **** /*@} */
1581:../firmware/CMSIS/core/core_cm4.h **** 
1582:../firmware/CMSIS/core/core_cm4.h **** 
1583:../firmware/CMSIS/core/core_cm4.h **** 
1584:../firmware/CMSIS/core/core_cm4.h **** /*******************************************************************************
1585:../firmware/CMSIS/core/core_cm4.h ****  *                Hardware Abstraction Layer
1586:../firmware/CMSIS/core/core_cm4.h ****   Core Function Interface contains:
1587:../firmware/CMSIS/core/core_cm4.h ****   - Core NVIC Functions
1588:../firmware/CMSIS/core/core_cm4.h ****   - Core SysTick Functions
1589:../firmware/CMSIS/core/core_cm4.h ****   - Core Debug Functions
1590:../firmware/CMSIS/core/core_cm4.h ****   - Core Register Access Functions
1591:../firmware/CMSIS/core/core_cm4.h ****  ******************************************************************************/
1592:../firmware/CMSIS/core/core_cm4.h **** /**
1593:../firmware/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1594:../firmware/CMSIS/core/core_cm4.h **** */
1595:../firmware/CMSIS/core/core_cm4.h **** 
1596:../firmware/CMSIS/core/core_cm4.h **** 
1597:../firmware/CMSIS/core/core_cm4.h **** 
1598:../firmware/CMSIS/core/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1599:../firmware/CMSIS/core/core_cm4.h **** /**
1600:../firmware/CMSIS/core/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1601:../firmware/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1602:../firmware/CMSIS/core/core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1603:../firmware/CMSIS/core/core_cm4.h ****   @{
1604:../firmware/CMSIS/core/core_cm4.h ****  */
1605:../firmware/CMSIS/core/core_cm4.h **** 
1606:../firmware/CMSIS/core/core_cm4.h **** #ifdef CMSIS_NVIC_VIRTUAL
1607:../firmware/CMSIS/core/core_cm4.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1608:../firmware/CMSIS/core/core_cm4.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1609:../firmware/CMSIS/core/core_cm4.h ****   #endif
1610:../firmware/CMSIS/core/core_cm4.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1611:../firmware/CMSIS/core/core_cm4.h **** #else
1612:../firmware/CMSIS/core/core_cm4.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1613:../firmware/CMSIS/core/core_cm4.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1614:../firmware/CMSIS/core/core_cm4.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1615:../firmware/CMSIS/core/core_cm4.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1616:../firmware/CMSIS/core/core_cm4.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1617:../firmware/CMSIS/core/core_cm4.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1618:../firmware/CMSIS/core/core_cm4.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1619:../firmware/CMSIS/core/core_cm4.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1620:../firmware/CMSIS/core/core_cm4.h ****   #define NVIC_GetActive              __NVIC_GetActive
1621:../firmware/CMSIS/core/core_cm4.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1622:../firmware/CMSIS/core/core_cm4.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1623:../firmware/CMSIS/core/core_cm4.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1624:../firmware/CMSIS/core/core_cm4.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1625:../firmware/CMSIS/core/core_cm4.h **** 
1626:../firmware/CMSIS/core/core_cm4.h **** #ifdef CMSIS_VECTAB_VIRTUAL
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 30


1627:../firmware/CMSIS/core/core_cm4.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1628:../firmware/CMSIS/core/core_cm4.h ****    #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1629:../firmware/CMSIS/core/core_cm4.h ****   #endif
1630:../firmware/CMSIS/core/core_cm4.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1631:../firmware/CMSIS/core/core_cm4.h **** #else
1632:../firmware/CMSIS/core/core_cm4.h ****   #define NVIC_SetVector              __NVIC_SetVector
1633:../firmware/CMSIS/core/core_cm4.h ****   #define NVIC_GetVector              __NVIC_GetVector
1634:../firmware/CMSIS/core/core_cm4.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1635:../firmware/CMSIS/core/core_cm4.h **** 
1636:../firmware/CMSIS/core/core_cm4.h **** #define NVIC_USER_IRQ_OFFSET          16
1637:../firmware/CMSIS/core/core_cm4.h **** 
1638:../firmware/CMSIS/core/core_cm4.h **** 
1639:../firmware/CMSIS/core/core_cm4.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1640:../firmware/CMSIS/core/core_cm4.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1641:../firmware/CMSIS/core/core_cm4.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1642:../firmware/CMSIS/core/core_cm4.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1643:../firmware/CMSIS/core/core_cm4.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1644:../firmware/CMSIS/core/core_cm4.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1645:../firmware/CMSIS/core/core_cm4.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1646:../firmware/CMSIS/core/core_cm4.h **** 
1647:../firmware/CMSIS/core/core_cm4.h **** 
1648:../firmware/CMSIS/core/core_cm4.h **** /**
1649:../firmware/CMSIS/core/core_cm4.h ****   \brief   Set Priority Grouping
1650:../firmware/CMSIS/core/core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1651:../firmware/CMSIS/core/core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1652:../firmware/CMSIS/core/core_cm4.h ****            Only values from 0..7 are used.
1653:../firmware/CMSIS/core/core_cm4.h ****            In case of a conflict between priority grouping and available
1654:../firmware/CMSIS/core/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1655:../firmware/CMSIS/core/core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1656:../firmware/CMSIS/core/core_cm4.h ****  */
1657:../firmware/CMSIS/core/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1658:../firmware/CMSIS/core/core_cm4.h **** {
1659:../firmware/CMSIS/core/core_cm4.h ****   uint32_t reg_value;
1660:../firmware/CMSIS/core/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1661:../firmware/CMSIS/core/core_cm4.h **** 
1662:../firmware/CMSIS/core/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1663:../firmware/CMSIS/core/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1664:../firmware/CMSIS/core/core_cm4.h ****   reg_value  =  (reg_value                                   |
1665:../firmware/CMSIS/core/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1666:../firmware/CMSIS/core/core_cm4.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1667:../firmware/CMSIS/core/core_cm4.h ****   SCB->AIRCR =  reg_value;
1668:../firmware/CMSIS/core/core_cm4.h **** }
1669:../firmware/CMSIS/core/core_cm4.h **** 
1670:../firmware/CMSIS/core/core_cm4.h **** 
1671:../firmware/CMSIS/core/core_cm4.h **** /**
1672:../firmware/CMSIS/core/core_cm4.h ****   \brief   Get Priority Grouping
1673:../firmware/CMSIS/core/core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1674:../firmware/CMSIS/core/core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1675:../firmware/CMSIS/core/core_cm4.h ****  */
1676:../firmware/CMSIS/core/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1677:../firmware/CMSIS/core/core_cm4.h **** {
1678:../firmware/CMSIS/core/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1679:../firmware/CMSIS/core/core_cm4.h **** }
1680:../firmware/CMSIS/core/core_cm4.h **** 
1681:../firmware/CMSIS/core/core_cm4.h **** 
1682:../firmware/CMSIS/core/core_cm4.h **** /**
1683:../firmware/CMSIS/core/core_cm4.h ****   \brief   Enable Interrupt
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 31


1684:../firmware/CMSIS/core/core_cm4.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1685:../firmware/CMSIS/core/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1686:../firmware/CMSIS/core/core_cm4.h ****   \note    IRQn must not be negative.
1687:../firmware/CMSIS/core/core_cm4.h ****  */
1688:../firmware/CMSIS/core/core_cm4.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1689:../firmware/CMSIS/core/core_cm4.h **** {
1690:../firmware/CMSIS/core/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1691:../firmware/CMSIS/core/core_cm4.h ****   {
1692:../firmware/CMSIS/core/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1693:../firmware/CMSIS/core/core_cm4.h ****   }
1694:../firmware/CMSIS/core/core_cm4.h **** }
1695:../firmware/CMSIS/core/core_cm4.h **** 
1696:../firmware/CMSIS/core/core_cm4.h **** 
1697:../firmware/CMSIS/core/core_cm4.h **** /**
1698:../firmware/CMSIS/core/core_cm4.h ****   \brief   Get Interrupt Enable status
1699:../firmware/CMSIS/core/core_cm4.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1700:../firmware/CMSIS/core/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1701:../firmware/CMSIS/core/core_cm4.h ****   \return             0  Interrupt is not enabled.
1702:../firmware/CMSIS/core/core_cm4.h ****   \return             1  Interrupt is enabled.
1703:../firmware/CMSIS/core/core_cm4.h ****   \note    IRQn must not be negative.
1704:../firmware/CMSIS/core/core_cm4.h ****  */
1705:../firmware/CMSIS/core/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1706:../firmware/CMSIS/core/core_cm4.h **** {
1707:../firmware/CMSIS/core/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1708:../firmware/CMSIS/core/core_cm4.h ****   {
1709:../firmware/CMSIS/core/core_cm4.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1710:../firmware/CMSIS/core/core_cm4.h ****   }
1711:../firmware/CMSIS/core/core_cm4.h ****   else
1712:../firmware/CMSIS/core/core_cm4.h ****   {
1713:../firmware/CMSIS/core/core_cm4.h ****     return(0U);
1714:../firmware/CMSIS/core/core_cm4.h ****   }
1715:../firmware/CMSIS/core/core_cm4.h **** }
1716:../firmware/CMSIS/core/core_cm4.h **** 
1717:../firmware/CMSIS/core/core_cm4.h **** 
1718:../firmware/CMSIS/core/core_cm4.h **** /**
1719:../firmware/CMSIS/core/core_cm4.h ****   \brief   Disable Interrupt
1720:../firmware/CMSIS/core/core_cm4.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1721:../firmware/CMSIS/core/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1722:../firmware/CMSIS/core/core_cm4.h ****   \note    IRQn must not be negative.
1723:../firmware/CMSIS/core/core_cm4.h ****  */
1724:../firmware/CMSIS/core/core_cm4.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1725:../firmware/CMSIS/core/core_cm4.h **** {
1726:../firmware/CMSIS/core/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1727:../firmware/CMSIS/core/core_cm4.h ****   {
1728:../firmware/CMSIS/core/core_cm4.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1729:../firmware/CMSIS/core/core_cm4.h ****     __DSB();
1730:../firmware/CMSIS/core/core_cm4.h ****     __ISB();
1731:../firmware/CMSIS/core/core_cm4.h ****   }
1732:../firmware/CMSIS/core/core_cm4.h **** }
1733:../firmware/CMSIS/core/core_cm4.h **** 
1734:../firmware/CMSIS/core/core_cm4.h **** 
1735:../firmware/CMSIS/core/core_cm4.h **** /**
1736:../firmware/CMSIS/core/core_cm4.h ****   \brief   Get Pending Interrupt
1737:../firmware/CMSIS/core/core_cm4.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1738:../firmware/CMSIS/core/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1739:../firmware/CMSIS/core/core_cm4.h ****   \return             0  Interrupt status is not pending.
1740:../firmware/CMSIS/core/core_cm4.h ****   \return             1  Interrupt status is pending.
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 32


1741:../firmware/CMSIS/core/core_cm4.h ****   \note    IRQn must not be negative.
1742:../firmware/CMSIS/core/core_cm4.h ****  */
1743:../firmware/CMSIS/core/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1744:../firmware/CMSIS/core/core_cm4.h **** {
1745:../firmware/CMSIS/core/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1746:../firmware/CMSIS/core/core_cm4.h ****   {
1747:../firmware/CMSIS/core/core_cm4.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1748:../firmware/CMSIS/core/core_cm4.h ****   }
1749:../firmware/CMSIS/core/core_cm4.h ****   else
1750:../firmware/CMSIS/core/core_cm4.h ****   {
1751:../firmware/CMSIS/core/core_cm4.h ****     return(0U);
1752:../firmware/CMSIS/core/core_cm4.h ****   }
1753:../firmware/CMSIS/core/core_cm4.h **** }
1754:../firmware/CMSIS/core/core_cm4.h **** 
1755:../firmware/CMSIS/core/core_cm4.h **** 
1756:../firmware/CMSIS/core/core_cm4.h **** /**
1757:../firmware/CMSIS/core/core_cm4.h ****   \brief   Set Pending Interrupt
1758:../firmware/CMSIS/core/core_cm4.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1759:../firmware/CMSIS/core/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1760:../firmware/CMSIS/core/core_cm4.h ****   \note    IRQn must not be negative.
1761:../firmware/CMSIS/core/core_cm4.h ****  */
1762:../firmware/CMSIS/core/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1763:../firmware/CMSIS/core/core_cm4.h **** {
1764:../firmware/CMSIS/core/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1765:../firmware/CMSIS/core/core_cm4.h ****   {
1766:../firmware/CMSIS/core/core_cm4.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1767:../firmware/CMSIS/core/core_cm4.h ****   }
1768:../firmware/CMSIS/core/core_cm4.h **** }
1769:../firmware/CMSIS/core/core_cm4.h **** 
1770:../firmware/CMSIS/core/core_cm4.h **** 
1771:../firmware/CMSIS/core/core_cm4.h **** /**
1772:../firmware/CMSIS/core/core_cm4.h ****   \brief   Clear Pending Interrupt
1773:../firmware/CMSIS/core/core_cm4.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1774:../firmware/CMSIS/core/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1775:../firmware/CMSIS/core/core_cm4.h ****   \note    IRQn must not be negative.
1776:../firmware/CMSIS/core/core_cm4.h ****  */
1777:../firmware/CMSIS/core/core_cm4.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1778:../firmware/CMSIS/core/core_cm4.h **** {
1779:../firmware/CMSIS/core/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1780:../firmware/CMSIS/core/core_cm4.h ****   {
1781:../firmware/CMSIS/core/core_cm4.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1782:../firmware/CMSIS/core/core_cm4.h ****   }
1783:../firmware/CMSIS/core/core_cm4.h **** }
1784:../firmware/CMSIS/core/core_cm4.h **** 
1785:../firmware/CMSIS/core/core_cm4.h **** 
1786:../firmware/CMSIS/core/core_cm4.h **** /**
1787:../firmware/CMSIS/core/core_cm4.h ****   \brief   Get Active Interrupt
1788:../firmware/CMSIS/core/core_cm4.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1789:../firmware/CMSIS/core/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1790:../firmware/CMSIS/core/core_cm4.h ****   \return             0  Interrupt status is not active.
1791:../firmware/CMSIS/core/core_cm4.h ****   \return             1  Interrupt status is active.
1792:../firmware/CMSIS/core/core_cm4.h ****   \note    IRQn must not be negative.
1793:../firmware/CMSIS/core/core_cm4.h ****  */
1794:../firmware/CMSIS/core/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
1795:../firmware/CMSIS/core/core_cm4.h **** {
1796:../firmware/CMSIS/core/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1797:../firmware/CMSIS/core/core_cm4.h ****   {
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 33


1798:../firmware/CMSIS/core/core_cm4.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1799:../firmware/CMSIS/core/core_cm4.h ****   }
1800:../firmware/CMSIS/core/core_cm4.h ****   else
1801:../firmware/CMSIS/core/core_cm4.h ****   {
1802:../firmware/CMSIS/core/core_cm4.h ****     return(0U);
1803:../firmware/CMSIS/core/core_cm4.h ****   }
1804:../firmware/CMSIS/core/core_cm4.h **** }
1805:../firmware/CMSIS/core/core_cm4.h **** 
1806:../firmware/CMSIS/core/core_cm4.h **** 
1807:../firmware/CMSIS/core/core_cm4.h **** /**
1808:../firmware/CMSIS/core/core_cm4.h ****   \brief   Set Interrupt Priority
1809:../firmware/CMSIS/core/core_cm4.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
1810:../firmware/CMSIS/core/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1811:../firmware/CMSIS/core/core_cm4.h ****            or negative to specify a processor exception.
1812:../firmware/CMSIS/core/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1813:../firmware/CMSIS/core/core_cm4.h ****   \param [in]  priority  Priority to set.
1814:../firmware/CMSIS/core/core_cm4.h ****   \note    The priority cannot be set for every processor exception.
1815:../firmware/CMSIS/core/core_cm4.h ****  */
1816:../firmware/CMSIS/core/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1817:../firmware/CMSIS/core/core_cm4.h **** {
  29              		.loc 2 1817 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 80B4     		push	{r7}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 7, -4
  38 0002 83B0     		sub	sp, sp, #12
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 16
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 0346     		mov	r3, r0
  45 0008 3960     		str	r1, [r7]
  46 000a FB71     		strb	r3, [r7, #7]
1818:../firmware/CMSIS/core/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
  47              		.loc 2 1818 6
  48 000c 97F90730 		ldrsb	r3, [r7, #7]
  49 0010 002B     		cmp	r3, #0
  50 0012 0ADB     		blt	.L2
1819:../firmware/CMSIS/core/core_cm4.h ****   {
1820:../firmware/CMSIS/core/core_cm4.h ****     NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
  51              		.loc 2 1820 48
  52 0014 3B68     		ldr	r3, [r7]
  53 0016 DAB2     		uxtb	r2, r3
  54              		.loc 2 1820 9
  55 0018 0C49     		ldr	r1, .L5
  56              		.loc 2 1820 15
  57 001a 97F90730 		ldrsb	r3, [r7, #7]
  58              		.loc 2 1820 48
  59 001e 1201     		lsls	r2, r2, #4
  60 0020 D2B2     		uxtb	r2, r2
  61              		.loc 2 1820 46
  62 0022 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 34


  63 0024 83F80023 		strb	r2, [r3, #768]
1821:../firmware/CMSIS/core/core_cm4.h ****   }
1822:../firmware/CMSIS/core/core_cm4.h ****   else
1823:../firmware/CMSIS/core/core_cm4.h ****   {
1824:../firmware/CMSIS/core/core_cm4.h ****     SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1825:../firmware/CMSIS/core/core_cm4.h ****   }
1826:../firmware/CMSIS/core/core_cm4.h **** }
  64              		.loc 2 1826 1
  65 0028 0AE0     		b	.L4
  66              	.L2:
1824:../firmware/CMSIS/core/core_cm4.h ****   }
  67              		.loc 2 1824 48
  68 002a 3B68     		ldr	r3, [r7]
  69 002c DAB2     		uxtb	r2, r3
1824:../firmware/CMSIS/core/core_cm4.h ****   }
  70              		.loc 2 1824 8
  71 002e 0849     		ldr	r1, .L5+4
1824:../firmware/CMSIS/core/core_cm4.h ****   }
  72              		.loc 2 1824 32
  73 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  74 0032 03F00F03 		and	r3, r3, #15
1824:../firmware/CMSIS/core/core_cm4.h ****   }
  75              		.loc 2 1824 40
  76 0036 043B     		subs	r3, r3, #4
1824:../firmware/CMSIS/core/core_cm4.h ****   }
  77              		.loc 2 1824 48
  78 0038 1201     		lsls	r2, r2, #4
  79 003a D2B2     		uxtb	r2, r2
1824:../firmware/CMSIS/core/core_cm4.h ****   }
  80              		.loc 2 1824 46
  81 003c 0B44     		add	r3, r3, r1
  82 003e 1A76     		strb	r2, [r3, #24]
  83              	.L4:
  84              		.loc 2 1826 1
  85 0040 00BF     		nop
  86 0042 0C37     		adds	r7, r7, #12
  87              	.LCFI3:
  88              		.cfi_def_cfa_offset 4
  89 0044 BD46     		mov	sp, r7
  90              	.LCFI4:
  91              		.cfi_def_cfa_register 13
  92              		@ sp needed
  93 0046 5DF8047B 		ldr	r7, [sp], #4
  94              	.LCFI5:
  95              		.cfi_restore 7
  96              		.cfi_def_cfa_offset 0
  97 004a 7047     		bx	lr
  98              	.L6:
  99              		.align	2
 100              	.L5:
 101 004c 00E100E0 		.word	-536813312
 102 0050 00ED00E0 		.word	-536810240
 103              		.cfi_endproc
 104              	.LFE111:
 106              		.section	.text.RTC_Structure_Initializes,"ax",%progbits
 107              		.align	1
 108              		.global	RTC_Structure_Initializes
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 35


 109              		.syntax unified
 110              		.thumb
 111              		.thumb_func
 113              	RTC_Structure_Initializes:
 114              	.LFB133:
   1:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
   2:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *     Copyright (c) 2022, Nations Technologies Inc.
   3:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** * 
   4:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *     All rights reserved.
   5:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *
   6:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *     This software is the exclusive property of Nations Technologies Inc. (Hereinafter 
   7:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** * referred to as NATIONS). This software, and the product of NATIONS described herein 
   8:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** * (Hereinafter referred to as the Product) are owned by NATIONS under the laws and treaties
   9:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** * of the People’s Republic of China and other applicable jurisdictions worldwide.
  10:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *
  11:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *     NATIONS does not grant any license under its patents, copyrights, trademarks, or other 
  12:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** * intellectual property rights. Names and brands of third party may be mentioned or referred 
  13:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** * thereto (if any) for identification purposes only.
  14:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *
  15:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *     NATIONS reserves the right to make changes, corrections, enhancements, modifications, and 
  16:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** * improvements to this software at any time without notice. Please contact NATIONS and obtain 
  17:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** * the latest version of this software before placing orders.
  18:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
  19:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *     Although NATIONS has attempted to provide accurate and reliable information, NATIONS assumes 
  20:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** * no responsibility for the accuracy and reliability of this software.
  21:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** * 
  22:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *     It is the responsibility of the user of this software to properly design, program, and test 
  23:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** * the functionality and safety of any application made of this information and any resulting produc
  24:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** * In no event shall NATIONS be liable for any direct, indirect, incidental, special,exemplary, or 
  25:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** * consequential damages arising in any way out of the use of this software or the Product.
  26:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *
  27:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *     NATIONS Products are neither intended nor warranted for usage in systems or equipment, any
  28:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** * malfunction or failure of which may cause loss of human life, bodily injury or severe property 
  29:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** * damage. Such applications are deemed, “Insecure Usage”.
  30:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *
  31:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *     All Insecure Usage shall be made at user’s risk. User shall indemnify NATIONS and hold NATI
  32:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** * harmless from and against all claims, costs, damages, and other liabilities, arising from or rela
  33:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** * to any customer’s Insecure Usage.
  34:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
  35:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *     Any express or implied warranty with regard to this software or the Product, including,but no
  36:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** * limited to, the warranties of merchantability, fitness for a particular purpose and non-infringem
  37:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** * are disclaimed to the fullest extent permitted by law.
  38:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
  39:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *     Unless otherwise explicitly permitted by NATIONS, anyone may not duplicate, modify, transcrib
  40:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** * or otherwise distribute this software for any purposes, in whole or in part.
  41:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *
  42:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *     NATIONS products and technologies shall not be used for or incorporated into any products or 
  43:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** * whose manufacture, use, or sale is prohibited under any applicable domestic or foreign laws or re
  44:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** * User shall comply with any applicable export control laws and regulations promulgated and adminis
  45:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** * the governments of any countries asserting jurisdiction over the parties or transactions.
  46:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
  47:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****  
  48:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
  49:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\file n32g430_rtc.c
  50:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\author Nations
  51:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\version v1.0.3
  52:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\copyright Copyright (c) 2022, Nations Technologies Inc. All rights reserved.
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 36


  53:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
  54:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****  
  55:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** #include "n32g430_rtc.h"
  56:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** #include "n32g430_rcc.h"
  57:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** #include "stdio.h"
  58:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
  59:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** static void RTC_Hour_Format_Set(uint32_t hour_format);
  60:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** static void RTC_Prescale_Config(uint32_t synch_prediv, uint32_t asynch_prediv);
  61:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** static void RTC_Registers_Reset(void);
  62:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** static uint8_t RTC_Byte_To_Bcd2(uint8_t Value);
  63:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** static uint8_t RTC_Bcd2_To_Byte(uint8_t Value);
  64:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
  65:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
  66:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Structure_Initializes.
  67:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Fills each RTC_InitStruct member with its default value.
  68:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_InitStruct :    RTC_InitStruct pointer to a RTC_InitType structure which will beini
  69:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_HourFormat
  70:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_24HOUR_FORMAT
  71:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_12HOUR_FORMAT
  72:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_AsynchPrediv  the value must lower than 0x7F
  73:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_SynchPrediv   the value must lower than 0x7FFF          
  74:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none
  75:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
  76:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** void RTC_Structure_Initializes(RTC_InitType* RTC_InitStruct)
  77:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 115              		.loc 1 77 1
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 8
 118              		@ frame_needed = 1, uses_anonymous_args = 0
 119              		@ link register save eliminated.
 120 0000 80B4     		push	{r7}
 121              	.LCFI6:
 122              		.cfi_def_cfa_offset 4
 123              		.cfi_offset 7, -4
 124 0002 83B0     		sub	sp, sp, #12
 125              	.LCFI7:
 126              		.cfi_def_cfa_offset 16
 127 0004 00AF     		add	r7, sp, #0
 128              	.LCFI8:
 129              		.cfi_def_cfa_register 7
 130 0006 7860     		str	r0, [r7, #4]
  78:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Initialize the RTC_HourFormat member */
  79:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_InitStruct->RTC_HourFormat = RTC_24HOUR_FORMAT;
 131              		.loc 1 79 36
 132 0008 7B68     		ldr	r3, [r7, #4]
 133 000a 0022     		movs	r2, #0
 134 000c 1A60     		str	r2, [r3]
  80:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Initialize the RTC_AsynchPrediv member */
  81:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_InitStruct->RTC_AsynchPrediv = (uint32_t)0x7F;
 135              		.loc 1 81 38
 136 000e 7B68     		ldr	r3, [r7, #4]
 137 0010 7F22     		movs	r2, #127
 138 0012 5A60     		str	r2, [r3, #4]
  82:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Initialize the RTC_SynchPrediv member */
  83:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_InitStruct->RTC_SynchPrediv = (uint32_t)0xFF;
 139              		.loc 1 83 37
 140 0014 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 37


 141 0016 FF22     		movs	r2, #255
 142 0018 9A60     		str	r2, [r3, #8]
  84:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 143              		.loc 1 84 1
 144 001a 00BF     		nop
 145 001c 0C37     		adds	r7, r7, #12
 146              	.LCFI9:
 147              		.cfi_def_cfa_offset 4
 148 001e BD46     		mov	sp, r7
 149              	.LCFI10:
 150              		.cfi_def_cfa_register 13
 151              		@ sp needed
 152 0020 5DF8047B 		ldr	r7, [sp], #4
 153              	.LCFI11:
 154              		.cfi_restore 7
 155              		.cfi_def_cfa_offset 0
 156 0024 7047     		bx	lr
 157              		.cfi_endproc
 158              	.LFE133:
 160              		.section	.text.RTC_Write_Protection_Enable,"ax",%progbits
 161              		.align	1
 162              		.global	RTC_Write_Protection_Enable
 163              		.syntax unified
 164              		.thumb
 165              		.thumb_func
 167              	RTC_Write_Protection_Enable:
 168              	.LFB134:
  85:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
  86:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
  87:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Write_Protection_Enable.
  88:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Enable the RTC registers write protection.
  89:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   none
  90:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none
  91:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
  92:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** void RTC_Write_Protection_Enable(void)
  93:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 169              		.loc 1 93 1
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 1, uses_anonymous_args = 0
 173              		@ link register save eliminated.
 174 0000 80B4     		push	{r7}
 175              	.LCFI12:
 176              		.cfi_def_cfa_offset 4
 177              		.cfi_offset 7, -4
 178 0002 00AF     		add	r7, sp, #0
 179              	.LCFI13:
 180              		.cfi_def_cfa_register 7
  94:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Enable the write protection for RTC registers */
  95:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->WRP = 0xFF;
 181              		.loc 1 95 8
 182 0004 034B     		ldr	r3, .L9
 183              		.loc 1 95 14
 184 0006 FF22     		movs	r2, #255
 185 0008 5A62     		str	r2, [r3, #36]
  96:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 186              		.loc 1 96 1
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 38


 187 000a 00BF     		nop
 188 000c BD46     		mov	sp, r7
 189              	.LCFI14:
 190              		.cfi_def_cfa_register 13
 191              		@ sp needed
 192 000e 5DF8047B 		ldr	r7, [sp], #4
 193              	.LCFI15:
 194              		.cfi_restore 7
 195              		.cfi_def_cfa_offset 0
 196 0012 7047     		bx	lr
 197              	.L10:
 198              		.align	2
 199              	.L9:
 200 0014 00280040 		.word	1073752064
 201              		.cfi_endproc
 202              	.LFE134:
 204              		.section	.text.RTC_Write_Protection_Disable,"ax",%progbits
 205              		.align	1
 206              		.global	RTC_Write_Protection_Disable
 207              		.syntax unified
 208              		.thumb
 209              		.thumb_func
 211              	RTC_Write_Protection_Disable:
 212              	.LFB135:
  97:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
  98:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
  99:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Write_Protection_Disable.
 100:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Disable the RTC registers write protection.
 101:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   none
 102:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none
 103:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
 104:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** void RTC_Write_Protection_Disable(void)
 105:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 213              		.loc 1 105 1
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 1, uses_anonymous_args = 0
 217              		@ link register save eliminated.
 218 0000 80B4     		push	{r7}
 219              	.LCFI16:
 220              		.cfi_def_cfa_offset 4
 221              		.cfi_offset 7, -4
 222 0002 00AF     		add	r7, sp, #0
 223              	.LCFI17:
 224              		.cfi_def_cfa_register 7
 106:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Disable the write protection for RTC registers */
 107:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->WRP = 0xCA;
 225              		.loc 1 107 8
 226 0004 054B     		ldr	r3, .L12
 227              		.loc 1 107 14
 228 0006 CA22     		movs	r2, #202
 229 0008 5A62     		str	r2, [r3, #36]
 108:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->WRP = 0x53;
 230              		.loc 1 108 8
 231 000a 044B     		ldr	r3, .L12
 232              		.loc 1 108 14
 233 000c 5322     		movs	r2, #83
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 39


 234 000e 5A62     		str	r2, [r3, #36]
 109:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 235              		.loc 1 109 1
 236 0010 00BF     		nop
 237 0012 BD46     		mov	sp, r7
 238              	.LCFI18:
 239              		.cfi_def_cfa_register 13
 240              		@ sp needed
 241 0014 5DF8047B 		ldr	r7, [sp], #4
 242              	.LCFI19:
 243              		.cfi_restore 7
 244              		.cfi_def_cfa_offset 0
 245 0018 7047     		bx	lr
 246              	.L13:
 247 001a 00BF     		.align	2
 248              	.L12:
 249 001c 00280040 		.word	1073752064
 250              		.cfi_endproc
 251              	.LFE135:
 253              		.section	.text.RTC_Initialization_Mode_Enter,"ax",%progbits
 254              		.align	1
 255              		.global	RTC_Initialization_Mode_Enter
 256              		.syntax unified
 257              		.thumb
 258              		.thumb_func
 260              	RTC_Initialization_Mode_Enter:
 261              	.LFB136:
 110:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 111:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
 112:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Initialization_Mode_Enter.
 113:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Enters the RTC Initialization mode.
 114:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return   ErrorStatus
 115:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - SUCCESS: RTC is in Init mode
 116:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - ERROR: RTC is not in Init mode
 117:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
 118:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** ErrorStatus RTC_Initialization_Mode_Enter(void)
 119:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 262              		.loc 1 119 1
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 8
 265              		@ frame_needed = 1, uses_anonymous_args = 0
 266              		@ link register save eliminated.
 267 0000 80B4     		push	{r7}
 268              	.LCFI20:
 269              		.cfi_def_cfa_offset 4
 270              		.cfi_offset 7, -4
 271 0002 83B0     		sub	sp, sp, #12
 272              	.LCFI21:
 273              		.cfi_def_cfa_offset 16
 274 0004 00AF     		add	r7, sp, #0
 275              	.LCFI22:
 276              		.cfi_def_cfa_register 7
 120:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     uint32_t temp_value = 0x00;
 277              		.loc 1 120 14
 278 0006 0023     		movs	r3, #0
 279 0008 7B60     		str	r3, [r7, #4]
 121:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     uint32_t temp_value1 = 0x00;
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 40


 280              		.loc 1 121 14
 281 000a 0023     		movs	r3, #0
 282 000c 3B60     		str	r3, [r7]
 122:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     
 123:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Check if the Initialization mode is set */
 124:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     if ((RTC->INITSTS & RTC_FLAG_INITF) == (uint32_t)RESET)
 283              		.loc 1 124 13
 284 000e 174B     		ldr	r3, .L21
 285 0010 DB68     		ldr	r3, [r3, #12]
 286              		.loc 1 124 23
 287 0012 03F04003 		and	r3, r3, #64
 288              		.loc 1 124 8
 289 0016 002B     		cmp	r3, #0
 290 0018 20D1     		bne	.L15
 125:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
 126:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         /* SUBS is not less than 2 before entering the initialization mode */
 127:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         while(RTC->SUBS <= 3);
 291              		.loc 1 127 14
 292 001a 00BF     		nop
 293              	.L16:
 294              		.loc 1 127 18 discriminator 1
 295 001c 134B     		ldr	r3, .L21
 296 001e 9B6A     		ldr	r3, [r3, #40]
 297              		.loc 1 127 25 discriminator 1
 298 0020 032B     		cmp	r3, #3
 299 0022 FBD9     		bls	.L16
 128:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         /* Set the Initialization mode */
 129:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         RTC->INITSTS = (uint32_t)RTC_FLAG_INITM;
 300              		.loc 1 129 12
 301 0024 114B     		ldr	r3, .L21
 302              		.loc 1 129 22
 303 0026 8022     		movs	r2, #128
 304 0028 DA60     		str	r2, [r3, #12]
 305              	.L18:
 130:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 131:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         /* Wait untill RTC is in INIT state and if Time out is reached exit */
 132:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         do
 133:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         {
 134:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             temp_value1 = RTC->INITSTS & RTC_FLAG_INITF;
 306              		.loc 1 134 30 discriminator 2
 307 002a 104B     		ldr	r3, .L21
 308 002c DB68     		ldr	r3, [r3, #12]
 309              		.loc 1 134 25 discriminator 2
 310 002e 03F04003 		and	r3, r3, #64
 311 0032 3B60     		str	r3, [r7]
 135:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             temp_value++;
 312              		.loc 1 135 23 discriminator 2
 313 0034 7B68     		ldr	r3, [r7, #4]
 314 0036 0133     		adds	r3, r3, #1
 315 0038 7B60     		str	r3, [r7, #4]
 136:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         } while ((temp_value != INITMODE_TIMEOUT) && (temp_value1 == 0x00));
 316              		.loc 1 136 51 discriminator 2
 317 003a 7B68     		ldr	r3, [r7, #4]
 318 003c B3F5005F 		cmp	r3, #8192
 319 0040 02D0     		beq	.L17
 320              		.loc 1 136 51 is_stmt 0 discriminator 1
 321 0042 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 41


 322 0044 002B     		cmp	r3, #0
 323 0046 F0D0     		beq	.L18
 324              	.L17:
 137:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 138:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         if ((RTC->INITSTS & RTC_FLAG_INITF) != RESET)
 325              		.loc 1 138 17 is_stmt 1
 326 0048 084B     		ldr	r3, .L21
 327 004a DB68     		ldr	r3, [r3, #12]
 328              		.loc 1 138 27
 329 004c 03F04003 		and	r3, r3, #64
 330              		.loc 1 138 12
 331 0050 002B     		cmp	r3, #0
 332 0052 01D0     		beq	.L19
 139:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         {
 140:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             return SUCCESS;
 333              		.loc 1 140 20
 334 0054 0123     		movs	r3, #1
 335 0056 02E0     		b	.L20
 336              	.L19:
 141:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         }
 142:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         else
 143:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         {
 144:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             return ERROR;
 337              		.loc 1 144 20
 338 0058 0023     		movs	r3, #0
 339 005a 00E0     		b	.L20
 340              	.L15:
 145:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         }
 146:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
 147:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     else
 148:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
 149:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         return SUCCESS;
 341              		.loc 1 149 16
 342 005c 0123     		movs	r3, #1
 343              	.L20:
 150:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
 151:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 344              		.loc 1 151 1
 345 005e 1846     		mov	r0, r3
 346 0060 0C37     		adds	r7, r7, #12
 347              	.LCFI23:
 348              		.cfi_def_cfa_offset 4
 349 0062 BD46     		mov	sp, r7
 350              	.LCFI24:
 351              		.cfi_def_cfa_register 13
 352              		@ sp needed
 353 0064 5DF8047B 		ldr	r7, [sp], #4
 354              	.LCFI25:
 355              		.cfi_restore 7
 356              		.cfi_def_cfa_offset 0
 357 0068 7047     		bx	lr
 358              	.L22:
 359 006a 00BF     		.align	2
 360              	.L21:
 361 006c 00280040 		.word	1073752064
 362              		.cfi_endproc
 363              	.LFE136:
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 42


 365              		.section	.text.RTC_Initialization_Mode_Exit,"ax",%progbits
 366              		.align	1
 367              		.global	RTC_Initialization_Mode_Exit
 368              		.syntax unified
 369              		.thumb
 370              		.thumb_func
 372              	RTC_Initialization_Mode_Exit:
 373              	.LFB137:
 152:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 153:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
 154:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Initialization_Mode_Exit.
 155:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     When the initialization sequence is complete, the calendar restarts counting after 4 RT
 156:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none
 157:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
 158:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** void RTC_Initialization_Mode_Exit(void)
 159:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 374              		.loc 1 159 1
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 1, uses_anonymous_args = 0
 378              		@ link register save eliminated.
 379 0000 80B4     		push	{r7}
 380              	.LCFI26:
 381              		.cfi_def_cfa_offset 4
 382              		.cfi_offset 7, -4
 383 0002 00AF     		add	r7, sp, #0
 384              	.LCFI27:
 385              		.cfi_def_cfa_register 7
 160:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Exit Initialization mode */
 161:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->INITSTS &= (uint32_t)~RTC_FLAG_INITM;
 386              		.loc 1 161 8
 387 0004 054B     		ldr	r3, .L24
 388 0006 DB68     		ldr	r3, [r3, #12]
 389 0008 044A     		ldr	r2, .L24
 390              		.loc 1 161 18
 391 000a 23F08003 		bic	r3, r3, #128
 392 000e D360     		str	r3, [r2, #12]
 162:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 393              		.loc 1 162 1
 394 0010 00BF     		nop
 395 0012 BD46     		mov	sp, r7
 396              	.LCFI28:
 397              		.cfi_def_cfa_register 13
 398              		@ sp needed
 399 0014 5DF8047B 		ldr	r7, [sp], #4
 400              	.LCFI29:
 401              		.cfi_restore 7
 402              		.cfi_def_cfa_offset 0
 403 0018 7047     		bx	lr
 404              	.L25:
 405 001a 00BF     		.align	2
 406              	.L24:
 407 001c 00280040 		.word	1073752064
 408              		.cfi_endproc
 409              	.LFE137:
 411              		.section	.text.RTC_Hour_Format_Set,"ax",%progbits
 412              		.align	1
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 43


 413              		.syntax unified
 414              		.thumb
 415              		.thumb_func
 417              	RTC_Hour_Format_Set:
 418              	.LFB138:
 163:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 164:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
 165:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Hour_Format_Set.
 166:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Set RTC hour format.
 167:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   hour_format :
 168:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_24HOUR_FORMAT
 169:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_12HOUR_FORMAT
 170:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none
 171:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
 172:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** static void RTC_Hour_Format_Set(uint32_t hour_format)
 173:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 419              		.loc 1 173 1
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 8
 422              		@ frame_needed = 1, uses_anonymous_args = 0
 423              		@ link register save eliminated.
 424 0000 80B4     		push	{r7}
 425              	.LCFI30:
 426              		.cfi_def_cfa_offset 4
 427              		.cfi_offset 7, -4
 428 0002 83B0     		sub	sp, sp, #12
 429              	.LCFI31:
 430              		.cfi_def_cfa_offset 16
 431 0004 00AF     		add	r7, sp, #0
 432              	.LCFI32:
 433              		.cfi_def_cfa_register 7
 434 0006 7860     		str	r0, [r7, #4]
 174:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Clear RTC CTRL HFMT Bit */
 175:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->CTRL &= ((uint32_t) ~(RTC_CTRL_HFMT));
 435              		.loc 1 175 8
 436 0008 084B     		ldr	r3, .L27
 437 000a 9B68     		ldr	r3, [r3, #8]
 438 000c 074A     		ldr	r2, .L27
 439              		.loc 1 175 15
 440 000e 23F04003 		bic	r3, r3, #64
 441 0012 9360     		str	r3, [r2, #8]
 176:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Set RTC_CTRL register */
 177:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->CTRL |= hour_format;
 442              		.loc 1 177 8
 443 0014 054B     		ldr	r3, .L27
 444 0016 9A68     		ldr	r2, [r3, #8]
 445 0018 0449     		ldr	r1, .L27
 446              		.loc 1 177 15
 447 001a 7B68     		ldr	r3, [r7, #4]
 448 001c 1343     		orrs	r3, r3, r2
 449 001e 8B60     		str	r3, [r1, #8]
 178:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 450              		.loc 1 178 1
 451 0020 00BF     		nop
 452 0022 0C37     		adds	r7, r7, #12
 453              	.LCFI33:
 454              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 44


 455 0024 BD46     		mov	sp, r7
 456              	.LCFI34:
 457              		.cfi_def_cfa_register 13
 458              		@ sp needed
 459 0026 5DF8047B 		ldr	r7, [sp], #4
 460              	.LCFI35:
 461              		.cfi_restore 7
 462              		.cfi_def_cfa_offset 0
 463 002a 7047     		bx	lr
 464              	.L28:
 465              		.align	2
 466              	.L27:
 467 002c 00280040 		.word	1073752064
 468              		.cfi_endproc
 469              	.LFE138:
 471              		.section	.text.RTC_Prescale_Config,"ax",%progbits
 472              		.align	1
 473              		.syntax unified
 474              		.thumb
 475              		.thumb_func
 477              	RTC_Prescale_Config:
 478              	.LFB139:
 179:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 180:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
 181:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Prescale_Config.
 182:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Set RTC prescale.
 183:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   synch_prediv    the value in the 0-0x7F range
 184:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   asynch_prediv   the value in the 0-0x7FFF range
 185:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none
 186:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
 187:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** static void RTC_Prescale_Config(uint32_t synch_prediv, uint32_t asynch_prediv)
 188:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 479              		.loc 1 188 1
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 8
 482              		@ frame_needed = 1, uses_anonymous_args = 0
 483              		@ link register save eliminated.
 484 0000 80B4     		push	{r7}
 485              	.LCFI36:
 486              		.cfi_def_cfa_offset 4
 487              		.cfi_offset 7, -4
 488 0002 83B0     		sub	sp, sp, #12
 489              	.LCFI37:
 490              		.cfi_def_cfa_offset 16
 491 0004 00AF     		add	r7, sp, #0
 492              	.LCFI38:
 493              		.cfi_def_cfa_register 7
 494 0006 7860     		str	r0, [r7, #4]
 495 0008 3960     		str	r1, [r7]
 189:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->PRE = synch_prediv;
 496              		.loc 1 189 8
 497 000a 084A     		ldr	r2, .L30
 498              		.loc 1 189 14
 499 000c 7B68     		ldr	r3, [r7, #4]
 500 000e 1361     		str	r3, [r2, #16]
 190:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->PRE |= (uint32_t)(asynch_prediv << 16);
 501              		.loc 1 190 8
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 45


 502 0010 064B     		ldr	r3, .L30
 503 0012 1A69     		ldr	r2, [r3, #16]
 504              		.loc 1 190 42
 505 0014 3B68     		ldr	r3, [r7]
 506 0016 1B04     		lsls	r3, r3, #16
 507              		.loc 1 190 8
 508 0018 0449     		ldr	r1, .L30
 509              		.loc 1 190 14
 510 001a 1343     		orrs	r3, r3, r2
 511 001c 0B61     		str	r3, [r1, #16]
 191:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 512              		.loc 1 191 1
 513 001e 00BF     		nop
 514 0020 0C37     		adds	r7, r7, #12
 515              	.LCFI39:
 516              		.cfi_def_cfa_offset 4
 517 0022 BD46     		mov	sp, r7
 518              	.LCFI40:
 519              		.cfi_def_cfa_register 13
 520              		@ sp needed
 521 0024 5DF8047B 		ldr	r7, [sp], #4
 522              	.LCFI41:
 523              		.cfi_restore 7
 524              		.cfi_def_cfa_offset 0
 525 0028 7047     		bx	lr
 526              	.L31:
 527 002a 00BF     		.align	2
 528              	.L30:
 529 002c 00280040 		.word	1073752064
 530              		.cfi_endproc
 531              	.LFE139:
 533              		.section	.text.RTC_Registers_Reset,"ax",%progbits
 534              		.align	1
 535              		.syntax unified
 536              		.thumb
 537              		.thumb_func
 539              	RTC_Registers_Reset:
 540              	.LFB140:
 192:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 193:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
 194:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Registers_Reset.
 195:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Reset RTC registers.
 196:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   none
 197:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none
 198:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
 199:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** static void RTC_Registers_Reset(void)
 200:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 541              		.loc 1 200 1
 542              		.cfi_startproc
 543              		@ args = 0, pretend = 0, frame = 0
 544              		@ frame_needed = 1, uses_anonymous_args = 0
 545              		@ link register save eliminated.
 546 0000 80B4     		push	{r7}
 547              	.LCFI42:
 548              		.cfi_def_cfa_offset 4
 549              		.cfi_offset 7, -4
 550 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 46


 551              	.LCFI43:
 552              		.cfi_def_cfa_register 7
 201:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Reset RTC registers */
 202:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->CTRL   &= (uint32_t)0x00000000;
 553              		.loc 1 202 8
 554 0004 144B     		ldr	r3, .L33
 555 0006 9B68     		ldr	r3, [r3, #8]
 556 0008 134B     		ldr	r3, .L33
 557              		.loc 1 202 17
 558 000a 0022     		movs	r2, #0
 559 000c 9A60     		str	r2, [r3, #8]
 203:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->WKUPT   = (uint32_t)0x0000FFFF;
 560              		.loc 1 203 8
 561 000e 124B     		ldr	r3, .L33
 562              		.loc 1 203 18
 563 0010 4FF6FF72 		movw	r2, #65535
 564 0014 5A61     		str	r2, [r3, #20]
 204:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->PRE     = (uint32_t)0x007F00FF;
 565              		.loc 1 204 8
 566 0016 104B     		ldr	r3, .L33
 567              		.loc 1 204 18
 568 0018 104A     		ldr	r2, .L33+4
 569 001a 1A61     		str	r2, [r3, #16]
 205:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->ALARMA  = (uint32_t)0x00000000;
 570              		.loc 1 205 8
 571 001c 0E4B     		ldr	r3, .L33
 572              		.loc 1 205 18
 573 001e 0022     		movs	r2, #0
 574 0020 DA61     		str	r2, [r3, #28]
 206:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->ALARMB  = (uint32_t)0x00000000;
 575              		.loc 1 206 8
 576 0022 0D4B     		ldr	r3, .L33
 577              		.loc 1 206 18
 578 0024 0022     		movs	r2, #0
 579 0026 1A62     		str	r2, [r3, #32]
 207:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->SCTRL   = (uint32_t)0x00000000;
 580              		.loc 1 207 8
 581 0028 0B4B     		ldr	r3, .L33
 582              		.loc 1 207 18
 583 002a 0022     		movs	r2, #0
 584 002c DA62     		str	r2, [r3, #44]
 208:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->CALIB   = (uint32_t)0x00000000;
 585              		.loc 1 208 8
 586 002e 0A4B     		ldr	r3, .L33
 587              		.loc 1 208 18
 588 0030 0022     		movs	r2, #0
 589 0032 DA63     		str	r2, [r3, #60]
 209:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->ALRMASS = (uint32_t)0x00000000;
 590              		.loc 1 209 8
 591 0034 084B     		ldr	r3, .L33
 592              		.loc 1 209 18
 593 0036 0022     		movs	r2, #0
 594 0038 5A64     		str	r2, [r3, #68]
 210:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->ALRMBSS = (uint32_t)0x00000000;
 595              		.loc 1 210 8
 596 003a 074B     		ldr	r3, .L33
 597              		.loc 1 210 18
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 47


 598 003c 0022     		movs	r2, #0
 599 003e 9A64     		str	r2, [r3, #72]
 211:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 212:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Reset INTSTS register and exit initialization mode */
 213:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->INITSTS = (uint32_t)0x00000000;
 600              		.loc 1 213 8
 601 0040 054B     		ldr	r3, .L33
 602              		.loc 1 213 18
 603 0042 0022     		movs	r2, #0
 604 0044 DA60     		str	r2, [r3, #12]
 214:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 215:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->OPT     = (uint32_t)0x00000000;
 605              		.loc 1 215 8
 606 0046 044B     		ldr	r3, .L33
 607              		.loc 1 215 18
 608 0048 0022     		movs	r2, #0
 609 004a DA64     		str	r2, [r3, #76]
 216:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 610              		.loc 1 216 1
 611 004c 00BF     		nop
 612 004e BD46     		mov	sp, r7
 613              	.LCFI44:
 614              		.cfi_def_cfa_register 13
 615              		@ sp needed
 616 0050 5DF8047B 		ldr	r7, [sp], #4
 617              	.LCFI45:
 618              		.cfi_restore 7
 619              		.cfi_def_cfa_offset 0
 620 0054 7047     		bx	lr
 621              	.L34:
 622 0056 00BF     		.align	2
 623              	.L33:
 624 0058 00280040 		.word	1073752064
 625 005c FF007F00 		.word	8323327
 626              		.cfi_endproc
 627              	.LFE140:
 629              		.section	.text.RTC_Deinitializes,"ax",%progbits
 630              		.align	1
 631              		.global	RTC_Deinitializes
 632              		.syntax unified
 633              		.thumb
 634              		.thumb_func
 636              	RTC_Deinitializes:
 637              	.LFB141:
 217:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 218:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
 219:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Deinitializes.
 220:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Deinitializes the RTC registers to their default reset values.
 221:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  ErrorStatus
 222:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - SUCCESS: RTC registers are deinitialized
 223:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - ERROR: RTC registers are not deinitialized
 224:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\
 225:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
 226:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** ErrorStatus RTC_Deinitializes(void)
 227:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 638              		.loc 1 227 1
 639              		.cfi_startproc
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 48


 640              		@ args = 0, pretend = 0, frame = 16
 641              		@ frame_needed = 1, uses_anonymous_args = 0
 642 0000 80B5     		push	{r7, lr}
 643              	.LCFI46:
 644              		.cfi_def_cfa_offset 8
 645              		.cfi_offset 7, -8
 646              		.cfi_offset 14, -4
 647 0002 84B0     		sub	sp, sp, #16
 648              	.LCFI47:
 649              		.cfi_def_cfa_offset 24
 650 0004 00AF     		add	r7, sp, #0
 651              	.LCFI48:
 652              		.cfi_def_cfa_register 7
 228:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     uint32_t temp_value = 0x00;
 653              		.loc 1 228 14
 654 0006 0023     		movs	r3, #0
 655 0008 FB60     		str	r3, [r7, #12]
 229:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     uint32_t temp_value1 = 0x00;
 656              		.loc 1 229 14
 657 000a 0023     		movs	r3, #0
 658 000c 7B60     		str	r3, [r7, #4]
 230:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     ErrorStatus status_value = ERROR;
 659              		.loc 1 230 17
 660 000e 0023     		movs	r3, #0
 661 0010 FB72     		strb	r3, [r7, #11]
 231:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 232:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Disable the write protection for RTC registers */
 233:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Disable();
 662              		.loc 1 233 5
 663 0012 FFF7FEFF 		bl	RTC_Write_Protection_Disable
 234:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 235:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Set Initialization mode */
 236:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     if (RTC_Initialization_Mode_Enter() == ERROR)
 664              		.loc 1 236 9
 665 0016 FFF7FEFF 		bl	RTC_Initialization_Mode_Enter
 666 001a 0346     		mov	r3, r0
 667              		.loc 1 236 8
 668 001c 002B     		cmp	r3, #0
 669 001e 02D1     		bne	.L36
 237:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
 238:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         status_value = ERROR;
 670              		.loc 1 238 22
 671 0020 0023     		movs	r3, #0
 672 0022 FB72     		strb	r3, [r7, #11]
 673 0024 30E0     		b	.L37
 674              	.L36:
 239:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
 240:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     else
 241:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
 242:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         /* Reset TSH, DAT and CTRL registers */
 243:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         RTC->TSH  = (uint32_t)0x00000000;
 675              		.loc 1 243 12
 676 0026 1C4B     		ldr	r3, .L43
 677              		.loc 1 243 19
 678 0028 0022     		movs	r2, #0
 679 002a 1A60     		str	r2, [r3]
 244:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         RTC->DATE = (uint32_t)0x00002101;
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 49


 680              		.loc 1 244 12
 681 002c 1A4B     		ldr	r3, .L43
 682              		.loc 1 244 19
 683 002e 42F20112 		movw	r2, #8449
 684 0032 5A60     		str	r2, [r3, #4]
 245:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 246:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         /* Reset All CTRL bits except CTRL[2:0] */
 247:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         RTC->CTRL &= RTC_CTRL_WKUPSEL;
 685              		.loc 1 247 12
 686 0034 184B     		ldr	r3, .L43
 687 0036 9B68     		ldr	r3, [r3, #8]
 688 0038 174A     		ldr	r2, .L43
 689              		.loc 1 247 19
 690 003a 03F00703 		and	r3, r3, #7
 691 003e 9360     		str	r3, [r2, #8]
 692              	.L39:
 248:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 249:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         /* Wait till RTC WTWF flag is set and if Time out is reached exit */
 250:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         do
 251:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         {
 252:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             temp_value1 = RTC->INITSTS & RTC_FLAG_WTWF;
 693              		.loc 1 252 30 discriminator 2
 694 0040 154B     		ldr	r3, .L43
 695 0042 DB68     		ldr	r3, [r3, #12]
 696              		.loc 1 252 25 discriminator 2
 697 0044 03F00403 		and	r3, r3, #4
 698 0048 7B60     		str	r3, [r7, #4]
 253:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             temp_value++;
 699              		.loc 1 253 23 discriminator 2
 700 004a FB68     		ldr	r3, [r7, #12]
 701 004c 0133     		adds	r3, r3, #1
 702 004e FB60     		str	r3, [r7, #12]
 254:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         } while ((temp_value != INITMODE_TIMEOUT) && (temp_value1 == 0x00));
 703              		.loc 1 254 51 discriminator 2
 704 0050 FB68     		ldr	r3, [r7, #12]
 705 0052 B3F5005F 		cmp	r3, #8192
 706 0056 02D0     		beq	.L38
 707              		.loc 1 254 51 is_stmt 0 discriminator 1
 708 0058 7B68     		ldr	r3, [r7, #4]
 709 005a 002B     		cmp	r3, #0
 710 005c F0D0     		beq	.L39
 711              	.L38:
 255:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 256:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         if ((RTC->INITSTS & RTC_FLAG_WTWF) == RESET)
 712              		.loc 1 256 17 is_stmt 1
 713 005e 0E4B     		ldr	r3, .L43
 714 0060 DB68     		ldr	r3, [r3, #12]
 715              		.loc 1 256 27
 716 0062 03F00403 		and	r3, r3, #4
 717              		.loc 1 256 12
 718 0066 002B     		cmp	r3, #0
 719 0068 02D1     		bne	.L40
 257:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         {
 258:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             status_value = ERROR;
 720              		.loc 1 258 26
 721 006a 0023     		movs	r3, #0
 722 006c FB72     		strb	r3, [r7, #11]
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 50


 723 006e 0BE0     		b	.L37
 724              	.L40:
 259:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         }
 260:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         else
 261:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         {
 262:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             RTC_Registers_Reset();
 725              		.loc 1 262 13
 726 0070 FFF7FEFF 		bl	RTC_Registers_Reset
 263:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             /* Wait till the RTC RSYF flag is set */
 264:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             if (RTC_Wait_For_Synchronization() == ERROR)
 727              		.loc 1 264 17
 728 0074 FFF7FEFF 		bl	RTC_Wait_For_Synchronization
 729 0078 0346     		mov	r3, r0
 730              		.loc 1 264 16
 731 007a 002B     		cmp	r3, #0
 732 007c 02D1     		bne	.L41
 265:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             {
 266:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****                 status_value = ERROR;
 733              		.loc 1 266 30
 734 007e 0023     		movs	r3, #0
 735 0080 FB72     		strb	r3, [r7, #11]
 736 0082 01E0     		b	.L37
 737              	.L41:
 267:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             }
 268:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             else
 269:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             {
 270:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****                 status_value = SUCCESS;
 738              		.loc 1 270 30
 739 0084 0123     		movs	r3, #1
 740 0086 FB72     		strb	r3, [r7, #11]
 741              	.L37:
 271:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             }
 272:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         }
 273:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
 274:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 275:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Enable the write protection for RTC registers */
 276:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Enable();
 742              		.loc 1 276 5
 743 0088 FFF7FEFF 		bl	RTC_Write_Protection_Enable
 277:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 278:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     return status_value;
 744              		.loc 1 278 12
 745 008c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 279:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 746              		.loc 1 279 1
 747 008e 1846     		mov	r0, r3
 748 0090 1037     		adds	r7, r7, #16
 749              	.LCFI49:
 750              		.cfi_def_cfa_offset 8
 751 0092 BD46     		mov	sp, r7
 752              	.LCFI50:
 753              		.cfi_def_cfa_register 13
 754              		@ sp needed
 755 0094 80BD     		pop	{r7, pc}
 756              	.L44:
 757 0096 00BF     		.align	2
 758              	.L43:
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 51


 759 0098 00280040 		.word	1073752064
 760              		.cfi_endproc
 761              	.LFE141:
 763              		.section	.text.RTC_Wait_For_Synchronization,"ax",%progbits
 764              		.align	1
 765              		.global	RTC_Wait_For_Synchronization
 766              		.syntax unified
 767              		.thumb
 768              		.thumb_func
 770              	RTC_Wait_For_Synchronization:
 771              	.LFB142:
 280:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 281:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
 282:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Wait_For_Resynchronization.
 283:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Waits until the RTC Time and Date registers (RTC_TSH and RTC_DATE) are synchronized wit
 284:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  ErrorStatus :
 285:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - SUCCESS:  RTC registers are synchronised
 286:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - ERROR:    RTC registers are not synchronised
 287:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
 288:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** ErrorStatus RTC_Wait_For_Synchronization(void)
 289:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 772              		.loc 1 289 1
 773              		.cfi_startproc
 774              		@ args = 0, pretend = 0, frame = 16
 775              		@ frame_needed = 1, uses_anonymous_args = 0
 776 0000 80B5     		push	{r7, lr}
 777              	.LCFI51:
 778              		.cfi_def_cfa_offset 8
 779              		.cfi_offset 7, -8
 780              		.cfi_offset 14, -4
 781 0002 84B0     		sub	sp, sp, #16
 782              	.LCFI52:
 783              		.cfi_def_cfa_offset 24
 784 0004 00AF     		add	r7, sp, #0
 785              	.LCFI53:
 786              		.cfi_def_cfa_register 7
 290:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     uint32_t temp_value = 0;    
 787              		.loc 1 290 14
 788 0006 0023     		movs	r3, #0
 789 0008 FB60     		str	r3, [r7, #12]
 291:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     uint32_t temp_value1 = 0x00;
 790              		.loc 1 291 14
 791 000a 0023     		movs	r3, #0
 792 000c 7B60     		str	r3, [r7, #4]
 292:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     ErrorStatus status_value = ERROR;
 793              		.loc 1 292 17
 794 000e 0023     		movs	r3, #0
 795 0010 FB72     		strb	r3, [r7, #11]
 293:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 294:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Disable the write protection for RTC registers */
 295:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Disable();
 796              		.loc 1 295 5
 797 0012 FFF7FEFF 		bl	RTC_Write_Protection_Disable
 296:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 297:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Clear RSYF flag */
 298:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->INITSTS &= (uint32_t)RTC_RSF_MASK;
 798              		.loc 1 298 8
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 52


 799 0016 134B     		ldr	r3, .L51
 800 0018 DB68     		ldr	r3, [r3, #12]
 801 001a 124A     		ldr	r2, .L51
 802              		.loc 1 298 18
 803 001c 23F02003 		bic	r3, r3, #32
 804 0020 D360     		str	r3, [r2, #12]
 805              	.L47:
 299:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 300:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Wait the registers to be synchronised */
 301:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     do
 302:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
 303:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         temp_value1 = RTC->INITSTS & RTC_FLAG_RSYF;
 806              		.loc 1 303 26 discriminator 2
 807 0022 104B     		ldr	r3, .L51
 808 0024 DB68     		ldr	r3, [r3, #12]
 809              		.loc 1 303 21 discriminator 2
 810 0026 03F02003 		and	r3, r3, #32
 811 002a 7B60     		str	r3, [r7, #4]
 304:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         temp_value++;
 812              		.loc 1 304 19 discriminator 2
 813 002c FB68     		ldr	r3, [r7, #12]
 814 002e 0133     		adds	r3, r3, #1
 815 0030 FB60     		str	r3, [r7, #12]
 305:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     } while ((temp_value != SYNCHRO_TIMEOUT) && (temp_value1 == 0x00));
 816              		.loc 1 305 46 discriminator 2
 817 0032 FB68     		ldr	r3, [r7, #12]
 818 0034 B3F5004F 		cmp	r3, #32768
 819 0038 02D0     		beq	.L46
 820              		.loc 1 305 46 is_stmt 0 discriminator 1
 821 003a 7B68     		ldr	r3, [r7, #4]
 822 003c 002B     		cmp	r3, #0
 823 003e F0D0     		beq	.L47
 824              	.L46:
 306:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 307:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     if ((RTC->INITSTS & RTC_FLAG_RSYF) != RESET)
 825              		.loc 1 307 13 is_stmt 1
 826 0040 084B     		ldr	r3, .L51
 827 0042 DB68     		ldr	r3, [r3, #12]
 828              		.loc 1 307 23
 829 0044 03F02003 		and	r3, r3, #32
 830              		.loc 1 307 8
 831 0048 002B     		cmp	r3, #0
 832 004a 02D0     		beq	.L48
 308:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
 309:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         status_value = SUCCESS;
 833              		.loc 1 309 22
 834 004c 0123     		movs	r3, #1
 835 004e FB72     		strb	r3, [r7, #11]
 836 0050 01E0     		b	.L49
 837              	.L48:
 310:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
 311:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     else
 312:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
 313:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         status_value = ERROR;
 838              		.loc 1 313 22
 839 0052 0023     		movs	r3, #0
 840 0054 FB72     		strb	r3, [r7, #11]
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 53


 841              	.L49:
 314:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
 315:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 316:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Enable the write protection for RTC registers */
 317:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Enable();
 842              		.loc 1 317 5
 843 0056 FFF7FEFF 		bl	RTC_Write_Protection_Enable
 318:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 319:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     return status_value;
 844              		.loc 1 319 12
 845 005a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 320:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 846              		.loc 1 320 1
 847 005c 1846     		mov	r0, r3
 848 005e 1037     		adds	r7, r7, #16
 849              	.LCFI54:
 850              		.cfi_def_cfa_offset 8
 851 0060 BD46     		mov	sp, r7
 852              	.LCFI55:
 853              		.cfi_def_cfa_register 13
 854              		@ sp needed
 855 0062 80BD     		pop	{r7, pc}
 856              	.L52:
 857              		.align	2
 858              	.L51:
 859 0064 00280040 		.word	1073752064
 860              		.cfi_endproc
 861              	.LFE142:
 863              		.section	.text.RTC_Reference_Clock_Enable,"ax",%progbits
 864              		.align	1
 865              		.global	RTC_Reference_Clock_Enable
 866              		.syntax unified
 867              		.thumb
 868              		.thumb_func
 870              	RTC_Reference_Clock_Enable:
 871              	.LFB143:
 321:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 322:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
 323:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Reference_Clock_Enable.
 324:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Enables the RTC reference clock detection.
 325:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   none
 326:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none 
 327:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
 328:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** ErrorStatus RTC_Reference_Clock_Enable(void)
 329:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 872              		.loc 1 329 1
 873              		.cfi_startproc
 874              		@ args = 0, pretend = 0, frame = 8
 875              		@ frame_needed = 1, uses_anonymous_args = 0
 876 0000 80B5     		push	{r7, lr}
 877              	.LCFI56:
 878              		.cfi_def_cfa_offset 8
 879              		.cfi_offset 7, -8
 880              		.cfi_offset 14, -4
 881 0002 82B0     		sub	sp, sp, #8
 882              	.LCFI57:
 883              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 54


 884 0004 00AF     		add	r7, sp, #0
 885              	.LCFI58:
 886              		.cfi_def_cfa_register 7
 330:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     ErrorStatus status_value = ERROR;
 887              		.loc 1 330 17
 888 0006 0023     		movs	r3, #0
 889 0008 FB71     		strb	r3, [r7, #7]
 331:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 332:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Disable the write protection for RTC registers */
 333:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Disable();
 890              		.loc 1 333 5
 891 000a FFF7FEFF 		bl	RTC_Write_Protection_Disable
 334:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 335:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Set Initialization mode */
 336:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     if (RTC_Initialization_Mode_Enter() == ERROR)
 892              		.loc 1 336 9
 893 000e FFF7FEFF 		bl	RTC_Initialization_Mode_Enter
 894 0012 0346     		mov	r3, r0
 895              		.loc 1 336 8
 896 0014 002B     		cmp	r3, #0
 897 0016 02D1     		bne	.L54
 337:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
 338:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         status_value = ERROR;
 898              		.loc 1 338 22
 899 0018 0023     		movs	r3, #0
 900 001a FB71     		strb	r3, [r7, #7]
 901 001c 09E0     		b	.L55
 902              	.L54:
 339:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
 340:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     else
 341:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
 342:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         /* Enable the RTC reference clock detection */
 343:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         RTC->CTRL |= RTC_REFERENCE_DETECT_ENABLE;
 903              		.loc 1 343 12
 904 001e 084B     		ldr	r3, .L57
 905 0020 9B68     		ldr	r3, [r3, #8]
 906 0022 074A     		ldr	r2, .L57
 907              		.loc 1 343 19
 908 0024 43F01003 		orr	r3, r3, #16
 909 0028 9360     		str	r3, [r2, #8]
 344:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 345:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         /* Exit Initialization mode */
 346:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         RTC_Initialization_Mode_Exit();
 910              		.loc 1 346 9
 911 002a FFF7FEFF 		bl	RTC_Initialization_Mode_Exit
 347:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 348:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         status_value = SUCCESS;
 912              		.loc 1 348 22
 913 002e 0123     		movs	r3, #1
 914 0030 FB71     		strb	r3, [r7, #7]
 915              	.L55:
 349:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
 350:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 351:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Enable the write protection for RTC registers */
 352:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Enable();
 916              		.loc 1 352 5
 917 0032 FFF7FEFF 		bl	RTC_Write_Protection_Enable
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 55


 353:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 354:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     return status_value;
 918              		.loc 1 354 12
 919 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 355:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 920              		.loc 1 355 1
 921 0038 1846     		mov	r0, r3
 922 003a 0837     		adds	r7, r7, #8
 923              	.LCFI59:
 924              		.cfi_def_cfa_offset 8
 925 003c BD46     		mov	sp, r7
 926              	.LCFI60:
 927              		.cfi_def_cfa_register 13
 928              		@ sp needed
 929 003e 80BD     		pop	{r7, pc}
 930              	.L58:
 931              		.align	2
 932              	.L57:
 933 0040 00280040 		.word	1073752064
 934              		.cfi_endproc
 935              	.LFE143:
 937              		.section	.text.RTC_Reference_Clock_Disable,"ax",%progbits
 938              		.align	1
 939              		.global	RTC_Reference_Clock_Disable
 940              		.syntax unified
 941              		.thumb
 942              		.thumb_func
 944              	RTC_Reference_Clock_Disable:
 945              	.LFB144:
 356:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 357:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 358:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
 359:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Reference_Clock_Disable.
 360:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Disables the RTC reference clock detection.
 361:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   none
 362:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none 
 363:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
 364:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** ErrorStatus RTC_Reference_Clock_Disable(void)
 365:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 946              		.loc 1 365 1
 947              		.cfi_startproc
 948              		@ args = 0, pretend = 0, frame = 8
 949              		@ frame_needed = 1, uses_anonymous_args = 0
 950 0000 80B5     		push	{r7, lr}
 951              	.LCFI61:
 952              		.cfi_def_cfa_offset 8
 953              		.cfi_offset 7, -8
 954              		.cfi_offset 14, -4
 955 0002 82B0     		sub	sp, sp, #8
 956              	.LCFI62:
 957              		.cfi_def_cfa_offset 16
 958 0004 00AF     		add	r7, sp, #0
 959              	.LCFI63:
 960              		.cfi_def_cfa_register 7
 366:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     ErrorStatus status_value = ERROR;
 961              		.loc 1 366 17
 962 0006 0023     		movs	r3, #0
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 56


 963 0008 FB71     		strb	r3, [r7, #7]
 367:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 368:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Disable the write protection for RTC registers */
 369:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Disable();
 964              		.loc 1 369 5
 965 000a FFF7FEFF 		bl	RTC_Write_Protection_Disable
 370:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 371:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Set Initialization mode */
 372:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     if (RTC_Initialization_Mode_Enter() == ERROR)
 966              		.loc 1 372 9
 967 000e FFF7FEFF 		bl	RTC_Initialization_Mode_Enter
 968 0012 0346     		mov	r3, r0
 969              		.loc 1 372 8
 970 0014 002B     		cmp	r3, #0
 971 0016 02D1     		bne	.L60
 373:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
 374:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         status_value = ERROR;
 972              		.loc 1 374 22
 973 0018 0023     		movs	r3, #0
 974 001a FB71     		strb	r3, [r7, #7]
 975 001c 09E0     		b	.L61
 976              	.L60:
 375:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
 376:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     else
 377:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
 378:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         /* Disable the RTC reference clock detection */
 379:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         RTC->CTRL &= ~RTC_REFERENCE_DETECT_ENABLE;
 977              		.loc 1 379 12
 978 001e 084B     		ldr	r3, .L63
 979 0020 9B68     		ldr	r3, [r3, #8]
 980 0022 074A     		ldr	r2, .L63
 981              		.loc 1 379 19
 982 0024 23F01003 		bic	r3, r3, #16
 983 0028 9360     		str	r3, [r2, #8]
 380:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 381:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         /* Exit Initialization mode */
 382:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         RTC_Initialization_Mode_Exit();
 984              		.loc 1 382 9
 985 002a FFF7FEFF 		bl	RTC_Initialization_Mode_Exit
 383:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 384:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         status_value = SUCCESS;
 986              		.loc 1 384 22
 987 002e 0123     		movs	r3, #1
 988 0030 FB71     		strb	r3, [r7, #7]
 989              	.L61:
 385:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
 386:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 387:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Enable the write protection for RTC registers */
 388:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Enable();
 990              		.loc 1 388 5
 991 0032 FFF7FEFF 		bl	RTC_Write_Protection_Enable
 389:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 390:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     return status_value;
 992              		.loc 1 390 12
 993 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 391:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 994              		.loc 1 391 1
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 57


 995 0038 1846     		mov	r0, r3
 996 003a 0837     		adds	r7, r7, #8
 997              	.LCFI64:
 998              		.cfi_def_cfa_offset 8
 999 003c BD46     		mov	sp, r7
 1000              	.LCFI65:
 1001              		.cfi_def_cfa_register 13
 1002              		@ sp needed
 1003 003e 80BD     		pop	{r7, pc}
 1004              	.L64:
 1005              		.align	2
 1006              	.L63:
 1007 0040 00280040 		.word	1073752064
 1008              		.cfi_endproc
 1009              	.LFE144:
 1011              		.section	.text.RTC_Bypass_Shadow_Enable,"ax",%progbits
 1012              		.align	1
 1013              		.global	RTC_Bypass_Shadow_Enable
 1014              		.syntax unified
 1015              		.thumb
 1016              		.thumb_func
 1018              	RTC_Bypass_Shadow_Enable:
 1019              	.LFB145:
 392:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 393:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
 394:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_By_Pass_Shadow_Enable.
 395:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Calendar value read from Calendar register.
 396:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   none
 397:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none 
 398:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
 399:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** void RTC_Bypass_Shadow_Enable(void)
 400:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 1020              		.loc 1 400 1
 1021              		.cfi_startproc
 1022              		@ args = 0, pretend = 0, frame = 0
 1023              		@ frame_needed = 1, uses_anonymous_args = 0
 1024 0000 80B5     		push	{r7, lr}
 1025              	.LCFI66:
 1026              		.cfi_def_cfa_offset 8
 1027              		.cfi_offset 7, -8
 1028              		.cfi_offset 14, -4
 1029 0002 00AF     		add	r7, sp, #0
 1030              	.LCFI67:
 1031              		.cfi_def_cfa_register 7
 401:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Disable the write protection for RTC registers */
 402:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Disable();
 1032              		.loc 1 402 5
 1033 0004 FFF7FEFF 		bl	RTC_Write_Protection_Disable
 403:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 404:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Set the BYPS bit */
 405:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->CTRL |= (uint8_t)RTC_BYPASS_UPDATE;
 1034              		.loc 1 405 8
 1035 0008 044B     		ldr	r3, .L66
 1036 000a 9B68     		ldr	r3, [r3, #8]
 1037 000c 034A     		ldr	r2, .L66
 1038              		.loc 1 405 15
 1039 000e 43F02003 		orr	r3, r3, #32
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 58


 1040 0012 9360     		str	r3, [r2, #8]
 406:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     
 407:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Enable the write protection for RTC registers */
 408:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Enable();
 1041              		.loc 1 408 5
 1042 0014 FFF7FEFF 		bl	RTC_Write_Protection_Enable
 409:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 1043              		.loc 1 409 1
 1044 0018 00BF     		nop
 1045 001a 80BD     		pop	{r7, pc}
 1046              	.L67:
 1047              		.align	2
 1048              	.L66:
 1049 001c 00280040 		.word	1073752064
 1050              		.cfi_endproc
 1051              	.LFE145:
 1053              		.section	.text.RTC_Bypass_Shadow_Disable,"ax",%progbits
 1054              		.align	1
 1055              		.global	RTC_Bypass_Shadow_Disable
 1056              		.syntax unified
 1057              		.thumb
 1058              		.thumb_func
 1060              	RTC_Bypass_Shadow_Disable:
 1061              	.LFB146:
 410:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 411:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
 412:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_By_Pass_Shadow_Disable.
 413:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Calendar value read from Shadow register.
 414:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   none
 415:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none 
 416:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
 417:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** void RTC_Bypass_Shadow_Disable(void)
 418:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 1062              		.loc 1 418 1
 1063              		.cfi_startproc
 1064              		@ args = 0, pretend = 0, frame = 0
 1065              		@ frame_needed = 1, uses_anonymous_args = 0
 1066 0000 80B5     		push	{r7, lr}
 1067              	.LCFI68:
 1068              		.cfi_def_cfa_offset 8
 1069              		.cfi_offset 7, -8
 1070              		.cfi_offset 14, -4
 1071 0002 00AF     		add	r7, sp, #0
 1072              	.LCFI69:
 1073              		.cfi_def_cfa_register 7
 419:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Disable the write protection for RTC registers */
 420:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Disable();
 1074              		.loc 1 420 5
 1075 0004 FFF7FEFF 		bl	RTC_Write_Protection_Disable
 421:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 422:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Reset the BYPS bit */
 423:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->CTRL &= (uint8_t)~RTC_BYPASS_UPDATE;
 1076              		.loc 1 423 8
 1077 0008 044B     		ldr	r3, .L69
 1078 000a 9B68     		ldr	r3, [r3, #8]
 1079 000c 034A     		ldr	r2, .L69
 1080              		.loc 1 423 15
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 59


 1081 000e 03F0DF03 		and	r3, r3, #223
 1082 0012 9360     		str	r3, [r2, #8]
 424:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 425:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Enable the write protection for RTC registers */
 426:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Enable();
 1083              		.loc 1 426 5
 1084 0014 FFF7FEFF 		bl	RTC_Write_Protection_Enable
 427:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 1085              		.loc 1 427 1
 1086 0018 00BF     		nop
 1087 001a 80BD     		pop	{r7, pc}
 1088              	.L70:
 1089              		.align	2
 1090              	.L69:
 1091 001c 00280040 		.word	1073752064
 1092              		.cfi_endproc
 1093              	.LFE146:
 1095              		.section	.text.RTC_Time_Struct_Initializes,"ax",%progbits
 1096              		.align	1
 1097              		.global	RTC_Time_Struct_Initializes
 1098              		.syntax unified
 1099              		.thumb
 1100              		.thumb_func
 1102              	RTC_Time_Struct_Initializes:
 1103              	.LFB147:
 428:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 429:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
 430:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Time_Struct_Initializes.
 431:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Fills each RTC_TimeStruct member with its default value
 432:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\        (Time = 00h:00min:00sec).
 433:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_TimeStruct : RTC_TimeStruct pointer to a RTC_TimeType structure that contains
 434:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                         the time configuration information for the RTC.
 435:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - Hours
 436:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - if RTC_AM_H12 is select the value in the 0-23 range
 437:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - if RTC_PM_H12 is select the value in the 1-12 range
 438:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - Minutes  the value set in the 0-59 range
 439:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - Seconds  the value set in the 0-59 range
 440:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - H12
 441:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_AM_H12
 442:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_PM_H12
 443:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none 
 444:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
 445:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** void RTC_Time_Struct_Initializes(RTC_TimeType* RTC_TimeStruct)
 446:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 1104              		.loc 1 446 1
 1105              		.cfi_startproc
 1106              		@ args = 0, pretend = 0, frame = 8
 1107              		@ frame_needed = 1, uses_anonymous_args = 0
 1108              		@ link register save eliminated.
 1109 0000 80B4     		push	{r7}
 1110              	.LCFI70:
 1111              		.cfi_def_cfa_offset 4
 1112              		.cfi_offset 7, -4
 1113 0002 83B0     		sub	sp, sp, #12
 1114              	.LCFI71:
 1115              		.cfi_def_cfa_offset 16
 1116 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 60


 1117              	.LCFI72:
 1118              		.cfi_def_cfa_register 7
 1119 0006 7860     		str	r0, [r7, #4]
 447:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Time = 00h:00min:00sec */
 448:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_TimeStruct->H12     = RTC_AM_H12;
 1120              		.loc 1 448 29
 1121 0008 7B68     		ldr	r3, [r7, #4]
 1122 000a 0022     		movs	r2, #0
 1123 000c DA70     		strb	r2, [r3, #3]
 449:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_TimeStruct->Hours   = 0;
 1124              		.loc 1 449 29
 1125 000e 7B68     		ldr	r3, [r7, #4]
 1126 0010 0022     		movs	r2, #0
 1127 0012 1A70     		strb	r2, [r3]
 450:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_TimeStruct->Minutes = 0;
 1128              		.loc 1 450 29
 1129 0014 7B68     		ldr	r3, [r7, #4]
 1130 0016 0022     		movs	r2, #0
 1131 0018 5A70     		strb	r2, [r3, #1]
 451:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_TimeStruct->Seconds = 0;
 1132              		.loc 1 451 29
 1133 001a 7B68     		ldr	r3, [r7, #4]
 1134 001c 0022     		movs	r2, #0
 1135 001e 9A70     		strb	r2, [r3, #2]
 452:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 1136              		.loc 1 452 1
 1137 0020 00BF     		nop
 1138 0022 0C37     		adds	r7, r7, #12
 1139              	.LCFI73:
 1140              		.cfi_def_cfa_offset 4
 1141 0024 BD46     		mov	sp, r7
 1142              	.LCFI74:
 1143              		.cfi_def_cfa_register 13
 1144              		@ sp needed
 1145 0026 5DF8047B 		ldr	r7, [sp], #4
 1146              	.LCFI75:
 1147              		.cfi_restore 7
 1148              		.cfi_def_cfa_offset 0
 1149 002a 7047     		bx	lr
 1150              		.cfi_endproc
 1151              	.LFE147:
 1153              		.section	.text.RTC_Time_Get,"ax",%progbits
 1154              		.align	1
 1155              		.global	RTC_Time_Get
 1156              		.syntax unified
 1157              		.thumb
 1158              		.thumb_func
 1160              	RTC_Time_Get:
 1161              	.LFB148:
 453:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 454:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
 455:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Time_Get.
 456:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Get the RTC current Time.
 457:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_Format : specifies the format of the returned parameters.
 458:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_FORMAT_BIN 
 459:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_FORMAT_BCD 
 460:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_TimeStruct : RTC_TimeStruct pointer to a RTC_TimeType structure.
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 61


 461:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none 
 462:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
 463:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** void RTC_Time_Get(uint32_t RTC_Format, RTC_TimeType* RTC_TimeStruct)
 464:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 1162              		.loc 1 464 1
 1163              		.cfi_startproc
 1164              		@ args = 0, pretend = 0, frame = 16
 1165              		@ frame_needed = 1, uses_anonymous_args = 0
 1166 0000 80B5     		push	{r7, lr}
 1167              	.LCFI76:
 1168              		.cfi_def_cfa_offset 8
 1169              		.cfi_offset 7, -8
 1170              		.cfi_offset 14, -4
 1171 0002 84B0     		sub	sp, sp, #16
 1172              	.LCFI77:
 1173              		.cfi_def_cfa_offset 24
 1174 0004 00AF     		add	r7, sp, #0
 1175              	.LCFI78:
 1176              		.cfi_def_cfa_register 7
 1177 0006 7860     		str	r0, [r7, #4]
 1178 0008 3960     		str	r1, [r7]
 465:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     uint32_t temp_value = 0;
 1179              		.loc 1 465 14
 1180 000a 0023     		movs	r3, #0
 1181 000c FB60     		str	r3, [r7, #12]
 466:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 467:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Get the RTC_TSH register */
 468:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     temp_value = (uint32_t)(RTC->TSH & RTC_TR_RESERVED_MASK);
 1182              		.loc 1 468 32
 1183 000e 254B     		ldr	r3, .L74
 1184 0010 1B68     		ldr	r3, [r3]
 1185              		.loc 1 468 16
 1186 0012 03F07F33 		and	r3, r3, #2139062143
 1187 0016 23F0FE43 		bic	r3, r3, #2130706432
 1188 001a FB60     		str	r3, [r7, #12]
 469:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 470:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Fill the structure fields with the read parameters */
 471:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_TimeStruct->Hours   = (uint8_t)((temp_value & (RTC_TSH_HOT | RTC_TSH_HOU)) >> 16);
 1189              		.loc 1 471 84
 1190 001c FB68     		ldr	r3, [r7, #12]
 1191 001e 1B0C     		lsrs	r3, r3, #16
 1192              		.loc 1 471 31
 1193 0020 DBB2     		uxtb	r3, r3
 1194 0022 03F03F03 		and	r3, r3, #63
 1195 0026 DAB2     		uxtb	r2, r3
 1196              		.loc 1 471 29
 1197 0028 3B68     		ldr	r3, [r7]
 1198 002a 1A70     		strb	r2, [r3]
 472:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_TimeStruct->Minutes = (uint8_t)((temp_value & (RTC_TSH_MIT | RTC_TSH_MIU)) >> 8);
 1199              		.loc 1 472 84
 1200 002c FB68     		ldr	r3, [r7, #12]
 1201 002e 1B0A     		lsrs	r3, r3, #8
 1202              		.loc 1 472 31
 1203 0030 DBB2     		uxtb	r3, r3
 1204 0032 03F07F03 		and	r3, r3, #127
 1205 0036 DAB2     		uxtb	r2, r3
 1206              		.loc 1 472 29
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 62


 1207 0038 3B68     		ldr	r3, [r7]
 1208 003a 5A70     		strb	r2, [r3, #1]
 473:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_TimeStruct->Seconds = (uint8_t)(temp_value & (RTC_TSH_SCT | RTC_TSH_SCU));
 1209              		.loc 1 473 31
 1210 003c FB68     		ldr	r3, [r7, #12]
 1211 003e DBB2     		uxtb	r3, r3
 1212 0040 03F07F03 		and	r3, r3, #127
 1213 0044 DAB2     		uxtb	r2, r3
 1214              		.loc 1 473 29
 1215 0046 3B68     		ldr	r3, [r7]
 1216 0048 9A70     		strb	r2, [r3, #2]
 474:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_TimeStruct->H12     = (uint8_t)((temp_value & (RTC_TSH_APM)) >> 16);
 1217              		.loc 1 474 70
 1218 004a FB68     		ldr	r3, [r7, #12]
 1219 004c 1B0C     		lsrs	r3, r3, #16
 1220              		.loc 1 474 31
 1221 004e DBB2     		uxtb	r3, r3
 1222 0050 03F04003 		and	r3, r3, #64
 1223 0054 DAB2     		uxtb	r2, r3
 1224              		.loc 1 474 29
 1225 0056 3B68     		ldr	r3, [r7]
 1226 0058 DA70     		strb	r2, [r3, #3]
 475:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 476:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Check the input parameters format */
 477:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     if (RTC_Format == RTC_FORMAT_BIN)
 1227              		.loc 1 477 8
 1228 005a 7B68     		ldr	r3, [r7, #4]
 1229 005c 002B     		cmp	r3, #0
 1230 005e 1AD1     		bne	.L73
 478:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
 479:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         /* Convert the structure parameters to Binary format */
 480:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         RTC_TimeStruct->Hours   = (uint8_t)RTC_Bcd2_To_Byte(RTC_TimeStruct->Hours);
 1231              		.loc 1 480 44
 1232 0060 3B68     		ldr	r3, [r7]
 1233 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1234 0064 1846     		mov	r0, r3
 1235 0066 FFF7FEFF 		bl	RTC_Bcd2_To_Byte
 1236 006a 0346     		mov	r3, r0
 1237 006c 1A46     		mov	r2, r3
 1238              		.loc 1 480 33
 1239 006e 3B68     		ldr	r3, [r7]
 1240 0070 1A70     		strb	r2, [r3]
 481:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         RTC_TimeStruct->Minutes = (uint8_t)RTC_Bcd2_To_Byte(RTC_TimeStruct->Minutes);
 1241              		.loc 1 481 44
 1242 0072 3B68     		ldr	r3, [r7]
 1243 0074 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1244 0076 1846     		mov	r0, r3
 1245 0078 FFF7FEFF 		bl	RTC_Bcd2_To_Byte
 1246 007c 0346     		mov	r3, r0
 1247 007e 1A46     		mov	r2, r3
 1248              		.loc 1 481 33
 1249 0080 3B68     		ldr	r3, [r7]
 1250 0082 5A70     		strb	r2, [r3, #1]
 482:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         RTC_TimeStruct->Seconds = (uint8_t)RTC_Bcd2_To_Byte(RTC_TimeStruct->Seconds);
 1251              		.loc 1 482 44
 1252 0084 3B68     		ldr	r3, [r7]
 1253 0086 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 63


 1254 0088 1846     		mov	r0, r3
 1255 008a FFF7FEFF 		bl	RTC_Bcd2_To_Byte
 1256 008e 0346     		mov	r3, r0
 1257 0090 1A46     		mov	r2, r3
 1258              		.loc 1 482 33
 1259 0092 3B68     		ldr	r3, [r7]
 1260 0094 9A70     		strb	r2, [r3, #2]
 1261              	.L73:
 483:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
 484:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->DATE;
 1262              		.loc 1 484 8
 1263 0096 034B     		ldr	r3, .L74
 1264 0098 5B68     		ldr	r3, [r3, #4]
 485:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 1265              		.loc 1 485 1
 1266 009a 00BF     		nop
 1267 009c 1037     		adds	r7, r7, #16
 1268              	.LCFI79:
 1269              		.cfi_def_cfa_offset 8
 1270 009e BD46     		mov	sp, r7
 1271              	.LCFI80:
 1272              		.cfi_def_cfa_register 13
 1273              		@ sp needed
 1274 00a0 80BD     		pop	{r7, pc}
 1275              	.L75:
 1276 00a2 00BF     		.align	2
 1277              	.L74:
 1278 00a4 00280040 		.word	1073752064
 1279              		.cfi_endproc
 1280              	.LFE148:
 1282              		.section	.text.RTC_SubSecond_Get,"ax",%progbits
 1283              		.align	1
 1284              		.global	RTC_SubSecond_Get
 1285              		.syntax unified
 1286              		.thumb
 1287              		.thumb_func
 1289              	RTC_SubSecond_Get:
 1290              	.LFB149:
 486:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 487:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
 488:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_SubSecond_Get.
 489:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Gets the RTC current Calendar Subseconds value.
 490:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  RTC current Calendar Subseconds value. 
 491:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
 492:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** uint32_t RTC_SubSecond_Get(void)
 493:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 1291              		.loc 1 493 1
 1292              		.cfi_startproc
 1293              		@ args = 0, pretend = 0, frame = 8
 1294              		@ frame_needed = 1, uses_anonymous_args = 0
 1295              		@ link register save eliminated.
 1296 0000 80B4     		push	{r7}
 1297              	.LCFI81:
 1298              		.cfi_def_cfa_offset 4
 1299              		.cfi_offset 7, -4
 1300 0002 83B0     		sub	sp, sp, #12
 1301              	.LCFI82:
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 64


 1302              		.cfi_def_cfa_offset 16
 1303 0004 00AF     		add	r7, sp, #0
 1304              	.LCFI83:
 1305              		.cfi_def_cfa_register 7
 494:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     uint32_t temp;
 495:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 	/* Get subseconds values from the correspondent registers*/
 496:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     temp = RTC->SUBS;
 1306              		.loc 1 496 15
 1307 0006 064B     		ldr	r3, .L78
 1308              		.loc 1 496 10
 1309 0008 9B6A     		ldr	r3, [r3, #40]
 1310 000a 7B60     		str	r3, [r7, #4]
 497:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->DATE;
 1311              		.loc 1 497 8
 1312 000c 044B     		ldr	r3, .L78
 1313 000e 5B68     		ldr	r3, [r3, #4]
 498:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     return temp;
 1314              		.loc 1 498 12
 1315 0010 7B68     		ldr	r3, [r7, #4]
 499:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 1316              		.loc 1 499 1
 1317 0012 1846     		mov	r0, r3
 1318 0014 0C37     		adds	r7, r7, #12
 1319              	.LCFI84:
 1320              		.cfi_def_cfa_offset 4
 1321 0016 BD46     		mov	sp, r7
 1322              	.LCFI85:
 1323              		.cfi_def_cfa_register 13
 1324              		@ sp needed
 1325 0018 5DF8047B 		ldr	r7, [sp], #4
 1326              	.LCFI86:
 1327              		.cfi_restore 7
 1328              		.cfi_def_cfa_offset 0
 1329 001c 7047     		bx	lr
 1330              	.L79:
 1331 001e 00BF     		.align	2
 1332              	.L78:
 1333 0020 00280040 		.word	1073752064
 1334              		.cfi_endproc
 1335              	.LFE149:
 1337              		.global	RTC_Delay_Flag
 1338              		.section	.bss.RTC_Delay_Flag,"aw",%nobits
 1339              		.align	2
 1342              	RTC_Delay_Flag:
 1343 0000 00000000 		.space	4
 1344              		.section	.text.RTC_Calendar_Initializes,"ax",%progbits
 1345              		.align	1
 1346              		.global	RTC_Calendar_Initializes
 1347              		.syntax unified
 1348              		.thumb
 1349              		.thumb_func
 1351              	RTC_Calendar_Initializes:
 1352              	.LFB150:
 500:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 501:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** #ifdef RTC_DELAY_USE_TIM6
 502:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** #define RTC_DELAY_1S_PRESCALER_VALUE_TIM6 (100)
 503:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** #define RTC_DELAY_1S_RELOAD_VALUE_TIM6    (SystemClockFrequency/1000)
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 65


 504:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** static NVIC_InitType TIM6_NVIC_Init;
 505:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** #else
 506:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** #define RTC_DELAY_1S_RELOAD_VALUE_SYSTICK (SystemClockFrequency/10)
 507:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** #endif
 508:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 509:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** volatile uint32_t RTC_Delay_Flag = 0;
 510:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 511:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
 512:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Calendar_Initializes.
 513:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Calendar initialization configuration.
 514:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_Format : specifies the format of the returned parameters.
 515:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_FORMAT_BIN 
 516:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_FORMAT_BCD 
 517:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_InitStruct: pointer to a RTC_InitType structure that contains the configuration
 518:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\        information for the RTC peripheral.When the user does not need to configure this 
 519:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\        parameter, note that NULL can be passed in. 
 520:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_HourFormat
 521:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_24HOUR_FORMAT
 522:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_12HOUR_FORMAT
 523:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_AsynchPrediv  the value in the 0-0x7F range
 524:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_SynchPrediv   the value in the 0-0x7FFF range
 525:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_DateStruct : RTC_DateStruct pointer to a RTC_DateType structure that contains
 526:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\        the date configuration information for the RTC,note that NULL can be passed in.
 527:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - WeekDay 
 528:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_WEEKDAY_MONDAY
 529:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_WEEKDAY_TUESDAY
 530:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_WEEKDAY_WEDNESDAY
 531:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_WEEKDAY_THURSDAY
 532:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_WEEKDAY_FRIDAY
 533:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_WEEKDAY_SATURDAY
 534:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_WEEKDAY_SUNDAY
 535:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - Month 
 536:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_MONTH_JANUARY
 537:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_MONTH_FEBRURY
 538:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_MONTH_MARCH
 539:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_MONTH_APRIL
 540:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_MONTH_MAY
 541:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_MONTH_JUNE
 542:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_MONTH_JULY
 543:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_MONTH_AUGUST
 544:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_MONTH_SEPTEMBER
 545:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_MONTH_OCTOBER
 546:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_MONTH_NOVEMBER
 547:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_MONTH_DECEMBER
 548:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - Date    the value in the 1-31 range 
 549:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - Year    the value in the 0-99 range
 550:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_TimeStruct : RTC_TimeStruct pointer to a RTC_TimeType structure that contains
 551:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\        the time configuration information for the RTC.When the user does not need to configure
 552:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\        parameter, note that NULL can be passed in.
 553:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - Hours
 554:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - if RTC_AM_H12 is select the value in the 0-23 range
 555:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - if RTC_PM_H12 is select the value in the 1-12 range
 556:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - Minutes  the value set in the 0-59 range
 557:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - Seconds  the value set in the 0-59 range
 558:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - H12
 559:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_AM_H12
 560:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_PM_H12
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 66


 561:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_DelayCmd: Enable or disable 1 second delay.
 562:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\        This parameter can be: ENABLE or DISABLE.
 563:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\  Note: 1. This parameter is configured according to the user's needs. If the user needs
 564:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\        to call this function multiple times within 1 second to configure the calendar, it must
 565:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\        be enabled, because we stipulate that the interval between two calendar configurations 
 566:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\        must be at least 1 second.
 567:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\        2. If this parameter is enabled, We provide two timers to help users complete this dela
 568:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\        operation (SysTick and TIM6). Users can choose which timer to use according to their ne
 569:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\        and use the macro RTC_DELAY_USE_TIM6 to select. At the same time, the user should also 
 570:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\        attention to the usage of the watchdog. If necessary, the dog can be fed in the interru
 571:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\        handler to prevent the watchdog generating a system reset due to the delay in this func
 572:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  ErrorStatus
 573:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - SUCCESS:  RTC PRE register, Date register, Time register is configured
 574:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - ERROR:    RTC PRE register, Date register, Time register is not configured
 575:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
 576:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** ErrorStatus RTC_Calendar_Initializes(uint32_t RTC_Format, RTC_InitType* RTC_InitStruct, RTC_DateTyp
 577:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 1353              		.loc 1 577 1
 1354              		.cfi_startproc
 1355              		@ args = 4, pretend = 0, frame = 32
 1356              		@ frame_needed = 1, uses_anonymous_args = 0
 1357 0000 90B5     		push	{r4, r7, lr}
 1358              	.LCFI87:
 1359              		.cfi_def_cfa_offset 12
 1360              		.cfi_offset 4, -12
 1361              		.cfi_offset 7, -8
 1362              		.cfi_offset 14, -4
 1363 0002 89B0     		sub	sp, sp, #36
 1364              	.LCFI88:
 1365              		.cfi_def_cfa_offset 48
 1366 0004 00AF     		add	r7, sp, #0
 1367              	.LCFI89:
 1368              		.cfi_def_cfa_register 7
 1369 0006 F860     		str	r0, [r7, #12]
 1370 0008 B960     		str	r1, [r7, #8]
 1371 000a 7A60     		str	r2, [r7, #4]
 1372 000c 3B60     		str	r3, [r7]
 578:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     static uint32_t first_init_flag = 1;
 579:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     uint32_t temp_value1 = 0, temp_value2 = 0;
 1373              		.loc 1 579 14
 1374 000e 0023     		movs	r3, #0
 1375 0010 FB61     		str	r3, [r7, #28]
 1376              		.loc 1 579 31
 1377 0012 0023     		movs	r3, #0
 1378 0014 BB61     		str	r3, [r7, #24]
 580:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     ErrorStatus status_value    = ERROR;
 1379              		.loc 1 580 17
 1380 0016 0023     		movs	r3, #0
 1381 0018 FB75     		strb	r3, [r7, #23]
 581:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     
 582:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     if(RTC_DateStruct != NULL)
 1382              		.loc 1 582 7
 1383 001a 7B68     		ldr	r3, [r7, #4]
 1384 001c 002B     		cmp	r3, #0
 1385 001e 11D0     		beq	.L81
 583:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
 584:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         if ((RTC_Format == RTC_FORMAT_BIN) && ((RTC_DateStruct->Month & 0x10) == 0x10))
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 67


 1386              		.loc 1 584 12
 1387 0020 FB68     		ldr	r3, [r7, #12]
 1388 0022 002B     		cmp	r3, #0
 1389 0024 0ED1     		bne	.L81
 1390              		.loc 1 584 63 discriminator 1
 1391 0026 7B68     		ldr	r3, [r7, #4]
 1392 0028 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1393              		.loc 1 584 71 discriminator 1
 1394 002a 03F01003 		and	r3, r3, #16
 1395              		.loc 1 584 44 discriminator 1
 1396 002e 002B     		cmp	r3, #0
 1397 0030 08D0     		beq	.L81
 585:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         {
 586:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             RTC_DateStruct->Month = (RTC_DateStruct->Month & (uint32_t) ~(0x10)) + 0x0A;
 1398              		.loc 1 586 52
 1399 0032 7B68     		ldr	r3, [r7, #4]
 1400 0034 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1401              		.loc 1 586 60
 1402 0036 23F01003 		bic	r3, r3, #16
 1403 003a DBB2     		uxtb	r3, r3
 1404              		.loc 1 586 82
 1405 003c 0A33     		adds	r3, r3, #10
 1406 003e DAB2     		uxtb	r2, r3
 1407              		.loc 1 586 35
 1408 0040 7B68     		ldr	r3, [r7, #4]
 1409 0042 5A70     		strb	r2, [r3, #1]
 1410              	.L81:
 587:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         }
 588:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
 589:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     
 590:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Check the input parameters format */
 591:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     if (RTC_Format != RTC_FORMAT_BIN)
 1411              		.loc 1 591 8
 1412 0044 FB68     		ldr	r3, [r7, #12]
 1413 0046 002B     		cmp	r3, #0
 1414 0048 24D0     		beq	.L82
 592:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
 593:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         if(RTC_DateStruct != NULL)
 1415              		.loc 1 593 11
 1416 004a 7B68     		ldr	r3, [r7, #4]
 1417 004c 002B     		cmp	r3, #0
 1418 004e 0ED0     		beq	.L83
 594:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         {
 595:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             temp_value1 = ((((uint32_t)RTC_DateStruct->Year) << 16) | (((uint32_t)RTC_DateStruct->M
 1419              		.loc 1 595 54
 1420 0050 7B68     		ldr	r3, [r7, #4]
 1421 0052 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1422              		.loc 1 595 62
 1423 0054 1A04     		lsls	r2, r3, #16
 1424              		.loc 1 595 97
 1425 0056 7B68     		ldr	r3, [r7, #4]
 1426 0058 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1427              		.loc 1 595 106
 1428 005a 1B02     		lsls	r3, r3, #8
 1429              		.loc 1 595 69
 1430 005c 1343     		orrs	r3, r3, r2
 596:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****                        | ((uint32_t)RTC_DateStruct->Date) | (((uint32_t)RTC_DateStruct->WeekDay) <<
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 68


 1431              		.loc 1 596 51
 1432 005e 7A68     		ldr	r2, [r7, #4]
 1433 0060 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 1434              		.loc 1 596 24
 1435 0062 1A43     		orrs	r2, r2, r3
 1436              		.loc 1 596 87
 1437 0064 7B68     		ldr	r3, [r7, #4]
 1438 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1439              		.loc 1 596 98
 1440 0068 5B03     		lsls	r3, r3, #13
 595:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****                        | ((uint32_t)RTC_DateStruct->Date) | (((uint32_t)RTC_DateStruct->WeekDay) <<
 1441              		.loc 1 595 25
 1442 006a 1343     		orrs	r3, r3, r2
 1443 006c FB61     		str	r3, [r7, #28]
 1444              	.L83:
 597:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         }
 598:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         
 599:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         if(RTC_TimeStruct != NULL)
 1445              		.loc 1 599 11
 1446 006e 3B68     		ldr	r3, [r7]
 1447 0070 002B     		cmp	r3, #0
 1448 0072 4DD0     		beq	.L84
 600:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         {
 601:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             temp_value2 = (((uint32_t)(RTC_TimeStruct->Hours) << 16) | ((uint32_t)(RTC_TimeStruct->
 1449              		.loc 1 601 54
 1450 0074 3B68     		ldr	r3, [r7]
 1451 0076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1452              		.loc 1 601 63
 1453 0078 1A04     		lsls	r2, r3, #16
 1454              		.loc 1 601 98
 1455 007a 3B68     		ldr	r3, [r7]
 1456 007c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1457              		.loc 1 601 109
 1458 007e 1B02     		lsls	r3, r3, #8
 1459              		.loc 1 601 70
 1460 0080 1343     		orrs	r3, r3, r2
 602:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****                        | ((uint32_t)RTC_TimeStruct->Seconds) | ((uint32_t)(RTC_TimeStruct->H12) << 
 1461              		.loc 1 602 51
 1462 0082 3A68     		ldr	r2, [r7]
 1463 0084 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 1464              		.loc 1 602 24
 1465 0086 1A43     		orrs	r2, r2, r3
 1466              		.loc 1 602 90
 1467 0088 3B68     		ldr	r3, [r7]
 1468 008a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1469              		.loc 1 602 97
 1470 008c 1B04     		lsls	r3, r3, #16
 601:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****                        | ((uint32_t)RTC_TimeStruct->Seconds) | ((uint32_t)(RTC_TimeStruct->H12) << 
 1471              		.loc 1 601 25
 1472 008e 1343     		orrs	r3, r3, r2
 1473 0090 BB61     		str	r3, [r7, #24]
 1474 0092 3DE0     		b	.L84
 1475              	.L82:
 603:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         }
 604:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
 605:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     else
 606:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 69


 607:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         if(RTC_DateStruct != NULL)
 1476              		.loc 1 607 11
 1477 0094 7B68     		ldr	r3, [r7, #4]
 1478 0096 002B     		cmp	r3, #0
 1479 0098 1BD0     		beq	.L85
 608:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         {
 609:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             temp_value1 = (((uint32_t)RTC_Byte_To_Bcd2(RTC_DateStruct->Year) << 16)
 1480              		.loc 1 609 39
 1481 009a 7B68     		ldr	r3, [r7, #4]
 1482 009c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1483 009e 1846     		mov	r0, r3
 1484 00a0 FFF7FEFF 		bl	RTC_Byte_To_Bcd2
 1485 00a4 0346     		mov	r3, r0
 1486              		.loc 1 609 78
 1487 00a6 1C04     		lsls	r4, r3, #16
 610:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****                        | ((uint32_t)RTC_Byte_To_Bcd2(RTC_DateStruct->Month) << 8)
 1488              		.loc 1 610 37
 1489 00a8 7B68     		ldr	r3, [r7, #4]
 1490 00aa 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1491 00ac 1846     		mov	r0, r3
 1492 00ae FFF7FEFF 		bl	RTC_Byte_To_Bcd2
 1493 00b2 0346     		mov	r3, r0
 1494              		.loc 1 610 77
 1495 00b4 1B02     		lsls	r3, r3, #8
 1496              		.loc 1 610 24
 1497 00b6 1C43     		orrs	r4, r4, r3
 611:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****                        | ((uint32_t)RTC_Byte_To_Bcd2(RTC_DateStruct->Date)) | ((uint32_t)RTC_DateSt
 1498              		.loc 1 611 37
 1499 00b8 7B68     		ldr	r3, [r7, #4]
 1500 00ba 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1501 00bc 1846     		mov	r0, r3
 1502 00be FFF7FEFF 		bl	RTC_Byte_To_Bcd2
 1503 00c2 0346     		mov	r3, r0
 1504              		.loc 1 611 24
 1505 00c4 44EA0302 		orr	r2, r4, r3
 1506              		.loc 1 611 104
 1507 00c8 7B68     		ldr	r3, [r7, #4]
 1508 00ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1509              		.loc 1 611 114
 1510 00cc 5B03     		lsls	r3, r3, #13
 609:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****                        | ((uint32_t)RTC_Byte_To_Bcd2(RTC_DateStruct->Month) << 8)
 1511              		.loc 1 609 25
 1512 00ce 1343     		orrs	r3, r3, r2
 1513 00d0 FB61     		str	r3, [r7, #28]
 1514              	.L85:
 612:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         }
 613:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         
 614:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         if(RTC_TimeStruct != NULL)
 1515              		.loc 1 614 11
 1516 00d2 3B68     		ldr	r3, [r7]
 1517 00d4 002B     		cmp	r3, #0
 1518 00d6 1BD0     		beq	.L84
 615:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         {
 616:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             temp_value2 = (uint32_t)(((uint32_t)RTC_Byte_To_Bcd2(RTC_TimeStruct->Hours) << 16)
 1519              		.loc 1 616 49
 1520 00d8 3B68     		ldr	r3, [r7]
 1521 00da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 70


 1522 00dc 1846     		mov	r0, r3
 1523 00de FFF7FEFF 		bl	RTC_Byte_To_Bcd2
 1524 00e2 0346     		mov	r3, r0
 1525              		.loc 1 616 89
 1526 00e4 1C04     		lsls	r4, r3, #16
 617:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****                        | ((uint32_t)RTC_Byte_To_Bcd2(RTC_TimeStruct->Minutes) << 8)
 1527              		.loc 1 617 37
 1528 00e6 3B68     		ldr	r3, [r7]
 1529 00e8 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1530 00ea 1846     		mov	r0, r3
 1531 00ec FFF7FEFF 		bl	RTC_Byte_To_Bcd2
 1532 00f0 0346     		mov	r3, r0
 1533              		.loc 1 617 79
 1534 00f2 1B02     		lsls	r3, r3, #8
 1535              		.loc 1 617 24
 1536 00f4 1C43     		orrs	r4, r4, r3
 618:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****                        | ((uint32_t)RTC_Byte_To_Bcd2(RTC_TimeStruct->Seconds)) | (((uint32_t)RTC_Ti
 1537              		.loc 1 618 37
 1538 00f6 3B68     		ldr	r3, [r7]
 1539 00f8 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1540 00fa 1846     		mov	r0, r3
 1541 00fc FFF7FEFF 		bl	RTC_Byte_To_Bcd2
 1542 0100 0346     		mov	r3, r0
 1543              		.loc 1 618 24
 1544 0102 44EA0302 		orr	r2, r4, r3
 1545              		.loc 1 618 108
 1546 0106 3B68     		ldr	r3, [r7]
 1547 0108 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1548              		.loc 1 618 115
 1549 010a 1B04     		lsls	r3, r3, #16
 616:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****                        | ((uint32_t)RTC_Byte_To_Bcd2(RTC_TimeStruct->Minutes) << 8)
 1550              		.loc 1 616 25
 1551 010c 1343     		orrs	r3, r3, r2
 1552 010e BB61     		str	r3, [r7, #24]
 1553              	.L84:
 619:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         }
 620:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
 621:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 622:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Disable the write protection for RTC registers */
 623:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Disable();
 1554              		.loc 1 623 5
 1555 0110 FFF7FEFF 		bl	RTC_Write_Protection_Disable
 624:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 625:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     if(RTC_DelayCmd == ENABLE)
 1556              		.loc 1 625 7
 1557 0114 97F83030 		ldrb	r3, [r7, #48]	@ zero_extendqisi2
 1558 0118 012B     		cmp	r3, #1
 1559 011a 0BD1     		bne	.L86
 626:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
 627:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         /* The first initialization does not execute the delay */
 628:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         if(!first_init_flag)
 1560              		.loc 1 628 12
 1561 011c 3A4B     		ldr	r3, .L98
 1562 011e 1B68     		ldr	r3, [r3]
 1563              		.loc 1 628 11
 1564 0120 002B     		cmp	r3, #0
 1565 0122 07D1     		bne	.L86
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 71


 629:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         {
 630:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             /* Wait for the 1.1 second delay flag to be set */
 631:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             while(!RTC_Delay_Flag);
 1566              		.loc 1 631 18
 1567 0124 00BF     		nop
 1568              	.L87:
 1569              		.loc 1 631 19 discriminator 1
 1570 0126 394B     		ldr	r3, .L98+4
 1571 0128 1B68     		ldr	r3, [r3]
 1572 012a 002B     		cmp	r3, #0
 1573 012c FBD0     		beq	.L87
 632:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             RTC_Delay_Flag = 0;
 1574              		.loc 1 632 28
 1575 012e 374B     		ldr	r3, .L98+4
 1576 0130 0022     		movs	r2, #0
 1577 0132 1A60     		str	r2, [r3]
 1578              	.L86:
 633:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         }
 634:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
 635:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Set Initialization mode */
 636:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     if (RTC_Initialization_Mode_Enter() == ERROR)
 1579              		.loc 1 636 9
 1580 0134 FFF7FEFF 		bl	RTC_Initialization_Mode_Enter
 1581 0138 0346     		mov	r3, r0
 1582              		.loc 1 636 8
 1583 013a 002B     		cmp	r3, #0
 1584 013c 02D1     		bne	.L88
 637:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
 638:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         status_value = ERROR;
 1585              		.loc 1 638 22
 1586 013e 0023     		movs	r3, #0
 1587 0140 FB75     		strb	r3, [r7, #23]
 1588 0142 59E0     		b	.L89
 1589              	.L88:
 639:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
 640:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     else
 641:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
 642:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         if(RTC_InitStruct != NULL)
 1590              		.loc 1 642 11
 1591 0144 BB68     		ldr	r3, [r7, #8]
 1592 0146 002B     		cmp	r3, #0
 1593 0148 0CD0     		beq	.L90
 643:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         {
 644:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             /* Set rtc hour format*/
 645:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             RTC_Hour_Format_Set(RTC_InitStruct->RTC_HourFormat);
 1594              		.loc 1 645 13
 1595 014a BB68     		ldr	r3, [r7, #8]
 1596 014c 1B68     		ldr	r3, [r3]
 1597 014e 1846     		mov	r0, r3
 1598 0150 FFF7FEFF 		bl	RTC_Hour_Format_Set
 646:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             /* Configure the RTC PRE */
 647:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             RTC_Prescale_Config(RTC_InitStruct->RTC_SynchPrediv, RTC_InitStruct->RTC_AsynchPrediv);
 1599              		.loc 1 647 13
 1600 0154 BB68     		ldr	r3, [r7, #8]
 1601 0156 9A68     		ldr	r2, [r3, #8]
 1602 0158 BB68     		ldr	r3, [r7, #8]
 1603 015a 5B68     		ldr	r3, [r3, #4]
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 72


 1604 015c 1946     		mov	r1, r3
 1605 015e 1046     		mov	r0, r2
 1606 0160 FFF7FEFF 		bl	RTC_Prescale_Config
 1607              	.L90:
 648:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         }
 649:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 650:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         if(RTC_DateStruct != NULL)
 1608              		.loc 1 650 11
 1609 0164 7B68     		ldr	r3, [r7, #4]
 1610 0166 002B     		cmp	r3, #0
 1611 0168 06D0     		beq	.L91
 651:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         {
 652:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             /* Set the RTC_DATE register */
 653:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             RTC->DATE = (uint32_t)(temp_value1 & RTC_DATE_RESERVED_MASK);
 1612              		.loc 1 653 16
 1613 016a 294A     		ldr	r2, .L98+8
 1614              		.loc 1 653 25
 1615 016c FB69     		ldr	r3, [r7, #28]
 1616 016e 23F07F43 		bic	r3, r3, #-16777216
 1617 0172 23F0C003 		bic	r3, r3, #192
 1618              		.loc 1 653 23
 1619 0176 5360     		str	r3, [r2, #4]
 1620              	.L91:
 654:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         }
 655:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 656:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         if(RTC_TimeStruct != NULL)
 1621              		.loc 1 656 11
 1622 0178 3B68     		ldr	r3, [r7]
 1623 017a 002B     		cmp	r3, #0
 1624 017c 06D0     		beq	.L92
 657:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         {
 658:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             /* Set the RTC_TSH register */
 659:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             RTC->TSH = (uint32_t)(temp_value2 & RTC_TR_RESERVED_MASK);
 1625              		.loc 1 659 16
 1626 017e 244A     		ldr	r2, .L98+8
 1627              		.loc 1 659 24
 1628 0180 BB69     		ldr	r3, [r7, #24]
 1629 0182 03F07F33 		and	r3, r3, #2139062143
 1630 0186 23F0FE43 		bic	r3, r3, #2130706432
 1631              		.loc 1 659 22
 1632 018a 1360     		str	r3, [r2]
 1633              	.L92:
 660:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         }
 661:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         
 662:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         /* Exit Initialization mode */
 663:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         RTC_Initialization_Mode_Exit();
 1634              		.loc 1 663 9
 1635 018c FFF7FEFF 		bl	RTC_Initialization_Mode_Exit
 664:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 665:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         /* If  RTC_CTRL_BYPS bit = 0, wait for synchro else this check is not needed */
 666:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         if ((RTC->CTRL & RTC_CTRL_BYPS) == RESET)
 1636              		.loc 1 666 17
 1637 0190 1F4B     		ldr	r3, .L98+8
 1638 0192 9B68     		ldr	r3, [r3, #8]
 1639              		.loc 1 666 24
 1640 0194 03F02003 		and	r3, r3, #32
 1641              		.loc 1 666 12
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 73


 1642 0198 002B     		cmp	r3, #0
 1643 019a 0AD1     		bne	.L93
 667:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         {
 668:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             if (RTC_Wait_For_Synchronization() == ERROR)
 1644              		.loc 1 668 17
 1645 019c FFF7FEFF 		bl	RTC_Wait_For_Synchronization
 1646 01a0 0346     		mov	r3, r0
 1647              		.loc 1 668 16
 1648 01a2 002B     		cmp	r3, #0
 1649 01a4 02D1     		bne	.L94
 669:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             {
 670:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****                 status_value = ERROR;
 1650              		.loc 1 670 30
 1651 01a6 0023     		movs	r3, #0
 1652 01a8 FB75     		strb	r3, [r7, #23]
 1653 01aa 04E0     		b	.L95
 1654              	.L94:
 671:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             }
 672:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             else
 673:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             {
 674:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****                 status_value = SUCCESS;
 1655              		.loc 1 674 30
 1656 01ac 0123     		movs	r3, #1
 1657 01ae FB75     		strb	r3, [r7, #23]
 1658 01b0 01E0     		b	.L95
 1659              	.L93:
 675:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             }
 676:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         }
 677:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         else
 678:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         {
 679:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             status_value = SUCCESS;
 1660              		.loc 1 679 26
 1661 01b2 0123     		movs	r3, #1
 1662 01b4 FB75     		strb	r3, [r7, #23]
 1663              	.L95:
 680:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         }
 681:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         
 682:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         if(RTC_DelayCmd == ENABLE)
 1664              		.loc 1 682 11
 1665 01b6 97F83030 		ldrb	r3, [r7, #48]	@ zero_extendqisi2
 1666 01ba 012B     		cmp	r3, #1
 1667 01bc 1CD1     		bne	.L89
 683:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         {
 684:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             if(first_init_flag)
 1668              		.loc 1 684 16
 1669 01be 124B     		ldr	r3, .L98
 1670 01c0 1B68     		ldr	r3, [r3]
 1671              		.loc 1 684 15
 1672 01c2 002B     		cmp	r3, #0
 1673 01c4 02D0     		beq	.L96
 685:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             {
 686:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****                 /* Clear the first initialization flag */
 687:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****                 first_init_flag = 0;
 1674              		.loc 1 687 33
 1675 01c6 104B     		ldr	r3, .L98
 1676 01c8 0022     		movs	r2, #0
 1677 01ca 1A60     		str	r2, [r3]
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 74


 1678              	.L96:
 688:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             }
 689:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             
 690:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** #ifdef RTC_DELAY_USE_TIM6
 691:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             /* Set Interrupt Priority */            
 692:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             TIM6_NVIC_Init.NVIC_IRQChannel = TIM6_IRQn;
 693:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             TIM6_NVIC_Init.NVIC_IRQChannelPreemptionPriority = 0;
 694:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             TIM6_NVIC_Init.NVIC_IRQChannelSubPriority = 1;
 695:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             TIM6_NVIC_Init.NVIC_IRQChannelCmd = ENABLE;
 696:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             NVIC_Initializes(&TIM6_NVIC_Init);
 697:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             /* Enable the TIM6 clock*/
 698:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             RCC->APB1PCLKEN |= RCC_APB1_PERIPH_TIM6;
 699:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             RCC->APB1PRST |= RCC_APB1_PERIPH_TIM6;
 700:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             RCC->APB1PRST &= ~RCC_APB1_PERIPH_TIM6;
 701:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             /* Set the Autoreload value */
 702:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             TIM6->AR = RTC_DELAY_1S_RELOAD_VALUE_TIM6;
 703:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             /* Prescaler configuration */
 704:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             TIM6->PSC = RTC_DELAY_1S_PRESCALER_VALUE_TIM6 - 1;
 705:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             /* Set or reset the UG Bit */
 706:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             TIM6->EVTGEN = TIM_PSC_RELOAD_MODE_IMMEDIATE;
 707:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             /* TIM6 enable update irq */
 708:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             TIM6->DINTEN |= TIM_INT_UPDATE;
 709:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             /* Clear the flag */
 710:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             TIM6->STS &= (uint32_t)~TIM_FLAG_UPDATE;
 711:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             /* TIM6 enable counter */
 712:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             TIM6->CTRL1 |= TIM_CTRL1_CNTEN;
 713:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** #else
 714:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             /* Set Interrupt Priority */
 715:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             NVIC_SetPriority (SysTick_IRQn, (1<<__NVIC_PRIO_BITS) - 1);
 1679              		.loc 1 715 13
 1680 01cc 0F21     		movs	r1, #15
 1681 01ce 4FF0FF30 		mov	r0, #-1
 1682 01d2 FFF7FEFF 		bl	__NVIC_SetPriority
 716:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             /* set reload register */
 717:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             SysTick->LOAD  = (RTC_DELAY_1S_RELOAD_VALUE_SYSTICK & SysTick_LOAD_RELOAD_Msk) - 1;
 1683              		.loc 1 717 31
 1684 01d6 0F4B     		ldr	r3, .L98+12
 1685 01d8 1B68     		ldr	r3, [r3]
 1686 01da 0F4A     		ldr	r2, .L98+16
 1687 01dc A2FB0323 		umull	r2, r3, r2, r3
 1688 01e0 DB08     		lsrs	r3, r3, #3
 1689              		.loc 1 717 65
 1690 01e2 23F07F43 		bic	r3, r3, #-16777216
 1691              		.loc 1 717 20
 1692 01e6 0D4A     		ldr	r2, .L98+20
 1693              		.loc 1 717 92
 1694 01e8 013B     		subs	r3, r3, #1
 1695              		.loc 1 717 28
 1696 01ea 5360     		str	r3, [r2, #4]
 718:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             /* Load the SysTick Counter Value */
 719:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             SysTick->VAL   = 0;
 1697              		.loc 1 719 20
 1698 01ec 0B4B     		ldr	r3, .L98+20
 1699              		.loc 1 719 28
 1700 01ee 0022     		movs	r2, #0
 1701 01f0 9A60     		str	r2, [r3, #8]
 720:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             /* Enable SysTick IRQ and SysTick Timer */
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 75


 721:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 1702              		.loc 1 721 20
 1703 01f2 0A4B     		ldr	r3, .L98+20
 1704              		.loc 1 721 28
 1705 01f4 0722     		movs	r2, #7
 1706 01f6 1A60     		str	r2, [r3]
 1707              	.L89:
 722:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****                              SysTick_CTRL_TICKINT_Msk   |
 723:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****                              SysTick_CTRL_ENABLE_Msk;
 724:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** #endif
 725:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         }
 726:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
 727:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Enable the write protection for RTC registers */
 728:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Enable();
 1708              		.loc 1 728 5
 1709 01f8 FFF7FEFF 		bl	RTC_Write_Protection_Enable
 729:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 730:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     return status_value;
 1710              		.loc 1 730 12
 1711 01fc FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 731:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 1712              		.loc 1 731 1
 1713 01fe 1846     		mov	r0, r3
 1714 0200 2437     		adds	r7, r7, #36
 1715              	.LCFI90:
 1716              		.cfi_def_cfa_offset 12
 1717 0202 BD46     		mov	sp, r7
 1718              	.LCFI91:
 1719              		.cfi_def_cfa_register 13
 1720              		@ sp needed
 1721 0204 90BD     		pop	{r4, r7, pc}
 1722              	.L99:
 1723 0206 00BF     		.align	2
 1724              	.L98:
 1725 0208 00000000 		.word	first_init_flag.0
 1726 020c 00000000 		.word	RTC_Delay_Flag
 1727 0210 00280040 		.word	1073752064
 1728 0214 00000000 		.word	SystemClockFrequency
 1729 0218 CDCCCCCC 		.word	-858993459
 1730 021c 10E000E0 		.word	-536813552
 1731              		.cfi_endproc
 1732              	.LFE150:
 1734              		.section	.text.RTC_Date_Struct_Initializes,"ax",%progbits
 1735              		.align	1
 1736              		.global	RTC_Date_Struct_Initializes
 1737              		.syntax unified
 1738              		.thumb
 1739              		.thumb_func
 1741              	RTC_Date_Struct_Initializes:
 1742              	.LFB151:
 732:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 733:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 734:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
 735:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Date_Struct_Initializes.
 736:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Fills each RTC_DateStruct member with its default value (Monday, January 01 xx00).
 737:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_DateStruct : RTC_DateStruct pointer to a RTC_DateType structure that contains
 738:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                       the date configuration information for the RTC.
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 76


 739:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - WeekDay 
 740:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_WEEKDAY_MONDAY
 741:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_WEEKDAY_TUESDAY
 742:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_WEEKDAY_WEDNESDAY
 743:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_WEEKDAY_THURSDAY
 744:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_WEEKDAY_FRIDAY
 745:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_WEEKDAY_SATURDAY
 746:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_WEEKDAY_SUNDAY
 747:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - Month 
 748:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_MONTH_JANUARY
 749:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_MONTH_FEBRURY
 750:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_MONTH_MARCH
 751:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_MONTH_APRIL
 752:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_MONTH_MAY
 753:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_MONTH_JUNE
 754:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_MONTH_JULY
 755:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_MONTH_AUGUST
 756:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_MONTH_SEPTEMBER
 757:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_MONTH_OCTOBER
 758:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_MONTH_NOVEMBER
 759:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_MONTH_DECEMBER
 760:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - Date    the value in the 1-31 range 
 761:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - Year    the value in the 0-99 range
 762:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none 
 763:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
 764:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** void RTC_Date_Struct_Initializes(RTC_DateType* RTC_DateStruct)
 765:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 1743              		.loc 1 765 1
 1744              		.cfi_startproc
 1745              		@ args = 0, pretend = 0, frame = 8
 1746              		@ frame_needed = 1, uses_anonymous_args = 0
 1747              		@ link register save eliminated.
 1748 0000 80B4     		push	{r7}
 1749              	.LCFI92:
 1750              		.cfi_def_cfa_offset 4
 1751              		.cfi_offset 7, -4
 1752 0002 83B0     		sub	sp, sp, #12
 1753              	.LCFI93:
 1754              		.cfi_def_cfa_offset 16
 1755 0004 00AF     		add	r7, sp, #0
 1756              	.LCFI94:
 1757              		.cfi_def_cfa_register 7
 1758 0006 7860     		str	r0, [r7, #4]
 766:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Monday, January 01 xx00 */
 767:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_DateStruct->WeekDay = RTC_WEEKDAY_MONDAY;
 1759              		.loc 1 767 29
 1760 0008 7B68     		ldr	r3, [r7, #4]
 1761 000a 0122     		movs	r2, #1
 1762 000c 1A70     		strb	r2, [r3]
 768:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_DateStruct->Date    = 1;
 1763              		.loc 1 768 29
 1764 000e 7B68     		ldr	r3, [r7, #4]
 1765 0010 0122     		movs	r2, #1
 1766 0012 9A70     		strb	r2, [r3, #2]
 769:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_DateStruct->Month   = RTC_MONTH_JANUARY;
 1767              		.loc 1 769 29
 1768 0014 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 77


 1769 0016 0122     		movs	r2, #1
 1770 0018 5A70     		strb	r2, [r3, #1]
 770:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_DateStruct->Year    = 0;
 1771              		.loc 1 770 29
 1772 001a 7B68     		ldr	r3, [r7, #4]
 1773 001c 0022     		movs	r2, #0
 1774 001e DA70     		strb	r2, [r3, #3]
 771:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 1775              		.loc 1 771 1
 1776 0020 00BF     		nop
 1777 0022 0C37     		adds	r7, r7, #12
 1778              	.LCFI95:
 1779              		.cfi_def_cfa_offset 4
 1780 0024 BD46     		mov	sp, r7
 1781              	.LCFI96:
 1782              		.cfi_def_cfa_register 13
 1783              		@ sp needed
 1784 0026 5DF8047B 		ldr	r7, [sp], #4
 1785              	.LCFI97:
 1786              		.cfi_restore 7
 1787              		.cfi_def_cfa_offset 0
 1788 002a 7047     		bx	lr
 1789              		.cfi_endproc
 1790              	.LFE151:
 1792              		.section	.text.RTC_Date_Get,"ax",%progbits
 1793              		.align	1
 1794              		.global	RTC_Date_Get
 1795              		.syntax unified
 1796              		.thumb
 1797              		.thumb_func
 1799              	RTC_Date_Get:
 1800              	.LFB152:
 772:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 773:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
 774:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Date_Get.
 775:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun      Get the RTC current date.
 776:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_Format : specifies the format of the returned parameters.
 777:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_FORMAT_BIN 
 778:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_FORMAT_BCD 
 779:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_DateType : RTC_DateStruct pointer to a RTC_DateType structure that will
 780:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                       contain the returned current date configuration.
 781:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none 
 782:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
 783:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** void RTC_Date_Get(uint32_t RTC_Format, RTC_DateType* RTC_DateStruct)
 784:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 1801              		.loc 1 784 1
 1802              		.cfi_startproc
 1803              		@ args = 0, pretend = 0, frame = 16
 1804              		@ frame_needed = 1, uses_anonymous_args = 0
 1805 0000 80B5     		push	{r7, lr}
 1806              	.LCFI98:
 1807              		.cfi_def_cfa_offset 8
 1808              		.cfi_offset 7, -8
 1809              		.cfi_offset 14, -4
 1810 0002 84B0     		sub	sp, sp, #16
 1811              	.LCFI99:
 1812              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 78


 1813 0004 00AF     		add	r7, sp, #0
 1814              	.LCFI100:
 1815              		.cfi_def_cfa_register 7
 1816 0006 7860     		str	r0, [r7, #4]
 1817 0008 3960     		str	r1, [r7]
 785:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     uint32_t temp_value = 0;
 1818              		.loc 1 785 14
 1819 000a 0023     		movs	r3, #0
 1820 000c FB60     		str	r3, [r7, #12]
 786:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 787:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Get the RTC_TSH register */
 788:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     temp_value = (uint32_t)(RTC->DATE & RTC_DATE_RESERVED_MASK);
 1821              		.loc 1 788 32
 1822 000e 224B     		ldr	r3, .L104
 1823 0010 5B68     		ldr	r3, [r3, #4]
 1824              		.loc 1 788 16
 1825 0012 23F07F43 		bic	r3, r3, #-16777216
 1826 0016 23F0C003 		bic	r3, r3, #192
 1827 001a FB60     		str	r3, [r7, #12]
 789:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 790:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Fill the structure fields with the read parameters */
 791:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_DateStruct->Year    = (uint8_t)((temp_value & (RTC_DATE_YRT | RTC_DATE_YRU)) >> 16);
 1828              		.loc 1 791 86
 1829 001c FB68     		ldr	r3, [r7, #12]
 1830 001e 1B0C     		lsrs	r3, r3, #16
 1831              		.loc 1 791 31
 1832 0020 DAB2     		uxtb	r2, r3
 1833              		.loc 1 791 29
 1834 0022 3B68     		ldr	r3, [r7]
 1835 0024 DA70     		strb	r2, [r3, #3]
 792:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_DateStruct->Month   = (uint8_t)((temp_value & (RTC_DATE_MOT | RTC_DATE_MOU)) >> 8);
 1836              		.loc 1 792 86
 1837 0026 FB68     		ldr	r3, [r7, #12]
 1838 0028 1B0A     		lsrs	r3, r3, #8
 1839              		.loc 1 792 31
 1840 002a DBB2     		uxtb	r3, r3
 1841 002c 03F01F03 		and	r3, r3, #31
 1842 0030 DAB2     		uxtb	r2, r3
 1843              		.loc 1 792 29
 1844 0032 3B68     		ldr	r3, [r7]
 1845 0034 5A70     		strb	r2, [r3, #1]
 793:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_DateStruct->Date    = (uint8_t)(temp_value & (RTC_DATE_DAT | RTC_DATE_DAU));
 1846              		.loc 1 793 31
 1847 0036 FB68     		ldr	r3, [r7, #12]
 1848 0038 DBB2     		uxtb	r3, r3
 1849 003a 03F03F03 		and	r3, r3, #63
 1850 003e DAB2     		uxtb	r2, r3
 1851              		.loc 1 793 29
 1852 0040 3B68     		ldr	r3, [r7]
 1853 0042 9A70     		strb	r2, [r3, #2]
 794:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_DateStruct->WeekDay = (uint8_t)((temp_value & (RTC_DATE_WDU)) >> 13);
 1854              		.loc 1 794 71
 1855 0044 FB68     		ldr	r3, [r7, #12]
 1856 0046 5B0B     		lsrs	r3, r3, #13
 1857              		.loc 1 794 31
 1858 0048 DBB2     		uxtb	r3, r3
 1859 004a 03F00703 		and	r3, r3, #7
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 79


 1860 004e DAB2     		uxtb	r2, r3
 1861              		.loc 1 794 29
 1862 0050 3B68     		ldr	r3, [r7]
 1863 0052 1A70     		strb	r2, [r3]
 795:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 796:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Check the input parameters format */
 797:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     if (RTC_Format == RTC_FORMAT_BIN)
 1864              		.loc 1 797 8
 1865 0054 7B68     		ldr	r3, [r7, #4]
 1866 0056 002B     		cmp	r3, #0
 1867 0058 1AD1     		bne	.L103
 798:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
 799:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         /* Convert the structure parameters to Binary format */
 800:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         RTC_DateStruct->Year  = (uint8_t)RTC_Bcd2_To_Byte(RTC_DateStruct->Year);
 1868              		.loc 1 800 42
 1869 005a 3B68     		ldr	r3, [r7]
 1870 005c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1871 005e 1846     		mov	r0, r3
 1872 0060 FFF7FEFF 		bl	RTC_Bcd2_To_Byte
 1873 0064 0346     		mov	r3, r0
 1874 0066 1A46     		mov	r2, r3
 1875              		.loc 1 800 31
 1876 0068 3B68     		ldr	r3, [r7]
 1877 006a DA70     		strb	r2, [r3, #3]
 801:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         RTC_DateStruct->Month = (uint8_t)RTC_Bcd2_To_Byte(RTC_DateStruct->Month);
 1878              		.loc 1 801 42
 1879 006c 3B68     		ldr	r3, [r7]
 1880 006e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1881 0070 1846     		mov	r0, r3
 1882 0072 FFF7FEFF 		bl	RTC_Bcd2_To_Byte
 1883 0076 0346     		mov	r3, r0
 1884 0078 1A46     		mov	r2, r3
 1885              		.loc 1 801 31
 1886 007a 3B68     		ldr	r3, [r7]
 1887 007c 5A70     		strb	r2, [r3, #1]
 802:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         RTC_DateStruct->Date  = (uint8_t)RTC_Bcd2_To_Byte(RTC_DateStruct->Date);
 1888              		.loc 1 802 42
 1889 007e 3B68     		ldr	r3, [r7]
 1890 0080 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1891 0082 1846     		mov	r0, r3
 1892 0084 FFF7FEFF 		bl	RTC_Bcd2_To_Byte
 1893 0088 0346     		mov	r3, r0
 1894 008a 1A46     		mov	r2, r3
 1895              		.loc 1 802 31
 1896 008c 3B68     		ldr	r3, [r7]
 1897 008e 9A70     		strb	r2, [r3, #2]
 1898              	.L103:
 803:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
 804:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 1899              		.loc 1 804 1
 1900 0090 00BF     		nop
 1901 0092 1037     		adds	r7, r7, #16
 1902              	.LCFI101:
 1903              		.cfi_def_cfa_offset 8
 1904 0094 BD46     		mov	sp, r7
 1905              	.LCFI102:
 1906              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 80


 1907              		@ sp needed
 1908 0096 80BD     		pop	{r7, pc}
 1909              	.L105:
 1910              		.align	2
 1911              	.L104:
 1912 0098 00280040 		.word	1073752064
 1913              		.cfi_endproc
 1914              	.LFE152:
 1916              		.section	.text.RTC_Alarm_Set,"ax",%progbits
 1917              		.align	1
 1918              		.global	RTC_Alarm_Set
 1919              		.syntax unified
 1920              		.thumb
 1921              		.thumb_func
 1923              	RTC_Alarm_Set:
 1924              	.LFB153:
 805:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 806:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
 807:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Alarm_Set.
 808:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Set the specified RTC Alarm.
 809:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_Format : specifies the format of the returned parameters.
 810:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_FORMAT_BIN 
 811:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_FORMAT_BCD 
 812:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_Alarm : RTC_Alarm specifies the alarm to be configured.
 813:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_A_ALARM 
 814:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_B_ALARM 
 815:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_AlarmStruct : RTC_AlarmStruct pointer to a RTC_AlarmType structure that
 816:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                          contains the alarm configuration parameters.
 817:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - AlarmTime   RTC_TimeStruct pointer to a RTC_TimeType structure that contains
 818:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                         the time configuration information for the RTC.
 819:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - Hours
 820:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - if RTC_AM_H12 is select the value in the 0-23 range
 821:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - if RTC_PM_H12 is select the value in the 1-12 range
 822:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - Minutes  the value set in the 0-59 range
 823:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - Seconds  the value set in the 0-59 range
 824:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - H12
 825:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_AM_H12
 826:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_PM_H12
 827:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - AlarmMask 
 828:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_ALARMMASK_NONE
 829:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_ALARMMASK_WEEKDAY
 830:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_ALARMMASK_HOURS
 831:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_ALARMMASK_MINUTES
 832:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_ALARMMASK_SECONDS
 833:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_ALARMMASK_ALL
 834:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - DateWeekMode 
 835:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_ALARM_SEL_WEEKDAY_DATE
 836:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_ALARM_SEL_WEEKDAY_WEEKDAY
 837:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - DateWeekValue 
 838:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_WEEKDAY_MONDAY
 839:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_WEEKDAY_TUESDAY
 840:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_WEEKDAY_WEDNESDAY
 841:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_WEEKDAY_THURSDAY
 842:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_WEEKDAY_FRIDAY
 843:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_WEEKDAY_SATURDAY
 844:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_WEEKDAY_SUNDAY
 845:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none 
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 81


 846:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
 847:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** void RTC_Alarm_Set(uint32_t RTC_Format, uint32_t RTC_Alarm, RTC_AlarmType* RTC_AlarmStruct)
 848:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 1925              		.loc 1 848 1
 1926              		.cfi_startproc
 1927              		@ args = 0, pretend = 0, frame = 24
 1928              		@ frame_needed = 1, uses_anonymous_args = 0
 1929 0000 90B5     		push	{r4, r7, lr}
 1930              	.LCFI103:
 1931              		.cfi_def_cfa_offset 12
 1932              		.cfi_offset 4, -12
 1933              		.cfi_offset 7, -8
 1934              		.cfi_offset 14, -4
 1935 0002 87B0     		sub	sp, sp, #28
 1936              	.LCFI104:
 1937              		.cfi_def_cfa_offset 40
 1938 0004 00AF     		add	r7, sp, #0
 1939              	.LCFI105:
 1940              		.cfi_def_cfa_register 7
 1941 0006 F860     		str	r0, [r7, #12]
 1942 0008 B960     		str	r1, [r7, #8]
 1943 000a 7A60     		str	r2, [r7, #4]
 849:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     uint32_t temp_value = 0;
 1944              		.loc 1 849 14
 1945 000c 0023     		movs	r3, #0
 1946 000e 7B61     		str	r3, [r7, #20]
 850:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 851:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     if (RTC_Format == RTC_FORMAT_BIN)
 1947              		.loc 1 851 8
 1948 0010 FB68     		ldr	r3, [r7, #12]
 1949 0012 002B     		cmp	r3, #0
 1950 0014 09D1     		bne	.L107
 852:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
 853:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         if ((RTC->CTRL & RTC_CTRL_HFMT) == (uint32_t)RESET)
 1951              		.loc 1 853 17
 1952 0016 374B     		ldr	r3, .L113
 1953 0018 9B68     		ldr	r3, [r3, #8]
 1954              		.loc 1 853 24
 1955 001a 03F04003 		and	r3, r3, #64
 1956              		.loc 1 853 12
 1957 001e 002B     		cmp	r3, #0
 1958 0020 0CD1     		bne	.L108
 854:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         {
 855:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             RTC_AlarmStruct->AlarmTime.H12 = 0x00;
 1959              		.loc 1 855 44
 1960 0022 7B68     		ldr	r3, [r7, #4]
 1961 0024 0022     		movs	r2, #0
 1962 0026 DA70     		strb	r2, [r3, #3]
 1963 0028 08E0     		b	.L108
 1964              	.L107:
 856:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         }
 857:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
 858:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     else
 859:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
 860:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         if ((RTC->CTRL & RTC_CTRL_HFMT) == (uint32_t)RESET)
 1965              		.loc 1 860 17
 1966 002a 324B     		ldr	r3, .L113
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 82


 1967 002c 9B68     		ldr	r3, [r3, #8]
 1968              		.loc 1 860 24
 1969 002e 03F04003 		and	r3, r3, #64
 1970              		.loc 1 860 12
 1971 0032 002B     		cmp	r3, #0
 1972 0034 02D1     		bne	.L108
 861:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         {
 862:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             RTC_AlarmStruct->AlarmTime.H12 = 0x00;
 1973              		.loc 1 862 44
 1974 0036 7B68     		ldr	r3, [r7, #4]
 1975 0038 0022     		movs	r2, #0
 1976 003a DA70     		strb	r2, [r3, #3]
 1977              	.L108:
 863:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         }
 864:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
 865:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 866:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Check the input parameters format */
 867:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     if (RTC_Format != RTC_FORMAT_BIN)
 1978              		.loc 1 867 8
 1979 003c FB68     		ldr	r3, [r7, #12]
 1980 003e 002B     		cmp	r3, #0
 1981 0040 19D0     		beq	.L109
 868:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
 869:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         temp_value =
 870:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             (((uint32_t)(RTC_AlarmStruct->AlarmTime.Hours) << 16)
 1982              		.loc 1 870 52
 1983 0042 7B68     		ldr	r3, [r7, #4]
 1984 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1985              		.loc 1 870 60
 1986 0046 1A04     		lsls	r2, r3, #16
 871:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****              | ((uint32_t)(RTC_AlarmStruct->AlarmTime.Minutes) << 8) | ((uint32_t)RTC_AlarmStruct->
 1987              		.loc 1 871 54
 1988 0048 7B68     		ldr	r3, [r7, #4]
 1989 004a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1990              		.loc 1 871 64
 1991 004c 1B02     		lsls	r3, r3, #8
 1992              		.loc 1 871 14
 1993 004e 1343     		orrs	r3, r3, r2
 1994              		.loc 1 871 109
 1995 0050 7A68     		ldr	r2, [r7, #4]
 1996 0052 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 1997              		.loc 1 871 70
 1998 0054 1A43     		orrs	r2, r2, r3
 872:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****              | ((uint32_t)(RTC_AlarmStruct->AlarmTime.H12) << 16) | ((uint32_t)(RTC_AlarmStruct->Da
 1999              		.loc 1 872 54
 2000 0056 7B68     		ldr	r3, [r7, #4]
 2001 0058 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 2002              		.loc 1 872 60
 2003 005a 1B04     		lsls	r3, r3, #16
 2004              		.loc 1 872 14
 2005 005c 1A43     		orrs	r2, r2, r3
 2006              		.loc 1 872 96
 2007 005e 7B68     		ldr	r3, [r7, #4]
 2008 0060 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 2009              		.loc 1 872 113
 2010 0062 1B06     		lsls	r3, r3, #24
 2011              		.loc 1 872 67
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 83


 2012 0064 1A43     		orrs	r2, r2, r3
 873:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****              | ((uint32_t)RTC_AlarmStruct->DateWeekMode) | ((uint32_t)RTC_AlarmStruct->AlarmMask));
 2013              		.loc 1 873 42
 2014 0066 7B68     		ldr	r3, [r7, #4]
 2015 0068 9B68     		ldr	r3, [r3, #8]
 2016              		.loc 1 873 14
 2017 006a 1A43     		orrs	r2, r2, r3
 2018              		.loc 1 873 86
 2019 006c 7B68     		ldr	r3, [r7, #4]
 2020 006e 5B68     		ldr	r3, [r3, #4]
 869:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             (((uint32_t)(RTC_AlarmStruct->AlarmTime.Hours) << 16)
 2021              		.loc 1 869 20
 2022 0070 1343     		orrs	r3, r3, r2
 2023 0072 7B61     		str	r3, [r7, #20]
 2024 0074 2BE0     		b	.L110
 2025              	.L109:
 874:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
 875:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     else
 876:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
 877:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         temp_value = (((uint32_t)RTC_Byte_To_Bcd2(RTC_AlarmStruct->AlarmTime.Hours) << 16)
 2026              		.loc 1 877 34
 2027 0076 7B68     		ldr	r3, [r7, #4]
 2028 0078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2029 007a 1846     		mov	r0, r3
 2030 007c FFF7FEFF 		bl	RTC_Byte_To_Bcd2
 2031 0080 0346     		mov	r3, r0
 2032              		.loc 1 877 85
 2033 0082 1C04     		lsls	r4, r3, #16
 878:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****                        | ((uint32_t)RTC_Byte_To_Bcd2(RTC_AlarmStruct->AlarmTime.Minutes) << 8)
 2034              		.loc 1 878 37
 2035 0084 7B68     		ldr	r3, [r7, #4]
 2036 0086 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2037 0088 1846     		mov	r0, r3
 2038 008a FFF7FEFF 		bl	RTC_Byte_To_Bcd2
 2039 008e 0346     		mov	r3, r0
 2040              		.loc 1 878 90
 2041 0090 1B02     		lsls	r3, r3, #8
 2042              		.loc 1 878 24
 2043 0092 1C43     		orrs	r4, r4, r3
 879:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****                        | ((uint32_t)RTC_Byte_To_Bcd2(RTC_AlarmStruct->AlarmTime.Seconds))
 2044              		.loc 1 879 37
 2045 0094 7B68     		ldr	r3, [r7, #4]
 2046 0096 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 2047 0098 1846     		mov	r0, r3
 2048 009a FFF7FEFF 		bl	RTC_Byte_To_Bcd2
 2049 009e 0346     		mov	r3, r0
 2050              		.loc 1 879 24
 2051 00a0 44EA0302 		orr	r2, r4, r3
 880:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****                        | ((uint32_t)(RTC_AlarmStruct->AlarmTime.H12) << 16)
 2052              		.loc 1 880 64
 2053 00a4 7B68     		ldr	r3, [r7, #4]
 2054 00a6 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 2055              		.loc 1 880 70
 2056 00a8 1B04     		lsls	r3, r3, #16
 2057              		.loc 1 880 24
 2058 00aa 42EA0304 		orr	r4, r2, r3
 881:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****                        | ((uint32_t)RTC_Byte_To_Bcd2(RTC_AlarmStruct->DateWeekValue) << 24)
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 84


 2059              		.loc 1 881 37
 2060 00ae 7B68     		ldr	r3, [r7, #4]
 2061 00b0 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 2062 00b2 1846     		mov	r0, r3
 2063 00b4 FFF7FEFF 		bl	RTC_Byte_To_Bcd2
 2064 00b8 0346     		mov	r3, r0
 2065              		.loc 1 881 86
 2066 00ba 1B06     		lsls	r3, r3, #24
 2067              		.loc 1 881 24
 2068 00bc 44EA0302 		orr	r2, r4, r3
 882:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****                        | ((uint32_t)RTC_AlarmStruct->DateWeekMode) | ((uint32_t)RTC_AlarmStruct->Al
 2069              		.loc 1 882 52
 2070 00c0 7B68     		ldr	r3, [r7, #4]
 2071 00c2 9B68     		ldr	r3, [r3, #8]
 2072              		.loc 1 882 24
 2073 00c4 1A43     		orrs	r2, r2, r3
 2074              		.loc 1 882 96
 2075 00c6 7B68     		ldr	r3, [r7, #4]
 2076 00c8 5B68     		ldr	r3, [r3, #4]
 877:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****                        | ((uint32_t)RTC_Byte_To_Bcd2(RTC_AlarmStruct->AlarmTime.Minutes) << 8)
 2077              		.loc 1 877 20
 2078 00ca 1343     		orrs	r3, r3, r2
 2079 00cc 7B61     		str	r3, [r7, #20]
 2080              	.L110:
 883:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
 884:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 885:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Disable the write protection for RTC registers */
 886:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Disable();
 2081              		.loc 1 886 5
 2082 00ce FFF7FEFF 		bl	RTC_Write_Protection_Disable
 887:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 888:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Configure the Alarm register */
 889:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     if (RTC_Alarm == RTC_A_ALARM)
 2083              		.loc 1 889 8
 2084 00d2 BB68     		ldr	r3, [r7, #8]
 2085 00d4 B3F5807F 		cmp	r3, #256
 2086 00d8 03D1     		bne	.L111
 890:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
 891:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         RTC->ALARMA = (uint32_t)temp_value;
 2087              		.loc 1 891 12
 2088 00da 064A     		ldr	r2, .L113
 2089              		.loc 1 891 21
 2090 00dc 7B69     		ldr	r3, [r7, #20]
 2091 00de D361     		str	r3, [r2, #28]
 2092 00e0 02E0     		b	.L112
 2093              	.L111:
 892:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
 893:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     else
 894:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
 895:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         RTC->ALARMB = (uint32_t)temp_value;
 2094              		.loc 1 895 12
 2095 00e2 044A     		ldr	r2, .L113
 2096              		.loc 1 895 21
 2097 00e4 7B69     		ldr	r3, [r7, #20]
 2098 00e6 1362     		str	r3, [r2, #32]
 2099              	.L112:
 896:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 85


 897:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 898:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Enable the write protection for RTC registers */
 899:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Enable();
 2100              		.loc 1 899 5
 2101 00e8 FFF7FEFF 		bl	RTC_Write_Protection_Enable
 900:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 2102              		.loc 1 900 1
 2103 00ec 00BF     		nop
 2104 00ee 1C37     		adds	r7, r7, #28
 2105              	.LCFI106:
 2106              		.cfi_def_cfa_offset 12
 2107 00f0 BD46     		mov	sp, r7
 2108              	.LCFI107:
 2109              		.cfi_def_cfa_register 13
 2110              		@ sp needed
 2111 00f2 90BD     		pop	{r4, r7, pc}
 2112              	.L114:
 2113              		.align	2
 2114              	.L113:
 2115 00f4 00280040 		.word	1073752064
 2116              		.cfi_endproc
 2117              	.LFE153:
 2119              		.section	.text.RTC_Alarm_Struct_Initializes,"ax",%progbits
 2120              		.align	1
 2121              		.global	RTC_Alarm_Struct_Initializes
 2122              		.syntax unified
 2123              		.thumb
 2124              		.thumb_func
 2126              	RTC_Alarm_Struct_Initializes:
 2127              	.LFB154:
 901:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 902:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
 903:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Alarm_Struct_Initializes.
 904:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Fills each RTC_AlarmStruct member with its default value
 905:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\        (Time = 00h:00mn:00sec / Date = 1st day of the month/Mask =
 906:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\        all fields are masked).
 907:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_AlarmStruct : RTC_AlarmStruct pointer to a RTC_AlarmType structure that
 908:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                          contains the alarm configuration parameters.
 909:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - AlarmTime   RTC_TimeStruct pointer to a RTC_TimeType structure that contains
 910:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                         the time configuration information for the RTC.
 911:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - Hours
 912:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - if RTC_AM_H12 is select the value in the 0-23 range
 913:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - if RTC_PM_H12 is select the value in the 1-12 range
 914:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - Minutes  the value set in the 0-59 range
 915:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - Seconds  the value set in the 0-59 range
 916:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - H12
 917:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_AM_H12
 918:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_PM_H12
 919:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - AlarmMask 
 920:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_ALARMMASK_NONE
 921:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_ALARMMASK_WEEKDAY
 922:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_ALARMMASK_HOURS
 923:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_ALARMMASK_MINUTES
 924:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_ALARMMASK_SECONDS
 925:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_ALARMMASK_ALL
 926:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - DateWeekMode 
 927:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_ALARM_SEL_WEEKDAY_DATE
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 86


 928:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_ALARM_SEL_WEEKDAY_WEEKDAY
 929:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - DateWeekValue 
 930:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_WEEKDAY_MONDAY
 931:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_WEEKDAY_TUESDAY
 932:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_WEEKDAY_WEDNESDAY
 933:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_WEEKDAY_THURSDAY
 934:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_WEEKDAY_FRIDAY
 935:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_WEEKDAY_SATURDAY
 936:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\                - RTC_WEEKDAY_SUNDAY
 937:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none 
 938:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
 939:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** void RTC_Alarm_Struct_Initializes(RTC_AlarmType* RTC_AlarmStruct)
 940:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 2128              		.loc 1 940 1
 2129              		.cfi_startproc
 2130              		@ args = 0, pretend = 0, frame = 8
 2131              		@ frame_needed = 1, uses_anonymous_args = 0
 2132              		@ link register save eliminated.
 2133 0000 80B4     		push	{r7}
 2134              	.LCFI108:
 2135              		.cfi_def_cfa_offset 4
 2136              		.cfi_offset 7, -4
 2137 0002 83B0     		sub	sp, sp, #12
 2138              	.LCFI109:
 2139              		.cfi_def_cfa_offset 16
 2140 0004 00AF     		add	r7, sp, #0
 2141              	.LCFI110:
 2142              		.cfi_def_cfa_register 7
 2143 0006 7860     		str	r0, [r7, #4]
 941:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Alarm Time Settings : Time = 00h:00mn:00sec */
 942:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_AlarmStruct->AlarmTime.H12     = RTC_AM_H12;
 2144              		.loc 1 942 40
 2145 0008 7B68     		ldr	r3, [r7, #4]
 2146 000a 0022     		movs	r2, #0
 2147 000c DA70     		strb	r2, [r3, #3]
 943:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_AlarmStruct->AlarmTime.Hours   = 0;
 2148              		.loc 1 943 40
 2149 000e 7B68     		ldr	r3, [r7, #4]
 2150 0010 0022     		movs	r2, #0
 2151 0012 1A70     		strb	r2, [r3]
 944:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_AlarmStruct->AlarmTime.Minutes = 0;
 2152              		.loc 1 944 40
 2153 0014 7B68     		ldr	r3, [r7, #4]
 2154 0016 0022     		movs	r2, #0
 2155 0018 5A70     		strb	r2, [r3, #1]
 945:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_AlarmStruct->AlarmTime.Seconds = 0;
 2156              		.loc 1 945 40
 2157 001a 7B68     		ldr	r3, [r7, #4]
 2158 001c 0022     		movs	r2, #0
 2159 001e 9A70     		strb	r2, [r3, #2]
 946:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 947:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Alarm Date Settings : Date = 1st day of the month */
 948:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_AlarmStruct->DateWeekMode  = RTC_ALARM_SEL_WEEKDAY_DATE;
 2160              		.loc 1 948 36
 2161 0020 7B68     		ldr	r3, [r7, #4]
 2162 0022 0022     		movs	r2, #0
 2163 0024 9A60     		str	r2, [r3, #8]
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 87


 949:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_AlarmStruct->DateWeekValue = 1;
 2164              		.loc 1 949 36
 2165 0026 7B68     		ldr	r3, [r7, #4]
 2166 0028 0122     		movs	r2, #1
 2167 002a 1A73     		strb	r2, [r3, #12]
 950:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 951:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Alarm Masks Settings : Mask =  all fields are not masked */
 952:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_AlarmStruct->AlarmMask = RTC_ALARMMASK_NONE;
 2168              		.loc 1 952 32
 2169 002c 7B68     		ldr	r3, [r7, #4]
 2170 002e 0022     		movs	r2, #0
 2171 0030 5A60     		str	r2, [r3, #4]
 953:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 2172              		.loc 1 953 1
 2173 0032 00BF     		nop
 2174 0034 0C37     		adds	r7, r7, #12
 2175              	.LCFI111:
 2176              		.cfi_def_cfa_offset 4
 2177 0036 BD46     		mov	sp, r7
 2178              	.LCFI112:
 2179              		.cfi_def_cfa_register 13
 2180              		@ sp needed
 2181 0038 5DF8047B 		ldr	r7, [sp], #4
 2182              	.LCFI113:
 2183              		.cfi_restore 7
 2184              		.cfi_def_cfa_offset 0
 2185 003c 7047     		bx	lr
 2186              		.cfi_endproc
 2187              	.LFE154:
 2189              		.section	.text.RTC_Alarm_Get,"ax",%progbits
 2190              		.align	1
 2191              		.global	RTC_Alarm_Get
 2192              		.syntax unified
 2193              		.thumb
 2194              		.thumb_func
 2196              	RTC_Alarm_Get:
 2197              	.LFB155:
 954:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 955:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
 956:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Alarm_Get.
 957:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Get the RTC Alarm value and masks.
 958:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_Format : specifies the format of the output parameters.
 959:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_FORMAT_BIN 
 960:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_FORMAT_BCD 
 961:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_Alarm : specifies the alarm to be read.
 962:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_A_ALARM 
 963:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_B_ALARM 
 964:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_AlarmStruct : pointer to a RTC_AlarmType structure that will
 965:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\        contains the output alarm configuration values.
 966:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          
 967:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none 
 968:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
 969:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** void RTC_Alarm_Get(uint32_t RTC_Format, uint32_t RTC_Alarm, RTC_AlarmType* RTC_AlarmStruct)
 970:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 2198              		.loc 1 970 1
 2199              		.cfi_startproc
 2200              		@ args = 0, pretend = 0, frame = 24
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 88


 2201              		@ frame_needed = 1, uses_anonymous_args = 0
 2202 0000 80B5     		push	{r7, lr}
 2203              	.LCFI114:
 2204              		.cfi_def_cfa_offset 8
 2205              		.cfi_offset 7, -8
 2206              		.cfi_offset 14, -4
 2207 0002 86B0     		sub	sp, sp, #24
 2208              	.LCFI115:
 2209              		.cfi_def_cfa_offset 32
 2210 0004 00AF     		add	r7, sp, #0
 2211              	.LCFI116:
 2212              		.cfi_def_cfa_register 7
 2213 0006 F860     		str	r0, [r7, #12]
 2214 0008 B960     		str	r1, [r7, #8]
 2215 000a 7A60     		str	r2, [r7, #4]
 971:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     uint32_t temp_value = 0;
 2216              		.loc 1 971 14
 2217 000c 0023     		movs	r3, #0
 2218 000e 7B61     		str	r3, [r7, #20]
 972:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 973:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Get the RTC_ALARMx register */
 974:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     if (RTC_Alarm == RTC_A_ALARM)
 2219              		.loc 1 974 8
 2220 0010 BB68     		ldr	r3, [r7, #8]
 2221 0012 B3F5807F 		cmp	r3, #256
 2222 0016 03D1     		bne	.L117
 975:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
 976:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         temp_value = (uint32_t)(RTC->ALARMA);
 2223              		.loc 1 976 36
 2224 0018 314B     		ldr	r3, .L121
 2225              		.loc 1 976 20
 2226 001a DB69     		ldr	r3, [r3, #28]
 2227 001c 7B61     		str	r3, [r7, #20]
 2228 001e 02E0     		b	.L118
 2229              	.L117:
 977:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
 978:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     else
 979:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
 980:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         temp_value = (uint32_t)(RTC->ALARMB);
 2230              		.loc 1 980 36
 2231 0020 2F4B     		ldr	r3, .L121
 2232              		.loc 1 980 20
 2233 0022 1B6A     		ldr	r3, [r3, #32]
 2234 0024 7B61     		str	r3, [r7, #20]
 2235              	.L118:
 981:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
 982:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
 983:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Fill the structure with the read parameters */
 984:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_AlarmStruct->AlarmTime.Hours   = (uint32_t)((temp_value & (RTC_ALARMA_HOT | RTC_ALARMA_HOU)
 2236              		.loc 1 984 42
 2237 0026 7B69     		ldr	r3, [r7, #20]
 2238 0028 1B0C     		lsrs	r3, r3, #16
 2239 002a DBB2     		uxtb	r3, r3
 2240 002c 03F03F03 		and	r3, r3, #63
 2241 0030 DAB2     		uxtb	r2, r3
 2242              		.loc 1 984 40
 2243 0032 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 89


 2244 0034 1A70     		strb	r2, [r3]
 985:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_AlarmStruct->AlarmTime.Minutes = (uint32_t)((temp_value & (RTC_ALARMA_MIT | RTC_ALARMA_MIU)
 2245              		.loc 1 985 42
 2246 0036 7B69     		ldr	r3, [r7, #20]
 2247 0038 1B0A     		lsrs	r3, r3, #8
 2248 003a DBB2     		uxtb	r3, r3
 2249 003c 03F07F03 		and	r3, r3, #127
 2250 0040 DAB2     		uxtb	r2, r3
 2251              		.loc 1 985 40
 2252 0042 7B68     		ldr	r3, [r7, #4]
 2253 0044 5A70     		strb	r2, [r3, #1]
 986:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_AlarmStruct->AlarmTime.Seconds = (uint32_t)(temp_value & (RTC_ALARMA_SET | RTC_ALARMA_SEU))
 2254              		.loc 1 986 42
 2255 0046 7B69     		ldr	r3, [r7, #20]
 2256 0048 DBB2     		uxtb	r3, r3
 2257 004a 03F07F03 		and	r3, r3, #127
 2258 004e DAB2     		uxtb	r2, r3
 2259              		.loc 1 986 40
 2260 0050 7B68     		ldr	r3, [r7, #4]
 2261 0052 9A70     		strb	r2, [r3, #2]
 987:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_AlarmStruct->AlarmTime.H12     = (uint32_t)((temp_value & RTC_ALARMA_APM) >> 16);
 2262              		.loc 1 987 42
 2263 0054 7B69     		ldr	r3, [r7, #20]
 2264 0056 1B0C     		lsrs	r3, r3, #16
 2265 0058 DBB2     		uxtb	r3, r3
 2266 005a 03F04003 		and	r3, r3, #64
 2267 005e DAB2     		uxtb	r2, r3
 2268              		.loc 1 987 40
 2269 0060 7B68     		ldr	r3, [r7, #4]
 2270 0062 DA70     		strb	r2, [r3, #3]
 988:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_AlarmStruct->DateWeekValue     = (uint32_t)((temp_value & (RTC_ALARMA_DTT | RTC_ALARMA_DTU)
 2271              		.loc 1 988 42
 2272 0064 7B69     		ldr	r3, [r7, #20]
 2273 0066 1B0E     		lsrs	r3, r3, #24
 2274 0068 DBB2     		uxtb	r3, r3
 2275 006a 03F03F03 		and	r3, r3, #63
 2276 006e DAB2     		uxtb	r2, r3
 2277              		.loc 1 988 40
 2278 0070 7B68     		ldr	r3, [r7, #4]
 2279 0072 1A73     		strb	r2, [r3, #12]
 989:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_AlarmStruct->DateWeekMode      = (uint32_t)(temp_value & RTC_ALARMA_WKDSEL);
 2280              		.loc 1 989 42
 2281 0074 7B69     		ldr	r3, [r7, #20]
 2282 0076 03F08042 		and	r2, r3, #1073741824
 2283              		.loc 1 989 40
 2284 007a 7B68     		ldr	r3, [r7, #4]
 2285 007c 9A60     		str	r2, [r3, #8]
 990:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_AlarmStruct->AlarmMask         = (uint32_t)(temp_value & RTC_ALARMMASK_ALL);
 2286              		.loc 1 990 42
 2287 007e 7B69     		ldr	r3, [r7, #20]
 2288 0080 03F08032 		and	r2, r3, #-2139062144
 2289              		.loc 1 990 40
 2290 0084 7B68     		ldr	r3, [r7, #4]
 2291 0086 5A60     		str	r2, [r3, #4]
 991:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     
 992:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     if (RTC_Format == RTC_FORMAT_BIN)
 2292              		.loc 1 992 8
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 90


 2293 0088 FB68     		ldr	r3, [r7, #12]
 2294 008a 002B     		cmp	r3, #0
 2295 008c 23D1     		bne	.L120
 993:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
 994:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         RTC_AlarmStruct->AlarmTime.Hours   = RTC_Bcd2_To_Byte(RTC_AlarmStruct->AlarmTime.Hours);
 2296              		.loc 1 994 46
 2297 008e 7B68     		ldr	r3, [r7, #4]
 2298 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2299 0092 1846     		mov	r0, r3
 2300 0094 FFF7FEFF 		bl	RTC_Bcd2_To_Byte
 2301 0098 0346     		mov	r3, r0
 2302 009a 1A46     		mov	r2, r3
 2303              		.loc 1 994 44
 2304 009c 7B68     		ldr	r3, [r7, #4]
 2305 009e 1A70     		strb	r2, [r3]
 995:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         RTC_AlarmStruct->AlarmTime.Minutes = RTC_Bcd2_To_Byte(RTC_AlarmStruct->AlarmTime.Minutes);
 2306              		.loc 1 995 46
 2307 00a0 7B68     		ldr	r3, [r7, #4]
 2308 00a2 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2309 00a4 1846     		mov	r0, r3
 2310 00a6 FFF7FEFF 		bl	RTC_Bcd2_To_Byte
 2311 00aa 0346     		mov	r3, r0
 2312 00ac 1A46     		mov	r2, r3
 2313              		.loc 1 995 44
 2314 00ae 7B68     		ldr	r3, [r7, #4]
 2315 00b0 5A70     		strb	r2, [r3, #1]
 996:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         RTC_AlarmStruct->AlarmTime.Seconds = RTC_Bcd2_To_Byte(RTC_AlarmStruct->AlarmTime.Seconds);
 2316              		.loc 1 996 46
 2317 00b2 7B68     		ldr	r3, [r7, #4]
 2318 00b4 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 2319 00b6 1846     		mov	r0, r3
 2320 00b8 FFF7FEFF 		bl	RTC_Bcd2_To_Byte
 2321 00bc 0346     		mov	r3, r0
 2322 00be 1A46     		mov	r2, r3
 2323              		.loc 1 996 44
 2324 00c0 7B68     		ldr	r3, [r7, #4]
 2325 00c2 9A70     		strb	r2, [r3, #2]
 997:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         RTC_AlarmStruct->DateWeekValue     = RTC_Bcd2_To_Byte(RTC_AlarmStruct->DateWeekValue);
 2326              		.loc 1 997 46
 2327 00c4 7B68     		ldr	r3, [r7, #4]
 2328 00c6 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 2329 00c8 1846     		mov	r0, r3
 2330 00ca FFF7FEFF 		bl	RTC_Bcd2_To_Byte
 2331 00ce 0346     		mov	r3, r0
 2332 00d0 1A46     		mov	r2, r3
 2333              		.loc 1 997 44
 2334 00d2 7B68     		ldr	r3, [r7, #4]
 2335 00d4 1A73     		strb	r2, [r3, #12]
 2336              	.L120:
 998:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
 999:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 2337              		.loc 1 999 1
 2338 00d6 00BF     		nop
 2339 00d8 1837     		adds	r7, r7, #24
 2340              	.LCFI117:
 2341              		.cfi_def_cfa_offset 8
 2342 00da BD46     		mov	sp, r7
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 91


 2343              	.LCFI118:
 2344              		.cfi_def_cfa_register 13
 2345              		@ sp needed
 2346 00dc 80BD     		pop	{r7, pc}
 2347              	.L122:
 2348 00de 00BF     		.align	2
 2349              	.L121:
 2350 00e0 00280040 		.word	1073752064
 2351              		.cfi_endproc
 2352              	.LFE155:
 2354              		.section	.text.RTC_Alarm_Enable,"ax",%progbits
 2355              		.align	1
 2356              		.global	RTC_Alarm_Enable
 2357              		.syntax unified
 2358              		.thumb
 2359              		.thumb_func
 2361              	RTC_Alarm_Enable:
 2362              	.LFB156:
1000:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1001:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
1002:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Alarm_Enable.
1003:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Enable the specified RTC Alarm.
1004:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_Alarm : specifies the alarm to be configured.
1005:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_A_ALARM 
1006:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_B_ALARM 
1007:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  ErrorStatus : 
1008:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - SUCCESS: RTC Alarm is Enable
1009:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - ERROR:   RTC Alarm is not Enable
1010:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
1011:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** ErrorStatus RTC_Alarm_Enable(uint32_t RTC_Alarm)
1012:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 2363              		.loc 1 1012 1
 2364              		.cfi_startproc
 2365              		@ args = 0, pretend = 0, frame = 8
 2366              		@ frame_needed = 1, uses_anonymous_args = 0
 2367 0000 80B5     		push	{r7, lr}
 2368              	.LCFI119:
 2369              		.cfi_def_cfa_offset 8
 2370              		.cfi_offset 7, -8
 2371              		.cfi_offset 14, -4
 2372 0002 82B0     		sub	sp, sp, #8
 2373              	.LCFI120:
 2374              		.cfi_def_cfa_offset 16
 2375 0004 00AF     		add	r7, sp, #0
 2376              	.LCFI121:
 2377              		.cfi_def_cfa_register 7
 2378 0006 7860     		str	r0, [r7, #4]
1013:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Disable the write protection for RTC registers */
1014:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Disable();
 2379              		.loc 1 1014 5
 2380 0008 FFF7FEFF 		bl	RTC_Write_Protection_Disable
1015:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1016:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Configure the Alarm state */
1017:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->CTRL |= (uint32_t)RTC_Alarm;
 2381              		.loc 1 1017 8
 2382 000c 064B     		ldr	r3, .L125
 2383 000e 9A68     		ldr	r2, [r3, #8]
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 92


 2384 0010 0549     		ldr	r1, .L125
 2385              		.loc 1 1017 15
 2386 0012 7B68     		ldr	r3, [r7, #4]
 2387 0014 1343     		orrs	r3, r3, r2
 2388 0016 8B60     		str	r3, [r1, #8]
1018:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1019:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Enable the write protection for RTC registers */
1020:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Enable();
 2389              		.loc 1 1020 5
 2390 0018 FFF7FEFF 		bl	RTC_Write_Protection_Enable
1021:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1022:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     return SUCCESS;
 2391              		.loc 1 1022 12
 2392 001c 0123     		movs	r3, #1
1023:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 2393              		.loc 1 1023 1
 2394 001e 1846     		mov	r0, r3
 2395 0020 0837     		adds	r7, r7, #8
 2396              	.LCFI122:
 2397              		.cfi_def_cfa_offset 8
 2398 0022 BD46     		mov	sp, r7
 2399              	.LCFI123:
 2400              		.cfi_def_cfa_register 13
 2401              		@ sp needed
 2402 0024 80BD     		pop	{r7, pc}
 2403              	.L126:
 2404 0026 00BF     		.align	2
 2405              	.L125:
 2406 0028 00280040 		.word	1073752064
 2407              		.cfi_endproc
 2408              	.LFE156:
 2410              		.section	.text.RTC_Alarm_Disable,"ax",%progbits
 2411              		.align	1
 2412              		.global	RTC_Alarm_Disable
 2413              		.syntax unified
 2414              		.thumb
 2415              		.thumb_func
 2417              	RTC_Alarm_Disable:
 2418              	.LFB157:
1024:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****  
1025:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
1026:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Alarm_Disable.
1027:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Disable the specified RTC Alarm.
1028:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_Alarm : specifies the alarm to be configured.
1029:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_A_ALARM 
1030:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_B_ALARM 
1031:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  ErrorStatus : An ErrorStatus enumeration value
1032:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - SUCCESS: RTC Alarm is Disable
1033:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - ERROR:   RTC Alarm is not Disable
1034:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
1035:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** ErrorStatus RTC_Alarm_Disable(uint32_t RTC_Alarm)
1036:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 2419              		.loc 1 1036 1
 2420              		.cfi_startproc
 2421              		@ args = 0, pretend = 0, frame = 24
 2422              		@ frame_needed = 1, uses_anonymous_args = 0
 2423 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 93


 2424              	.LCFI124:
 2425              		.cfi_def_cfa_offset 8
 2426              		.cfi_offset 7, -8
 2427              		.cfi_offset 14, -4
 2428 0002 86B0     		sub	sp, sp, #24
 2429              	.LCFI125:
 2430              		.cfi_def_cfa_offset 32
 2431 0004 00AF     		add	r7, sp, #0
 2432              	.LCFI126:
 2433              		.cfi_def_cfa_register 7
 2434 0006 7860     		str	r0, [r7, #4]
1037:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     uint32_t temp_value = 0x00;
 2435              		.loc 1 1037 14
 2436 0008 0023     		movs	r3, #0
 2437 000a 7B61     		str	r3, [r7, #20]
1038:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     uint32_t temp_value1 = 0x00;
 2438              		.loc 1 1038 14
 2439 000c 0023     		movs	r3, #0
 2440 000e FB60     		str	r3, [r7, #12]
1039:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     ErrorStatus status_value = ERROR;
 2441              		.loc 1 1039 17
 2442 0010 0023     		movs	r3, #0
 2443 0012 FB74     		strb	r3, [r7, #19]
1040:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1041:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Disable the write protection for RTC registers */
1042:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Disable();
 2444              		.loc 1 1042 5
 2445 0014 FFF7FEFF 		bl	RTC_Write_Protection_Disable
1043:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1044:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Disable the Alarm in RTC_CTRL register */
1045:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->CTRL &= (uint32_t)~RTC_Alarm;
 2446              		.loc 1 1045 8
 2447 0018 144B     		ldr	r3, .L133
 2448 001a 9A68     		ldr	r2, [r3, #8]
 2449              		.loc 1 1045 28
 2450 001c 7B68     		ldr	r3, [r7, #4]
 2451 001e DB43     		mvns	r3, r3
 2452              		.loc 1 1045 8
 2453 0020 1249     		ldr	r1, .L133
 2454              		.loc 1 1045 15
 2455 0022 1340     		ands	r3, r3, r2
 2456 0024 8B60     		str	r3, [r1, #8]
 2457              	.L129:
1046:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Wait till RTC ALxWF flag is set and if Time out is reached exit */
1047:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     do
1048:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
1049:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         temp_value1 = RTC->INITSTS & (RTC_Alarm >> 8);
 2458              		.loc 1 1049 26 discriminator 2
 2459 0026 114B     		ldr	r3, .L133
 2460 0028 DA68     		ldr	r2, [r3, #12]
 2461              		.loc 1 1049 49 discriminator 2
 2462 002a 7B68     		ldr	r3, [r7, #4]
 2463 002c 1B0A     		lsrs	r3, r3, #8
 2464              		.loc 1 1049 21 discriminator 2
 2465 002e 1340     		ands	r3, r3, r2
 2466 0030 FB60     		str	r3, [r7, #12]
1050:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         temp_value++;
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 94


 2467              		.loc 1 1050 19 discriminator 2
 2468 0032 7B69     		ldr	r3, [r7, #20]
 2469 0034 0133     		adds	r3, r3, #1
 2470 0036 7B61     		str	r3, [r7, #20]
1051:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     } while ((temp_value != INITMODE_TIMEOUT) && (temp_value1 == 0x00));
 2471              		.loc 1 1051 47 discriminator 2
 2472 0038 7B69     		ldr	r3, [r7, #20]
 2473 003a B3F5005F 		cmp	r3, #8192
 2474 003e 02D0     		beq	.L128
 2475              		.loc 1 1051 47 is_stmt 0 discriminator 1
 2476 0040 FB68     		ldr	r3, [r7, #12]
 2477 0042 002B     		cmp	r3, #0
 2478 0044 EFD0     		beq	.L129
 2479              	.L128:
1052:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     if ((RTC->INITSTS & (RTC_Alarm >> 8)) == RESET)
 2480              		.loc 1 1052 13 is_stmt 1
 2481 0046 094B     		ldr	r3, .L133
 2482 0048 DA68     		ldr	r2, [r3, #12]
 2483              		.loc 1 1052 36
 2484 004a 7B68     		ldr	r3, [r7, #4]
 2485 004c 1B0A     		lsrs	r3, r3, #8
 2486              		.loc 1 1052 23
 2487 004e 1340     		ands	r3, r3, r2
 2488              		.loc 1 1052 8
 2489 0050 002B     		cmp	r3, #0
 2490 0052 02D1     		bne	.L130
1053:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
1054:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         status_value = SUCCESS;
 2491              		.loc 1 1054 22
 2492 0054 0123     		movs	r3, #1
 2493 0056 FB74     		strb	r3, [r7, #19]
 2494 0058 01E0     		b	.L131
 2495              	.L130:
1055:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
1056:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     else
1057:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
1058:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         status_value = ERROR;
 2496              		.loc 1 1058 22
 2497 005a 0023     		movs	r3, #0
 2498 005c FB74     		strb	r3, [r7, #19]
 2499              	.L131:
1059:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
1060:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Enable the write protection for RTC registers */
1061:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Enable();
 2500              		.loc 1 1061 5
 2501 005e FFF7FEFF 		bl	RTC_Write_Protection_Enable
1062:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     return status_value;
 2502              		.loc 1 1062 12
 2503 0062 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
1063:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 2504              		.loc 1 1063 1
 2505 0064 1846     		mov	r0, r3
 2506 0066 1837     		adds	r7, r7, #24
 2507              	.LCFI127:
 2508              		.cfi_def_cfa_offset 8
 2509 0068 BD46     		mov	sp, r7
 2510              	.LCFI128:
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 95


 2511              		.cfi_def_cfa_register 13
 2512              		@ sp needed
 2513 006a 80BD     		pop	{r7, pc}
 2514              	.L134:
 2515              		.align	2
 2516              	.L133:
 2517 006c 00280040 		.word	1073752064
 2518              		.cfi_endproc
 2519              	.LFE157:
 2521              		.section	.text.RTC_Alarm_SubSecond_Config,"ax",%progbits
 2522              		.align	1
 2523              		.global	RTC_Alarm_SubSecond_Config
 2524              		.syntax unified
 2525              		.thumb
 2526              		.thumb_func
 2528              	RTC_Alarm_SubSecond_Config:
 2529              	.LFB158:
1064:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1065:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1066:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****  /**
1067:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Alarm_SubSecond_Config.
1068:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Configure the RTC AlarmA/B Subseconds value and mask
1069:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_Alarm : specifies the alarm to be configured.
1070:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_A_ALARM : select Alarm A.
1071:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_B_ALARM : select Alarm B.
1072:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_AlarmSubSecondValue : specifies the Subseconds value, the value in the 0-0x00007FFF
1073:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_AlarmSubSecondMask : specifies the Subseconds Mask.
1074:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_SUBS_MASK_ALL     : Alarm SS fields are masked There is no comparison on sub 
1075:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_SUBS_MASK_SS14_1  : SS[14:1] are don't care in Alarm comparison Only SS[0] is
1076:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_SUBS_MASK_SS14_2  : SS[14:2] are don't care in Alarm comparison Only SS[1:0] 
1077:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_SUBS_MASK_SS14_3  : SS[14:3] are don't care in Alarm comparison Only SS[2:0] 
1078:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_SUBS_MASK_SS14_4  : SS[14:4] are don't care in Alarm comparison Only SS[3:0] 
1079:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_SUBS_MASK_SS14_5  : SS[14:5] are don't care in Alarm comparison Only SS[4:0] 
1080:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_SUBS_MASK_SS14_6  : SS[14:6] are don't care in Alarm comparison Only SS[5:0] 
1081:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_SUBS_MASK_SS14_7  : SS[14:7] are don't care in Alarm comparison Only SS[6:0] 
1082:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_SUBS_MASK_SS14_8  : SS[14:8] are don't care in Alarm comparison Only SS[7:0] 
1083:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_SUBS_MASK_SS14_9  : SS[14:9] are don't care in Alarm comparison Only SS[8:0] 
1084:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_SUBS_MASK_SS14_10 : SS[14:10] are don't care in Alarm comparison Only SS[9:0]
1085:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_SUBS_MASK_SS14_11 : SS[14:11] are don't care in Alarm comparison Only SS[10:0
1086:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_SUBS_MASK_SS14_12 : SS[14:12] are don't care in Alarm comparison Only SS[11:0
1087:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_SUBS_MASK_SS14_13 : SS[14:13] are don't care in Alarm comparison Only SS[12:0
1088:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_SUBS_MASK_SS14_14 : SS[14] is don't care in Alarm comparison Only SS[13:0] ar
1089:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_SUBS_MASK_NONE    : SS[14:0] are compared and must match to activate alarm.
1090:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  None
1091:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
1092:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** void RTC_Alarm_SubSecond_Config(uint32_t RTC_Alarm, uint32_t RTC_AlarmSubSecondValue, uint32_t RTC_
1093:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 2530              		.loc 1 1093 1
 2531              		.cfi_startproc
 2532              		@ args = 0, pretend = 0, frame = 24
 2533              		@ frame_needed = 1, uses_anonymous_args = 0
 2534 0000 80B5     		push	{r7, lr}
 2535              	.LCFI129:
 2536              		.cfi_def_cfa_offset 8
 2537              		.cfi_offset 7, -8
 2538              		.cfi_offset 14, -4
 2539 0002 86B0     		sub	sp, sp, #24
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 96


 2540              	.LCFI130:
 2541              		.cfi_def_cfa_offset 32
 2542 0004 00AF     		add	r7, sp, #0
 2543              	.LCFI131:
 2544              		.cfi_def_cfa_register 7
 2545 0006 F860     		str	r0, [r7, #12]
 2546 0008 B960     		str	r1, [r7, #8]
 2547 000a 7A60     		str	r2, [r7, #4]
1094:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     uint32_t temp_value = 0;
 2548              		.loc 1 1094 14
 2549 000c 0023     		movs	r3, #0
 2550 000e 7B61     		str	r3, [r7, #20]
1095:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1096:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Disable the write protection for RTC registers */
1097:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Disable();
 2551              		.loc 1 1097 5
 2552 0010 FFF7FEFF 		bl	RTC_Write_Protection_Disable
1098:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1099:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Configure the Alarm A or Alarm B SubSecond registers */
1100:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     temp_value = (uint32_t)(uint32_t)(RTC_AlarmSubSecondValue) | (uint32_t)(RTC_AlarmSubSecondMask)
 2553              		.loc 1 1100 16
 2554 0014 BA68     		ldr	r2, [r7, #8]
 2555 0016 7B68     		ldr	r3, [r7, #4]
 2556 0018 1343     		orrs	r3, r3, r2
 2557 001a 7B61     		str	r3, [r7, #20]
1101:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1102:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     if (RTC_Alarm == RTC_A_ALARM)
 2558              		.loc 1 1102 8
 2559 001c FB68     		ldr	r3, [r7, #12]
 2560 001e B3F5807F 		cmp	r3, #256
 2561 0022 03D1     		bne	.L136
1103:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
1104:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         /* Configure the AlarmA SubSecond register */
1105:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         RTC->ALRMASS = temp_value;
 2562              		.loc 1 1105 12
 2563 0024 064A     		ldr	r2, .L138
 2564              		.loc 1 1105 22
 2565 0026 7B69     		ldr	r3, [r7, #20]
 2566 0028 5364     		str	r3, [r2, #68]
 2567 002a 02E0     		b	.L137
 2568              	.L136:
1106:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
1107:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     else
1108:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
1109:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         /* Configure the Alarm B SubSecond register */
1110:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         RTC->ALRMBSS = temp_value;
 2569              		.loc 1 1110 12
 2570 002c 044A     		ldr	r2, .L138
 2571              		.loc 1 1110 22
 2572 002e 7B69     		ldr	r3, [r7, #20]
 2573 0030 9364     		str	r3, [r2, #72]
 2574              	.L137:
1111:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
1112:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1113:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Enable the write protection for RTC registers */
1114:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Enable();
 2575              		.loc 1 1114 5
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 97


 2576 0032 FFF7FEFF 		bl	RTC_Write_Protection_Enable
1115:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 2577              		.loc 1 1115 1
 2578 0036 00BF     		nop
 2579 0038 1837     		adds	r7, r7, #24
 2580              	.LCFI132:
 2581              		.cfi_def_cfa_offset 8
 2582 003a BD46     		mov	sp, r7
 2583              	.LCFI133:
 2584              		.cfi_def_cfa_register 13
 2585              		@ sp needed
 2586 003c 80BD     		pop	{r7, pc}
 2587              	.L139:
 2588 003e 00BF     		.align	2
 2589              	.L138:
 2590 0040 00280040 		.word	1073752064
 2591              		.cfi_endproc
 2592              	.LFE158:
 2594              		.section	.text.RTC_Alarm_SubSecond_Get,"ax",%progbits
 2595              		.align	1
 2596              		.global	RTC_Alarm_SubSecond_Get
 2597              		.syntax unified
 2598              		.thumb
 2599              		.thumb_func
 2601              	RTC_Alarm_SubSecond_Get:
 2602              	.LFB159:
1116:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1117:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1118:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
1119:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Alarm_SubSecond_Get.
1120:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Gets the RTC Alarm Subseconds value.
1121:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_Alarm : specifies the alarm to be read.
1122:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_A_ALARM : select Alarm A.
1123:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_B_ALARM : select Alarm B.
1124:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  RTC Alarm Subseconds value.
1125:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
1126:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** uint32_t RTC_Alarm_SubSecond_Get(uint32_t RTC_Alarm)
1127:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 2603              		.loc 1 1127 1
 2604              		.cfi_startproc
 2605              		@ args = 0, pretend = 0, frame = 16
 2606              		@ frame_needed = 1, uses_anonymous_args = 0
 2607              		@ link register save eliminated.
 2608 0000 80B4     		push	{r7}
 2609              	.LCFI134:
 2610              		.cfi_def_cfa_offset 4
 2611              		.cfi_offset 7, -4
 2612 0002 85B0     		sub	sp, sp, #20
 2613              	.LCFI135:
 2614              		.cfi_def_cfa_offset 24
 2615 0004 00AF     		add	r7, sp, #0
 2616              	.LCFI136:
 2617              		.cfi_def_cfa_register 7
 2618 0006 7860     		str	r0, [r7, #4]
1128:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     uint32_t temp_value = 0;
 2619              		.loc 1 1128 14
 2620 0008 0023     		movs	r3, #0
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 98


 2621 000a FB60     		str	r3, [r7, #12]
1129:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1130:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Get the RTC_ALARMx register */
1131:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     if (RTC_Alarm == RTC_A_ALARM)
 2622              		.loc 1 1131 8
 2623 000c 7B68     		ldr	r3, [r7, #4]
 2624 000e B3F5807F 		cmp	r3, #256
 2625 0012 05D1     		bne	.L141
1132:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
1133:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         temp_value = (uint32_t)((RTC->ALRMASS) & RTC_ALRMASS_SSV);
 2626              		.loc 1 1133 37
 2627 0014 084B     		ldr	r3, .L144
 2628 0016 5B6C     		ldr	r3, [r3, #68]
 2629              		.loc 1 1133 20
 2630 0018 C3F30E03 		ubfx	r3, r3, #0, #15
 2631 001c FB60     		str	r3, [r7, #12]
 2632 001e 04E0     		b	.L142
 2633              	.L141:
1134:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
1135:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     else
1136:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
1137:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         temp_value = (uint32_t)((RTC->ALRMBSS) & RTC_ALRMBSS_SSV);
 2634              		.loc 1 1137 37
 2635 0020 054B     		ldr	r3, .L144
 2636 0022 9B6C     		ldr	r3, [r3, #72]
 2637              		.loc 1 1137 20
 2638 0024 C3F30E03 		ubfx	r3, r3, #0, #15
 2639 0028 FB60     		str	r3, [r7, #12]
 2640              	.L142:
1138:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
1139:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1140:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     return (temp_value);
 2641              		.loc 1 1140 12
 2642 002a FB68     		ldr	r3, [r7, #12]
1141:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 2643              		.loc 1 1141 1
 2644 002c 1846     		mov	r0, r3
 2645 002e 1437     		adds	r7, r7, #20
 2646              	.LCFI137:
 2647              		.cfi_def_cfa_offset 4
 2648 0030 BD46     		mov	sp, r7
 2649              	.LCFI138:
 2650              		.cfi_def_cfa_register 13
 2651              		@ sp needed
 2652 0032 5DF8047B 		ldr	r7, [sp], #4
 2653              	.LCFI139:
 2654              		.cfi_restore 7
 2655              		.cfi_def_cfa_offset 0
 2656 0036 7047     		bx	lr
 2657              	.L145:
 2658              		.align	2
 2659              	.L144:
 2660 0038 00280040 		.word	1073752064
 2661              		.cfi_endproc
 2662              	.LFE159:
 2664              		.section	.text.RTC_WakeUp_Clock_Select,"ax",%progbits
 2665              		.align	1
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 99


 2666              		.global	RTC_WakeUp_Clock_Select
 2667              		.syntax unified
 2668              		.thumb
 2669              		.thumb_func
 2671              	RTC_WakeUp_Clock_Select:
 2672              	.LFB160:
1142:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1143:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1144:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
1145:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_WAKE_UP_CLOCK_Select.
1146:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Configures the RTC Wakeup clock source.
1147:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_WakeUpClock : RTC_WakeUpClock Wakeup Clock source.
1148:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_WKUPCLK_RTCCLK_DIV16 : RTC Wakeup Counter Clock = RTCCLK/16.
1149:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_WKUPCLK_RTCCLK_DIV8 : RTC Wakeup Counter Clock = RTCCLK/8.
1150:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_WKUPCLK_RTCCLK_DIV4 : RTC Wakeup Counter Clock = RTCCLK/4.
1151:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_WKUPCLK_RTCCLK_DIV2 : RTC Wakeup Counter Clock = RTCCLK/2.
1152:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_WKUPCLK_CK_SPRE_16BITS : RTC Wakeup Counter Clock = CK_SPRE.
1153:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_WKUPCLK_CK_SPRE_17BITS : RTC Wakeup Counter Clock = CK_SPRE,and wakeup timer 
1154:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none
1155:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
1156:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** void RTC_WakeUp_Clock_Select(RTC_WAKE_UP_CLOCK RTC_WakeUp_Clock)
1157:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 2673              		.loc 1 1157 1
 2674              		.cfi_startproc
 2675              		@ args = 0, pretend = 0, frame = 8
 2676              		@ frame_needed = 1, uses_anonymous_args = 0
 2677 0000 80B5     		push	{r7, lr}
 2678              	.LCFI140:
 2679              		.cfi_def_cfa_offset 8
 2680              		.cfi_offset 7, -8
 2681              		.cfi_offset 14, -4
 2682 0002 82B0     		sub	sp, sp, #8
 2683              	.LCFI141:
 2684              		.cfi_def_cfa_offset 16
 2685 0004 00AF     		add	r7, sp, #0
 2686              	.LCFI142:
 2687              		.cfi_def_cfa_register 7
 2688 0006 0346     		mov	r3, r0
 2689 0008 FB71     		strb	r3, [r7, #7]
1158:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Disable the write protection for RTC registers */
1159:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Disable();
 2690              		.loc 1 1159 5
 2691 000a FFF7FEFF 		bl	RTC_Write_Protection_Disable
1160:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1161:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Clear the Wakeup Timer clock source bits in CTRL register */
1162:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->CTRL &= (uint32_t)~RTC_CTRL_WKUPSEL;
 2692              		.loc 1 1162 8
 2693 000e 094B     		ldr	r3, .L147
 2694 0010 9B68     		ldr	r3, [r3, #8]
 2695 0012 084A     		ldr	r2, .L147
 2696              		.loc 1 1162 15
 2697 0014 23F00703 		bic	r3, r3, #7
 2698 0018 9360     		str	r3, [r2, #8]
1163:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1164:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Configure the clock source */
1165:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->CTRL |= (uint32_t)RTC_WakeUp_Clock;
 2699              		.loc 1 1165 8
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 100


 2700 001a 064B     		ldr	r3, .L147
 2701 001c 9A68     		ldr	r2, [r3, #8]
 2702              		.loc 1 1165 18
 2703 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2704              		.loc 1 1165 8
 2705 0020 0449     		ldr	r1, .L147
 2706              		.loc 1 1165 15
 2707 0022 1343     		orrs	r3, r3, r2
 2708 0024 8B60     		str	r3, [r1, #8]
1166:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1167:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Enable the write protection for RTC registers */
1168:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Enable();
 2709              		.loc 1 1168 5
 2710 0026 FFF7FEFF 		bl	RTC_Write_Protection_Enable
1169:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 2711              		.loc 1 1169 1
 2712 002a 00BF     		nop
 2713 002c 0837     		adds	r7, r7, #8
 2714              	.LCFI143:
 2715              		.cfi_def_cfa_offset 8
 2716 002e BD46     		mov	sp, r7
 2717              	.LCFI144:
 2718              		.cfi_def_cfa_register 13
 2719              		@ sp needed
 2720 0030 80BD     		pop	{r7, pc}
 2721              	.L148:
 2722 0032 00BF     		.align	2
 2723              	.L147:
 2724 0034 00280040 		.word	1073752064
 2725              		.cfi_endproc
 2726              	.LFE160:
 2728              		.section	.text.RTC_WakeUp_Counter_Set,"ax",%progbits
 2729              		.align	1
 2730              		.global	RTC_WakeUp_Counter_Set
 2731              		.syntax unified
 2732              		.thumb
 2733              		.thumb_func
 2735              	RTC_WakeUp_Counter_Set:
 2736              	.LFB161:
1170:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1171:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
1172:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_WakeUp_Counter_Set.
1173:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Configures the RTC Wakeup counter.
1174:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_WakeUpCounter : specifies the WakeUp counter, the value in the 1-0xFFFF range
1175:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none
1176:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
1177:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** void RTC_WakeUp_Counter_Set(uint32_t RTC_WakeUpCounter)
1178:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 2737              		.loc 1 1178 1
 2738              		.cfi_startproc
 2739              		@ args = 0, pretend = 0, frame = 16
 2740              		@ frame_needed = 1, uses_anonymous_args = 0
 2741 0000 80B5     		push	{r7, lr}
 2742              	.LCFI145:
 2743              		.cfi_def_cfa_offset 8
 2744              		.cfi_offset 7, -8
 2745              		.cfi_offset 14, -4
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 101


 2746 0002 84B0     		sub	sp, sp, #16
 2747              	.LCFI146:
 2748              		.cfi_def_cfa_offset 24
 2749 0004 00AF     		add	r7, sp, #0
 2750              	.LCFI147:
 2751              		.cfi_def_cfa_register 7
 2752 0006 7860     		str	r0, [r7, #4]
1179:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     uint16_t temp_value = 0;
 2753              		.loc 1 1179 14
 2754 0008 0023     		movs	r3, #0
 2755 000a FB81     		strh	r3, [r7, #14]	@ movhi
1180:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Disable the write protection for RTC registers */
1181:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Disable();
 2756              		.loc 1 1181 5
 2757 000c FFF7FEFF 		bl	RTC_Write_Protection_Disable
1182:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     
1183:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     temp_value = RTC->PRE & 0x7FFF; 
 2758              		.loc 1 1183 21
 2759 0010 0A4B     		ldr	r3, .L151
 2760 0012 1B69     		ldr	r3, [r3, #16]
 2761              		.loc 1 1183 27
 2762 0014 9BB2     		uxth	r3, r3
 2763              		.loc 1 1183 16
 2764 0016 C3F30E03 		ubfx	r3, r3, #0, #15
 2765 001a FB81     		strh	r3, [r7, #14]	@ movhi
1184:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* wait subs synchronize*/
1185:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     while(RTC->SUBS != temp_value);
 2766              		.loc 1 1185 10
 2767 001c 00BF     		nop
 2768              	.L150:
 2769              		.loc 1 1185 14 discriminator 1
 2770 001e 074B     		ldr	r3, .L151
 2771 0020 9A6A     		ldr	r2, [r3, #40]
 2772              		.loc 1 1185 21 discriminator 1
 2773 0022 FB89     		ldrh	r3, [r7, #14]
 2774 0024 9A42     		cmp	r2, r3
 2775 0026 FAD1     		bne	.L150
1186:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Configure the Wakeup Timer counter */
1187:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->WKUPT = (uint16_t)RTC_WakeUpCounter;
 2776              		.loc 1 1187 18
 2777 0028 7B68     		ldr	r3, [r7, #4]
 2778 002a 9AB2     		uxth	r2, r3
 2779              		.loc 1 1187 8
 2780 002c 034B     		ldr	r3, .L151
 2781              		.loc 1 1187 16
 2782 002e 5A61     		str	r2, [r3, #20]
1188:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1189:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Enable the write protection for RTC registers */
1190:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Enable();
 2783              		.loc 1 1190 5
 2784 0030 FFF7FEFF 		bl	RTC_Write_Protection_Enable
1191:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 2785              		.loc 1 1191 1
 2786 0034 00BF     		nop
 2787 0036 1037     		adds	r7, r7, #16
 2788              	.LCFI148:
 2789              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 102


 2790 0038 BD46     		mov	sp, r7
 2791              	.LCFI149:
 2792              		.cfi_def_cfa_register 13
 2793              		@ sp needed
 2794 003a 80BD     		pop	{r7, pc}
 2795              	.L152:
 2796              		.align	2
 2797              	.L151:
 2798 003c 00280040 		.word	1073752064
 2799              		.cfi_endproc
 2800              	.LFE161:
 2802              		.section	.text.RTC_WakeUp_Counter_Get,"ax",%progbits
 2803              		.align	1
 2804              		.global	RTC_WakeUp_Counter_Get
 2805              		.syntax unified
 2806              		.thumb
 2807              		.thumb_func
 2809              	RTC_WakeUp_Counter_Get:
 2810              	.LFB162:
1192:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1193:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
1194:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_WakeUp_Counter_Get.
1195:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Returns the RTC WakeUp timer counter value.
1196:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  The RTC WakeUp Counter value.
1197:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
1198:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** uint32_t RTC_WakeUp_Counter_Get(void)
1199:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 2811              		.loc 1 1199 1
 2812              		.cfi_startproc
 2813              		@ args = 0, pretend = 0, frame = 0
 2814              		@ frame_needed = 1, uses_anonymous_args = 0
 2815              		@ link register save eliminated.
 2816 0000 80B4     		push	{r7}
 2817              	.LCFI150:
 2818              		.cfi_def_cfa_offset 4
 2819              		.cfi_offset 7, -4
 2820 0002 00AF     		add	r7, sp, #0
 2821              	.LCFI151:
 2822              		.cfi_def_cfa_register 7
1200:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Get the counter value */
1201:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     return ((uint32_t)(RTC->WKUPT & RTC_WKUPT_WKUPT));
 2823              		.loc 1 1201 27
 2824 0004 034B     		ldr	r3, .L155
 2825 0006 5B69     		ldr	r3, [r3, #20]
 2826              		.loc 1 1201 13
 2827 0008 9BB2     		uxth	r3, r3
1202:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 2828              		.loc 1 1202 1
 2829 000a 1846     		mov	r0, r3
 2830 000c BD46     		mov	sp, r7
 2831              	.LCFI152:
 2832              		.cfi_def_cfa_register 13
 2833              		@ sp needed
 2834 000e 5DF8047B 		ldr	r7, [sp], #4
 2835              	.LCFI153:
 2836              		.cfi_restore 7
 2837              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 103


 2838 0012 7047     		bx	lr
 2839              	.L156:
 2840              		.align	2
 2841              	.L155:
 2842 0014 00280040 		.word	1073752064
 2843              		.cfi_endproc
 2844              	.LFE162:
 2846              		.section	.text.RTC_WakeUp_Enable,"ax",%progbits
 2847              		.align	1
 2848              		.global	RTC_WakeUp_Enable
 2849              		.syntax unified
 2850              		.thumb
 2851              		.thumb_func
 2853              	RTC_WakeUp_Enable:
 2854              	.LFB163:
1203:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1204:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
1205:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_WakeUp_Enable
1206:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Enable the RTC WakeUp timer.
1207:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   none
1208:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  SUCCESS
1209:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
1210:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** ErrorStatus RTC_WakeUp_Enable(void)
1211:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 2855              		.loc 1 1211 1
 2856              		.cfi_startproc
 2857              		@ args = 0, pretend = 0, frame = 0
 2858              		@ frame_needed = 1, uses_anonymous_args = 0
 2859 0000 80B5     		push	{r7, lr}
 2860              	.LCFI154:
 2861              		.cfi_def_cfa_offset 8
 2862              		.cfi_offset 7, -8
 2863              		.cfi_offset 14, -4
 2864 0002 00AF     		add	r7, sp, #0
 2865              	.LCFI155:
 2866              		.cfi_def_cfa_register 7
1212:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Disable the write protection for RTC registers */
1213:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Disable();
 2867              		.loc 1 1213 5
 2868 0004 FFF7FEFF 		bl	RTC_Write_Protection_Disable
1214:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1215:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Enable the Wakeup Timer */
1216:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->CTRL |= (uint32_t)RTC_CTRL_WTEN;
 2869              		.loc 1 1216 8
 2870 0008 054B     		ldr	r3, .L159
 2871 000a 9B68     		ldr	r3, [r3, #8]
 2872 000c 044A     		ldr	r2, .L159
 2873              		.loc 1 1216 15
 2874 000e 43F48063 		orr	r3, r3, #1024
 2875 0012 9360     		str	r3, [r2, #8]
1217:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     
1218:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Enable the write protection for RTC registers */
1219:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Enable();
 2876              		.loc 1 1219 5
 2877 0014 FFF7FEFF 		bl	RTC_Write_Protection_Enable
1220:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1221:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     return SUCCESS;
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 104


 2878              		.loc 1 1221 12
 2879 0018 0123     		movs	r3, #1
1222:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 2880              		.loc 1 1222 1
 2881 001a 1846     		mov	r0, r3
 2882 001c 80BD     		pop	{r7, pc}
 2883              	.L160:
 2884 001e 00BF     		.align	2
 2885              	.L159:
 2886 0020 00280040 		.word	1073752064
 2887              		.cfi_endproc
 2888              	.LFE163:
 2890              		.section	.text.RTC_WakeUp_Disable,"ax",%progbits
 2891              		.align	1
 2892              		.global	RTC_WakeUp_Disable
 2893              		.syntax unified
 2894              		.thumb
 2895              		.thumb_func
 2897              	RTC_WakeUp_Disable:
 2898              	.LFB164:
1223:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1224:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
1225:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_WakeUp_Disable
1226:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Disable the RTC WakeUp timer.
1227:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  ErrorStatus
1228:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - SUCCESS
1229:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - ERROR
1230:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
1231:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** ErrorStatus RTC_WakeUp_Disable(void)
1232:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 2899              		.loc 1 1232 1
 2900              		.cfi_startproc
 2901              		@ args = 0, pretend = 0, frame = 16
 2902              		@ frame_needed = 1, uses_anonymous_args = 0
 2903 0000 80B5     		push	{r7, lr}
 2904              	.LCFI156:
 2905              		.cfi_def_cfa_offset 8
 2906              		.cfi_offset 7, -8
 2907              		.cfi_offset 14, -4
 2908 0002 84B0     		sub	sp, sp, #16
 2909              	.LCFI157:
 2910              		.cfi_def_cfa_offset 24
 2911 0004 00AF     		add	r7, sp, #0
 2912              	.LCFI158:
 2913              		.cfi_def_cfa_register 7
1233:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     uint32_t temp_value = 0x00;
 2914              		.loc 1 1233 14
 2915 0006 0023     		movs	r3, #0
 2916 0008 FB60     		str	r3, [r7, #12]
1234:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     uint32_t temp_value1 = 0x00;
 2917              		.loc 1 1234 14
 2918 000a 0023     		movs	r3, #0
 2919 000c 7B60     		str	r3, [r7, #4]
1235:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     ErrorStatus status_value = ERROR;
 2920              		.loc 1 1235 17
 2921 000e 0023     		movs	r3, #0
 2922 0010 FB72     		strb	r3, [r7, #11]
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 105


1236:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1237:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Disable the write protection for RTC registers */
1238:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Disable();
 2923              		.loc 1 1238 5
 2924 0012 FFF7FEFF 		bl	RTC_Write_Protection_Disable
1239:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1240:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Disable the Wakeup Timer */
1241:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->CTRL &= (uint32_t)~RTC_CTRL_WTEN;
 2925              		.loc 1 1241 8
 2926 0016 134B     		ldr	r3, .L167
 2927 0018 9B68     		ldr	r3, [r3, #8]
 2928 001a 124A     		ldr	r2, .L167
 2929              		.loc 1 1241 15
 2930 001c 23F48063 		bic	r3, r3, #1024
 2931 0020 9360     		str	r3, [r2, #8]
 2932              	.L163:
1242:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Wait till RTC WTWF flag is set and if Time out is reached exit */
1243:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     do
1244:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
1245:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         temp_value1 = RTC->INITSTS & RTC_FLAG_WTWF;
 2933              		.loc 1 1245 26 discriminator 2
 2934 0022 104B     		ldr	r3, .L167
 2935 0024 DB68     		ldr	r3, [r3, #12]
 2936              		.loc 1 1245 21 discriminator 2
 2937 0026 03F00403 		and	r3, r3, #4
 2938 002a 7B60     		str	r3, [r7, #4]
1246:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         temp_value++;
 2939              		.loc 1 1246 19 discriminator 2
 2940 002c FB68     		ldr	r3, [r7, #12]
 2941 002e 0133     		adds	r3, r3, #1
 2942 0030 FB60     		str	r3, [r7, #12]
1247:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     } while ((temp_value != INITMODE_TIMEOUT) && (temp_value1 == 0x00));
 2943              		.loc 1 1247 47 discriminator 2
 2944 0032 FB68     		ldr	r3, [r7, #12]
 2945 0034 B3F5005F 		cmp	r3, #8192
 2946 0038 02D0     		beq	.L162
 2947              		.loc 1 1247 47 is_stmt 0 discriminator 1
 2948 003a 7B68     		ldr	r3, [r7, #4]
 2949 003c 002B     		cmp	r3, #0
 2950 003e F0D0     		beq	.L163
 2951              	.L162:
1248:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1249:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     if ((RTC->INITSTS & RTC_FLAG_WTWF) == RESET)
 2952              		.loc 1 1249 13 is_stmt 1
 2953 0040 084B     		ldr	r3, .L167
 2954 0042 DB68     		ldr	r3, [r3, #12]
 2955              		.loc 1 1249 23
 2956 0044 03F00403 		and	r3, r3, #4
 2957              		.loc 1 1249 8
 2958 0048 002B     		cmp	r3, #0
 2959 004a 02D1     		bne	.L164
1250:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
1251:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         status_value = SUCCESS;
 2960              		.loc 1 1251 22
 2961 004c 0123     		movs	r3, #1
 2962 004e FB72     		strb	r3, [r7, #11]
 2963 0050 01E0     		b	.L165
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 106


 2964              	.L164:
1252:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
1253:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     else
1254:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
1255:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         status_value = ERROR;
 2965              		.loc 1 1255 22
 2966 0052 0023     		movs	r3, #0
 2967 0054 FB72     		strb	r3, [r7, #11]
 2968              	.L165:
1256:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
1257:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     
1258:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Enable the write protection for RTC registers */
1259:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Enable();
 2969              		.loc 1 1259 5
 2970 0056 FFF7FEFF 		bl	RTC_Write_Protection_Enable
1260:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1261:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     return status_value;
 2971              		.loc 1 1261 12
 2972 005a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
1262:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 2973              		.loc 1 1262 1
 2974 005c 1846     		mov	r0, r3
 2975 005e 1037     		adds	r7, r7, #16
 2976              	.LCFI159:
 2977              		.cfi_def_cfa_offset 8
 2978 0060 BD46     		mov	sp, r7
 2979              	.LCFI160:
 2980              		.cfi_def_cfa_register 13
 2981              		@ sp needed
 2982 0062 80BD     		pop	{r7, pc}
 2983              	.L168:
 2984              		.align	2
 2985              	.L167:
 2986 0064 00280040 		.word	1073752064
 2987              		.cfi_endproc
 2988              	.LFE164:
 2990              		.section	.text.RTC_Day_Light_Saving_Config,"ax",%progbits
 2991              		.align	1
 2992              		.global	RTC_Day_Light_Saving_Config
 2993              		.syntax unified
 2994              		.thumb
 2995              		.thumb_func
 2997              	RTC_Day_Light_Saving_Config:
 2998              	.LFB165:
1263:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1264:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
1265:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Day_Light_Saving_Config
1266:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Adds or substract one hour from the current time.
1267:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_DayLightSaving : the value of hour adjustment.
1268:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_DAYLIGHT_SAVING_SUB1H : Substract one hour (winter time).
1269:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_DAYLIGHT_SAVING_ADD1H : Add one hour (summer time).
1270:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_StoreOperation : Specifies the value to be written in the BCK bit
1271:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\        in CTRL register to store the operation.
1272:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_STORE_OPERATION_RESET :  BCK Bit Reset.
1273:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_STORE_OPERATION_SET : BCK Bit Set.
1274:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none
1275:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 107


1276:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** void RTC_Day_Light_Saving_Config(uint32_t RTC_DayLightSaving, uint32_t RTC_StoreOperation)
1277:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 2999              		.loc 1 1277 1
 3000              		.cfi_startproc
 3001              		@ args = 0, pretend = 0, frame = 8
 3002              		@ frame_needed = 1, uses_anonymous_args = 0
 3003 0000 80B5     		push	{r7, lr}
 3004              	.LCFI161:
 3005              		.cfi_def_cfa_offset 8
 3006              		.cfi_offset 7, -8
 3007              		.cfi_offset 14, -4
 3008 0002 82B0     		sub	sp, sp, #8
 3009              	.LCFI162:
 3010              		.cfi_def_cfa_offset 16
 3011 0004 00AF     		add	r7, sp, #0
 3012              	.LCFI163:
 3013              		.cfi_def_cfa_register 7
 3014 0006 7860     		str	r0, [r7, #4]
 3015 0008 3960     		str	r1, [r7]
1278:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Disable the write protection for RTC registers */
1279:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Disable();
 3016              		.loc 1 1279 5
 3017 000a FFF7FEFF 		bl	RTC_Write_Protection_Disable
1280:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1281:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Clear the bits to be configured */
1282:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->CTRL &= (uint32_t) ~(RTC_STORE_OPERATION_SET);
 3018              		.loc 1 1282 8
 3019 000e 0C4B     		ldr	r3, .L170
 3020 0010 9B68     		ldr	r3, [r3, #8]
 3021 0012 0B4A     		ldr	r2, .L170
 3022              		.loc 1 1282 15
 3023 0014 23F48023 		bic	r3, r3, #262144
 3024 0018 9360     		str	r3, [r2, #8]
1283:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Clear the SU1H and AD1H bits to be configured */
1284:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->CTRL &= (uint32_t) ~(RTC_DAYLIGHT_SAVING_SUB1H & RTC_DAYLIGHT_SAVING_ADD1H);
 3025              		.loc 1 1284 8
 3026 001a 094B     		ldr	r3, .L170
 3027 001c 084A     		ldr	r2, .L170
 3028 001e 9B68     		ldr	r3, [r3, #8]
 3029              		.loc 1 1284 15
 3030 0020 9360     		str	r3, [r2, #8]
1285:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Configure the RTC_CTRL register */
1286:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->CTRL |= (uint32_t)(RTC_DayLightSaving | RTC_StoreOperation);
 3031              		.loc 1 1286 8
 3032 0022 074B     		ldr	r3, .L170
 3033 0024 9A68     		ldr	r2, [r3, #8]
 3034              		.loc 1 1286 48
 3035 0026 7968     		ldr	r1, [r7, #4]
 3036 0028 3B68     		ldr	r3, [r7]
 3037 002a 0B43     		orrs	r3, r3, r1
 3038              		.loc 1 1286 8
 3039 002c 0449     		ldr	r1, .L170
 3040              		.loc 1 1286 15
 3041 002e 1343     		orrs	r3, r3, r2
 3042 0030 8B60     		str	r3, [r1, #8]
1287:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1288:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Enable the write protection for RTC registers */
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 108


1289:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Enable();
 3043              		.loc 1 1289 5
 3044 0032 FFF7FEFF 		bl	RTC_Write_Protection_Enable
1290:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 3045              		.loc 1 1290 1
 3046 0036 00BF     		nop
 3047 0038 0837     		adds	r7, r7, #8
 3048              	.LCFI164:
 3049              		.cfi_def_cfa_offset 8
 3050 003a BD46     		mov	sp, r7
 3051              	.LCFI165:
 3052              		.cfi_def_cfa_register 13
 3053              		@ sp needed
 3054 003c 80BD     		pop	{r7, pc}
 3055              	.L171:
 3056 003e 00BF     		.align	2
 3057              	.L170:
 3058 0040 00280040 		.word	1073752064
 3059              		.cfi_endproc
 3060              	.LFE165:
 3062              		.section	.text.RTC_Store_Operation_Get,"ax",%progbits
 3063              		.align	1
 3064              		.global	RTC_Store_Operation_Get
 3065              		.syntax unified
 3066              		.thumb
 3067              		.thumb_func
 3069              	RTC_Store_Operation_Get:
 3070              	.LFB166:
1291:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1292:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
1293:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Store_Operation_Get
1294:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Returns the RTC Day Light Saving stored operation.
1295:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  RTC Day Light Saving stored operation.
1296:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_STORE_OPERATION_RESET
1297:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_STORE_OPERATION_SET
1298:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
1299:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** uint32_t RTC_Store_Operation_Get(void)
1300:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 3071              		.loc 1 1300 1
 3072              		.cfi_startproc
 3073              		@ args = 0, pretend = 0, frame = 0
 3074              		@ frame_needed = 1, uses_anonymous_args = 0
 3075              		@ link register save eliminated.
 3076 0000 80B4     		push	{r7}
 3077              	.LCFI166:
 3078              		.cfi_def_cfa_offset 4
 3079              		.cfi_offset 7, -4
 3080 0002 00AF     		add	r7, sp, #0
 3081              	.LCFI167:
 3082              		.cfi_def_cfa_register 7
1301:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     return (RTC->CTRL & RTC_STORE_OPERATION_SET);
 3083              		.loc 1 1301 16
 3084 0004 044B     		ldr	r3, .L174
 3085 0006 9B68     		ldr	r3, [r3, #8]
 3086              		.loc 1 1301 23
 3087 0008 03F48023 		and	r3, r3, #262144
1302:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 109


 3088              		.loc 1 1302 1
 3089 000c 1846     		mov	r0, r3
 3090 000e BD46     		mov	sp, r7
 3091              	.LCFI168:
 3092              		.cfi_def_cfa_register 13
 3093              		@ sp needed
 3094 0010 5DF8047B 		ldr	r7, [sp], #4
 3095              	.LCFI169:
 3096              		.cfi_restore 7
 3097              		.cfi_def_cfa_offset 0
 3098 0014 7047     		bx	lr
 3099              	.L175:
 3100 0016 00BF     		.align	2
 3101              	.L174:
 3102 0018 00280040 		.word	1073752064
 3103              		.cfi_endproc
 3104              	.LFE166:
 3106              		.section	.text.RTC_Output_Config,"ax",%progbits
 3107              		.align	1
 3108              		.global	RTC_Output_Config
 3109              		.syntax unified
 3110              		.thumb
 3111              		.thumb_func
 3113              	RTC_Output_Config:
 3114              	.LFB167:
1303:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1304:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
1305:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Output_Config
1306:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Configures the RTC output source (AFO_ALARM).
1307:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_Output : RTC_Output Specifies which signal will be routed to the RTC output.
1308:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_OUTPUT_DIS : No output selected
1309:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_OUTPUT_ALA : signal of AlarmA mapped to output.
1310:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_OUTPUT_ALB : signal of AlarmB mapped to output.
1311:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_OUTPUT_WKUP: signal of WakeUp mapped to output.
1312:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_OutputPolarity : Specifies the polarity of the output signal.
1313:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_OUTPOL_HIGH: The output pin is high when the ALRAF/ALRBF/WUTF is high (depend
1314:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_OUTPOL_LOW : The output pin is low when the ALRAF/ALRBF/WUTF is high (dependi
1315:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none
1316:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
1317:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** void RTC_Output_Config(uint32_t RTC_Output, uint32_t RTC_OutputPolarity)
1318:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 3115              		.loc 1 1318 1
 3116              		.cfi_startproc
 3117              		@ args = 0, pretend = 0, frame = 16
 3118              		@ frame_needed = 1, uses_anonymous_args = 0
 3119 0000 80B5     		push	{r7, lr}
 3120              	.LCFI170:
 3121              		.cfi_def_cfa_offset 8
 3122              		.cfi_offset 7, -8
 3123              		.cfi_offset 14, -4
 3124 0002 84B0     		sub	sp, sp, #16
 3125              	.LCFI171:
 3126              		.cfi_def_cfa_offset 24
 3127 0004 00AF     		add	r7, sp, #0
 3128              	.LCFI172:
 3129              		.cfi_def_cfa_register 7
 3130 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 110


 3131 0008 3960     		str	r1, [r7]
1319:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     __IO uint32_t temp = 0;
 3132              		.loc 1 1319 19
 3133 000a 0023     		movs	r3, #0
 3134 000c FB60     		str	r3, [r7, #12]
1320:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1321:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Disable the write protection for RTC registers */
1322:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Disable();
 3135              		.loc 1 1322 5
 3136 000e FFF7FEFF 		bl	RTC_Write_Protection_Disable
1323:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1324:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Clear the bits to be configured */
1325:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->CTRL &= (uint32_t) ~(RTC_CTRL_OUTSEL | RTC_CTRL_OPOL);
 3137              		.loc 1 1325 8
 3138 0012 0A4B     		ldr	r3, .L177
 3139 0014 9B68     		ldr	r3, [r3, #8]
 3140 0016 094A     		ldr	r2, .L177
 3141              		.loc 1 1325 15
 3142 0018 23F4E003 		bic	r3, r3, #7340032
 3143 001c 9360     		str	r3, [r2, #8]
1326:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1327:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Configure the output selection and polarity */
1328:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->CTRL |= (uint32_t)(RTC_Output | RTC_OutputPolarity);
 3144              		.loc 1 1328 8
 3145 001e 074B     		ldr	r3, .L177
 3146 0020 9A68     		ldr	r2, [r3, #8]
 3147              		.loc 1 1328 40
 3148 0022 7968     		ldr	r1, [r7, #4]
 3149 0024 3B68     		ldr	r3, [r7]
 3150 0026 0B43     		orrs	r3, r3, r1
 3151              		.loc 1 1328 8
 3152 0028 0449     		ldr	r1, .L177
 3153              		.loc 1 1328 15
 3154 002a 1343     		orrs	r3, r3, r2
 3155 002c 8B60     		str	r3, [r1, #8]
1329:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1330:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Enable the write protection for RTC registers */
1331:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Enable();
 3156              		.loc 1 1331 5
 3157 002e FFF7FEFF 		bl	RTC_Write_Protection_Enable
1332:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 3158              		.loc 1 1332 1
 3159 0032 00BF     		nop
 3160 0034 1037     		adds	r7, r7, #16
 3161              	.LCFI173:
 3162              		.cfi_def_cfa_offset 8
 3163 0036 BD46     		mov	sp, r7
 3164              	.LCFI174:
 3165              		.cfi_def_cfa_register 13
 3166              		@ sp needed
 3167 0038 80BD     		pop	{r7, pc}
 3168              	.L178:
 3169 003a 00BF     		.align	2
 3170              	.L177:
 3171 003c 00280040 		.word	1073752064
 3172              		.cfi_endproc
 3173              	.LFE167:
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 111


 3175              		.section	.text.RTC_Calibration_Output_Enable,"ax",%progbits
 3176              		.align	1
 3177              		.global	RTC_Calibration_Output_Enable
 3178              		.syntax unified
 3179              		.thumb
 3180              		.thumb_func
 3182              	RTC_Calibration_Output_Enable:
 3183              	.LFB168:
1333:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1334:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
1335:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Calibration_Output_Enable
1336:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Enable the RTC clock to be output through the relative pin.
1337:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none
1338:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
1339:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** void RTC_Calibration_Output_Enable(void)
1340:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 3184              		.loc 1 1340 1
 3185              		.cfi_startproc
 3186              		@ args = 0, pretend = 0, frame = 0
 3187              		@ frame_needed = 1, uses_anonymous_args = 0
 3188 0000 80B5     		push	{r7, lr}
 3189              	.LCFI175:
 3190              		.cfi_def_cfa_offset 8
 3191              		.cfi_offset 7, -8
 3192              		.cfi_offset 14, -4
 3193 0002 00AF     		add	r7, sp, #0
 3194              	.LCFI176:
 3195              		.cfi_def_cfa_register 7
1341:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Disable the write protection for RTC registers */
1342:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Disable();
 3196              		.loc 1 1342 5
 3197 0004 FFF7FEFF 		bl	RTC_Write_Protection_Disable
1343:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1344:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Enable the RTC clock output */
1345:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->CTRL |= (uint32_t)RTC_CTRL_COEN;
 3198              		.loc 1 1345 8
 3199 0008 044B     		ldr	r3, .L180
 3200 000a 9B68     		ldr	r3, [r3, #8]
 3201 000c 034A     		ldr	r2, .L180
 3202              		.loc 1 1345 15
 3203 000e 43F40003 		orr	r3, r3, #8388608
 3204 0012 9360     		str	r3, [r2, #8]
1346:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     
1347:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Enable the write protection for RTC registers */
1348:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Enable();
 3205              		.loc 1 1348 5
 3206 0014 FFF7FEFF 		bl	RTC_Write_Protection_Enable
1349:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 3207              		.loc 1 1349 1
 3208 0018 00BF     		nop
 3209 001a 80BD     		pop	{r7, pc}
 3210              	.L181:
 3211              		.align	2
 3212              	.L180:
 3213 001c 00280040 		.word	1073752064
 3214              		.cfi_endproc
 3215              	.LFE168:
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 112


 3217              		.section	.text.RTC_Calibration_Output_Disable,"ax",%progbits
 3218              		.align	1
 3219              		.global	RTC_Calibration_Output_Disable
 3220              		.syntax unified
 3221              		.thumb
 3222              		.thumb_func
 3224              	RTC_Calibration_Output_Disable:
 3225              	.LFB169:
1350:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1351:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
1352:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Calibration_Output_Disable
1353:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Disable the RTC clock to be output through the relative pin.
1354:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none
1355:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
1356:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** void RTC_Calibration_Output_Disable(void)
1357:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 3226              		.loc 1 1357 1
 3227              		.cfi_startproc
 3228              		@ args = 0, pretend = 0, frame = 0
 3229              		@ frame_needed = 1, uses_anonymous_args = 0
 3230 0000 80B5     		push	{r7, lr}
 3231              	.LCFI177:
 3232              		.cfi_def_cfa_offset 8
 3233              		.cfi_offset 7, -8
 3234              		.cfi_offset 14, -4
 3235 0002 00AF     		add	r7, sp, #0
 3236              	.LCFI178:
 3237              		.cfi_def_cfa_register 7
1358:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Disable the write protection for RTC registers */
1359:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Disable();
 3238              		.loc 1 1359 5
 3239 0004 FFF7FEFF 		bl	RTC_Write_Protection_Disable
1360:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1361:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Disable the RTC clock output */
1362:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->CTRL &= (uint32_t)~RTC_CTRL_COEN;
 3240              		.loc 1 1362 8
 3241 0008 044B     		ldr	r3, .L183
 3242 000a 9B68     		ldr	r3, [r3, #8]
 3243 000c 034A     		ldr	r2, .L183
 3244              		.loc 1 1362 15
 3245 000e 23F40003 		bic	r3, r3, #8388608
 3246 0012 9360     		str	r3, [r2, #8]
1363:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     
1364:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Enable the write protection for RTC registers */
1365:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Enable();
 3247              		.loc 1 1365 5
 3248 0014 FFF7FEFF 		bl	RTC_Write_Protection_Enable
1366:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 3249              		.loc 1 1366 1
 3250 0018 00BF     		nop
 3251 001a 80BD     		pop	{r7, pc}
 3252              	.L184:
 3253              		.align	2
 3254              	.L183:
 3255 001c 00280040 		.word	1073752064
 3256              		.cfi_endproc
 3257              	.LFE169:
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 113


 3259              		.section	.text.RTC_Calibration_Output_Config,"ax",%progbits
 3260              		.align	1
 3261              		.global	RTC_Calibration_Output_Config
 3262              		.syntax unified
 3263              		.thumb
 3264              		.thumb_func
 3266              	RTC_Calibration_Output_Config:
 3267              	.LFB170:
1367:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1368:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
1369:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Calibration_Output_Config
1370:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Configure the Calibration Pinout (RTC_CALIB) Selection (1Hz or 256Hz).
1371:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_CalibOutput Select the Calibration output Selection .
1372:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_CALIB_OUTPUT_256HZ : A signal has a regular waveform at 256Hz.
1373:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_CALIB_OUTPUT_1HZ   : A signal has a regular waveform at 1Hz.
1374:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none
1375:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
1376:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** void RTC_Calibration_Output_Config(uint32_t RTC_CalibOutput)
1377:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 3268              		.loc 1 1377 1
 3269              		.cfi_startproc
 3270              		@ args = 0, pretend = 0, frame = 8
 3271              		@ frame_needed = 1, uses_anonymous_args = 0
 3272 0000 80B5     		push	{r7, lr}
 3273              	.LCFI179:
 3274              		.cfi_def_cfa_offset 8
 3275              		.cfi_offset 7, -8
 3276              		.cfi_offset 14, -4
 3277 0002 82B0     		sub	sp, sp, #8
 3278              	.LCFI180:
 3279              		.cfi_def_cfa_offset 16
 3280 0004 00AF     		add	r7, sp, #0
 3281              	.LCFI181:
 3282              		.cfi_def_cfa_register 7
 3283 0006 7860     		str	r0, [r7, #4]
1378:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Disable the write protection for RTC registers */
1379:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Disable();
 3284              		.loc 1 1379 5
 3285 0008 FFF7FEFF 		bl	RTC_Write_Protection_Disable
1380:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1381:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /*clear flags before config*/
1382:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->CTRL &= (uint32_t) ~(RTC_CTRL_CALOSEL);
 3286              		.loc 1 1382 8
 3287 000c 084B     		ldr	r3, .L186
 3288 000e 9B68     		ldr	r3, [r3, #8]
 3289 0010 074A     		ldr	r2, .L186
 3290              		.loc 1 1382 15
 3291 0012 23F40023 		bic	r3, r3, #524288
 3292 0016 9360     		str	r3, [r2, #8]
1383:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1384:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Configure the RTC_CTRL register */
1385:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->CTRL |= (uint32_t)RTC_CalibOutput;
 3293              		.loc 1 1385 8
 3294 0018 054B     		ldr	r3, .L186
 3295 001a 9A68     		ldr	r2, [r3, #8]
 3296 001c 0449     		ldr	r1, .L186
 3297              		.loc 1 1385 15
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 114


 3298 001e 7B68     		ldr	r3, [r7, #4]
 3299 0020 1343     		orrs	r3, r3, r2
 3300 0022 8B60     		str	r3, [r1, #8]
1386:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1387:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Enable the write protection for RTC registers */
1388:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Enable();
 3301              		.loc 1 1388 5
 3302 0024 FFF7FEFF 		bl	RTC_Write_Protection_Enable
1389:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 3303              		.loc 1 1389 1
 3304 0028 00BF     		nop
 3305 002a 0837     		adds	r7, r7, #8
 3306              	.LCFI182:
 3307              		.cfi_def_cfa_offset 8
 3308 002c BD46     		mov	sp, r7
 3309              	.LCFI183:
 3310              		.cfi_def_cfa_register 13
 3311              		@ sp needed
 3312 002e 80BD     		pop	{r7, pc}
 3313              	.L187:
 3314              		.align	2
 3315              	.L186:
 3316 0030 00280040 		.word	1073752064
 3317              		.cfi_endproc
 3318              	.LFE170:
 3320              		.section	.text.RTC_Smooth_Calibration_Config,"ax",%progbits
 3321              		.align	1
 3322              		.global	RTC_Smooth_Calibration_Config
 3323              		.syntax unified
 3324              		.thumb
 3325              		.thumb_func
 3327              	RTC_Smooth_Calibration_Config:
 3328              	.LFB171:
1390:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1391:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
1392:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Smooth_Calibration_Config
1393:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Configures the Smooth Calibration Settings.
1394:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_SmoothCalibPeriod : RTC_SmoothCalibPeriod Select the Smooth Calibration Period.
1395:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - SMOOTH_CALIB_32SEC : The smooth calibration periode is 32s.
1396:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - SMOOTH_CALIB_16SEC : The smooth calibration periode is 16s.
1397:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - SMOOTH_CALIB_8SEC  : The smooth calibartion periode is 8s.
1398:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_SmoothCalibPlusPulses : Set or reset the CALP bit.
1399:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_SMOOTH_CALIB_PLUS_PULSES_SET : Add one RTCCLK puls every 2**11 pulses.
1400:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_SMOOTH_CALIB_PLUS_PULSES_RESET : No RTCCLK pulses are added.
1401:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_SmouthCalibMinusPulsesValue : Set the value of CALM[8:0] bits, the value in the 0-0
1402:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  ErrorStatus
1403:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - SUCCESS : RTC Calib registers are configured
1404:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - ERROR   : RTC Calib registers are not configured
1405:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
1406:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** ErrorStatus RTC_Smooth_Calibration_Config(uint32_t RTC_SmoothCalibPeriod,
1407:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****                                   uint32_t RTC_SmoothCalibPlusPulses,
1408:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****                                   uint32_t RTC_SmouthCalibMinusPulsesValue)
1409:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 3329              		.loc 1 1409 1
 3330              		.cfi_startproc
 3331              		@ args = 0, pretend = 0, frame = 24
 3332              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 115


 3333 0000 80B5     		push	{r7, lr}
 3334              	.LCFI184:
 3335              		.cfi_def_cfa_offset 8
 3336              		.cfi_offset 7, -8
 3337              		.cfi_offset 14, -4
 3338 0002 86B0     		sub	sp, sp, #24
 3339              	.LCFI185:
 3340              		.cfi_def_cfa_offset 32
 3341 0004 00AF     		add	r7, sp, #0
 3342              	.LCFI186:
 3343              		.cfi_def_cfa_register 7
 3344 0006 F860     		str	r0, [r7, #12]
 3345 0008 B960     		str	r1, [r7, #8]
 3346 000a 7A60     		str	r2, [r7, #4]
1410:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     ErrorStatus status    = ERROR;
 3347              		.loc 1 1410 17
 3348 000c 0023     		movs	r3, #0
 3349 000e FB75     		strb	r3, [r7, #23]
1411:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     uint32_t recalpfcount = 0;
 3350              		.loc 1 1411 14
 3351 0010 0023     		movs	r3, #0
 3352 0012 3B61     		str	r3, [r7, #16]
1412:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1413:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Disable the write protection for RTC registers */
1414:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Disable();
 3353              		.loc 1 1414 5
 3354 0014 FFF7FEFF 		bl	RTC_Write_Protection_Disable
1415:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1416:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* check if a calibration is pending*/
1417:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     if ((RTC->INITSTS & RTC_FLAG_RECPF) != RESET)
 3355              		.loc 1 1417 13
 3356 0018 164B     		ldr	r3, .L195
 3357 001a DB68     		ldr	r3, [r3, #12]
 3358              		.loc 1 1417 23
 3359 001c 03F48033 		and	r3, r3, #65536
 3360              		.loc 1 1417 8
 3361 0020 002B     		cmp	r3, #0
 3362 0022 0DD0     		beq	.L189
1418:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
1419:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         /* wait until the Calibration is completed*/
1420:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         while (((RTC->INITSTS & RTC_FLAG_RECPF) != RESET) && (recalpfcount != RECALPF_TIMEOUT))
 3363              		.loc 1 1420 15
 3364 0024 02E0     		b	.L190
 3365              	.L191:
1421:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         {
1422:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             recalpfcount++;
 3366              		.loc 1 1422 25
 3367 0026 3B69     		ldr	r3, [r7, #16]
 3368 0028 0133     		adds	r3, r3, #1
 3369 002a 3B61     		str	r3, [r7, #16]
 3370              	.L190:
1420:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         {
 3371              		.loc 1 1420 21
 3372 002c 114B     		ldr	r3, .L195
 3373 002e DB68     		ldr	r3, [r3, #12]
1420:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         {
 3374              		.loc 1 1420 31
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 116


 3375 0030 03F48033 		and	r3, r3, #65536
1420:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         {
 3376              		.loc 1 1420 59
 3377 0034 002B     		cmp	r3, #0
 3378 0036 03D0     		beq	.L189
1420:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         {
 3379              		.loc 1 1420 59 is_stmt 0 discriminator 1
 3380 0038 3B69     		ldr	r3, [r7, #16]
 3381 003a B3F5805F 		cmp	r3, #4096
 3382 003e F2D1     		bne	.L191
 3383              	.L189:
1423:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         }
1424:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
1425:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1426:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* check if the calibration pending is completed or if there is no calibration operation at all
1427:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     if ((RTC->INITSTS & RTC_FLAG_RECPF) == RESET)
 3384              		.loc 1 1427 13 is_stmt 1
 3385 0040 0C4B     		ldr	r3, .L195
 3386 0042 DB68     		ldr	r3, [r3, #12]
 3387              		.loc 1 1427 23
 3388 0044 03F48033 		and	r3, r3, #65536
 3389              		.loc 1 1427 8
 3390 0048 002B     		cmp	r3, #0
 3391 004a 09D1     		bne	.L192
1428:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
1429:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         /* Configure the Smooth calibration settings */
1430:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         RTC->CALIB = (uint32_t)((uint32_t)RTC_SmoothCalibPeriod | (uint32_t)RTC_SmoothCalibPlusPuls
 3392              		.loc 1 1430 65
 3393 004c FA68     		ldr	r2, [r7, #12]
 3394 004e BB68     		ldr	r3, [r7, #8]
 3395 0050 1A43     		orrs	r2, r2, r3
 3396              		.loc 1 1430 12
 3397 0052 0849     		ldr	r1, .L195
 3398              		.loc 1 1430 22
 3399 0054 7B68     		ldr	r3, [r7, #4]
 3400 0056 1343     		orrs	r3, r3, r2
 3401              		.loc 1 1430 20
 3402 0058 CB63     		str	r3, [r1, #60]
1431:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****                                 | (uint32_t)RTC_SmouthCalibMinusPulsesValue);
1432:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1433:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         status = SUCCESS;
 3403              		.loc 1 1433 16
 3404 005a 0123     		movs	r3, #1
 3405 005c FB75     		strb	r3, [r7, #23]
 3406 005e 01E0     		b	.L193
 3407              	.L192:
1434:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
1435:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     else
1436:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
1437:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         status = ERROR;
 3408              		.loc 1 1437 16
 3409 0060 0023     		movs	r3, #0
 3410 0062 FB75     		strb	r3, [r7, #23]
 3411              	.L193:
1438:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
1439:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1440:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Enable the write protection for RTC registers */
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 117


1441:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Enable();
 3412              		.loc 1 1441 5
 3413 0064 FFF7FEFF 		bl	RTC_Write_Protection_Enable
1442:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1443:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     return (ErrorStatus)(status);
 3414              		.loc 1 1443 12
 3415 0068 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1444:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 3416              		.loc 1 1444 1
 3417 006a 1846     		mov	r0, r3
 3418 006c 1837     		adds	r7, r7, #24
 3419              	.LCFI187:
 3420              		.cfi_def_cfa_offset 8
 3421 006e BD46     		mov	sp, r7
 3422              	.LCFI188:
 3423              		.cfi_def_cfa_register 13
 3424              		@ sp needed
 3425 0070 80BD     		pop	{r7, pc}
 3426              	.L196:
 3427 0072 00BF     		.align	2
 3428              	.L195:
 3429 0074 00280040 		.word	1073752064
 3430              		.cfi_endproc
 3431              	.LFE171:
 3433              		.section	.text.RTC_TimeStamp_Enable,"ax",%progbits
 3434              		.align	1
 3435              		.global	RTC_TimeStamp_Enable
 3436              		.syntax unified
 3437              		.thumb
 3438              		.thumb_func
 3440              	RTC_TimeStamp_Enable:
 3441              	.LFB172:
1445:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1446:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
1447:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_TimeStamp_Enable
1448:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Enable the RTC TimeStamp functionality with the specified time stamp pin stimulating ed
1449:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_TimeStampEdge : Specifies the pin edge on which the TimeStamp is activated.
1450:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_TIMESTAMP_EDGE_RISING : the Time stamp event occurs on the rising edge of the
1451:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_TIMESTAMP_EDGE_FALLING : the Time stamp event occurs on the falling edge of t
1452:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none
1453:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
1454:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** void RTC_TimeStamp_Enable(uint32_t RTC_TimeStampEdge)
1455:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 3442              		.loc 1 1455 1
 3443              		.cfi_startproc
 3444              		@ args = 0, pretend = 0, frame = 16
 3445              		@ frame_needed = 1, uses_anonymous_args = 0
 3446 0000 80B5     		push	{r7, lr}
 3447              	.LCFI189:
 3448              		.cfi_def_cfa_offset 8
 3449              		.cfi_offset 7, -8
 3450              		.cfi_offset 14, -4
 3451 0002 84B0     		sub	sp, sp, #16
 3452              	.LCFI190:
 3453              		.cfi_def_cfa_offset 24
 3454 0004 00AF     		add	r7, sp, #0
 3455              	.LCFI191:
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 118


 3456              		.cfi_def_cfa_register 7
 3457 0006 7860     		str	r0, [r7, #4]
1456:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     uint32_t temp_value = 0;
 3458              		.loc 1 1456 14
 3459 0008 0023     		movs	r3, #0
 3460 000a FB60     		str	r3, [r7, #12]
1457:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1458:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Get the RTC_CTRL register and clear the bits to be configured */
1459:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     temp_value = (uint32_t)(RTC->CTRL & (uint32_t) ~(RTC_CTRL_TEDGE | RTC_CTRL_TSEN));
 3461              		.loc 1 1459 32
 3462 000c 0B4B     		ldr	r3, .L198
 3463 000e 9B68     		ldr	r3, [r3, #8]
 3464              		.loc 1 1459 16
 3465 0010 23F40063 		bic	r3, r3, #2048
 3466 0014 23F00803 		bic	r3, r3, #8
 3467 0018 FB60     		str	r3, [r7, #12]
1460:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1461:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Get the new configuration */
1462:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1463:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     temp_value |= (uint32_t)(RTC_TimeStampEdge | RTC_CTRL_TSEN);
 3468              		.loc 1 1463 16
 3469 001a 7A68     		ldr	r2, [r7, #4]
 3470 001c FB68     		ldr	r3, [r7, #12]
 3471 001e 1343     		orrs	r3, r3, r2
 3472 0020 43F40063 		orr	r3, r3, #2048
 3473 0024 FB60     		str	r3, [r7, #12]
1464:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     
1465:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Disable the write protection for RTC registers */
1466:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Disable();
 3474              		.loc 1 1466 5
 3475 0026 FFF7FEFF 		bl	RTC_Write_Protection_Disable
1467:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1468:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Configure the Time Stamp TSEDGE and Enable bits */
1469:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->CTRL = (uint32_t)temp_value;
 3476              		.loc 1 1469 8
 3477 002a 044A     		ldr	r2, .L198
 3478              		.loc 1 1469 15
 3479 002c FB68     		ldr	r3, [r7, #12]
 3480 002e 9360     		str	r3, [r2, #8]
1470:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1471:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Enable the write protection for RTC registers */
1472:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Enable();
 3481              		.loc 1 1472 5
 3482 0030 FFF7FEFF 		bl	RTC_Write_Protection_Enable
1473:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 3483              		.loc 1 1473 1
 3484 0034 00BF     		nop
 3485 0036 1037     		adds	r7, r7, #16
 3486              	.LCFI192:
 3487              		.cfi_def_cfa_offset 8
 3488 0038 BD46     		mov	sp, r7
 3489              	.LCFI193:
 3490              		.cfi_def_cfa_register 13
 3491              		@ sp needed
 3492 003a 80BD     		pop	{r7, pc}
 3493              	.L199:
 3494              		.align	2
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 119


 3495              	.L198:
 3496 003c 00280040 		.word	1073752064
 3497              		.cfi_endproc
 3498              	.LFE172:
 3500              		.section	.text.RTC_TimeStamp_Disable,"ax",%progbits
 3501              		.align	1
 3502              		.global	RTC_TimeStamp_Disable
 3503              		.syntax unified
 3504              		.thumb
 3505              		.thumb_func
 3507              	RTC_TimeStamp_Disable:
 3508              	.LFB173:
1474:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1475:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
1476:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_TimeStamp_Disable
1477:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Disable the RTC TimeStamp functionality
1478:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   none
1479:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none
1480:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
1481:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** void RTC_TimeStamp_Disable(void)
1482:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 3509              		.loc 1 1482 1
 3510              		.cfi_startproc
 3511              		@ args = 0, pretend = 0, frame = 8
 3512              		@ frame_needed = 1, uses_anonymous_args = 0
 3513 0000 80B5     		push	{r7, lr}
 3514              	.LCFI194:
 3515              		.cfi_def_cfa_offset 8
 3516              		.cfi_offset 7, -8
 3517              		.cfi_offset 14, -4
 3518 0002 82B0     		sub	sp, sp, #8
 3519              	.LCFI195:
 3520              		.cfi_def_cfa_offset 16
 3521 0004 00AF     		add	r7, sp, #0
 3522              	.LCFI196:
 3523              		.cfi_def_cfa_register 7
1483:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     uint32_t temp_value = 0;
 3524              		.loc 1 1483 14
 3525 0006 0023     		movs	r3, #0
 3526 0008 7B60     		str	r3, [r7, #4]
1484:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1485:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Get the RTC_CTRL register and clear the bits to be configured */
1486:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     temp_value = (uint32_t)(RTC->CTRL & (uint32_t) ~(RTC_CTRL_TEDGE | RTC_CTRL_TSEN));
 3527              		.loc 1 1486 32
 3528 000a 094B     		ldr	r3, .L201
 3529 000c 9B68     		ldr	r3, [r3, #8]
 3530              		.loc 1 1486 16
 3531 000e 23F40063 		bic	r3, r3, #2048
 3532 0012 23F00803 		bic	r3, r3, #8
 3533 0016 7B60     		str	r3, [r7, #4]
1487:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1488:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Disable the write protection for RTC registers */
1489:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Disable();
 3534              		.loc 1 1489 5
 3535 0018 FFF7FEFF 		bl	RTC_Write_Protection_Disable
1490:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1491:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Configure the Time Stamp TSEDGE and Enable bits */
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 120


1492:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->CTRL = (uint32_t)temp_value;
 3536              		.loc 1 1492 8
 3537 001c 044A     		ldr	r2, .L201
 3538              		.loc 1 1492 15
 3539 001e 7B68     		ldr	r3, [r7, #4]
 3540 0020 9360     		str	r3, [r2, #8]
1493:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1494:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Enable the write protection for RTC registers */
1495:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Enable();
 3541              		.loc 1 1495 5
 3542 0022 FFF7FEFF 		bl	RTC_Write_Protection_Enable
1496:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 3543              		.loc 1 1496 1
 3544 0026 00BF     		nop
 3545 0028 0837     		adds	r7, r7, #8
 3546              	.LCFI197:
 3547              		.cfi_def_cfa_offset 8
 3548 002a BD46     		mov	sp, r7
 3549              	.LCFI198:
 3550              		.cfi_def_cfa_register 13
 3551              		@ sp needed
 3552 002c 80BD     		pop	{r7, pc}
 3553              	.L202:
 3554 002e 00BF     		.align	2
 3555              	.L201:
 3556 0030 00280040 		.word	1073752064
 3557              		.cfi_endproc
 3558              	.LFE173:
 3560              		.section	.text.RTC_TimeStamp_Get,"ax",%progbits
 3561              		.align	1
 3562              		.global	RTC_TimeStamp_Get
 3563              		.syntax unified
 3564              		.thumb
 3565              		.thumb_func
 3567              	RTC_TimeStamp_Get:
 3568              	.LFB174:
1497:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1498:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
1499:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_TimeStamp_Get
1500:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Get the RTC TimeStamp value and masks.
1501:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_Format : specifies the format of the output parameters.
1502:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_FORMAT_BIN : Binary data format
1503:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_FORMAT_BCD : BCD data format
1504:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_StampTimeStruct : pointer to a RTC_TimeType structure that will
1505:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\        contains the TimeStamp time values.
1506:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_StampDateStruct : pointer to a RTC_DateType structure that will
1507:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\        contains the TimeStamp date values.
1508:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none
1509:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
1510:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** void RTC_TimeStamp_Get(uint32_t RTC_Format, RTC_TimeType* RTC_StampTimeStruct, RTC_DateType* RTC_St
1511:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 3569              		.loc 1 1511 1
 3570              		.cfi_startproc
 3571              		@ args = 0, pretend = 0, frame = 24
 3572              		@ frame_needed = 1, uses_anonymous_args = 0
 3573 0000 80B5     		push	{r7, lr}
 3574              	.LCFI199:
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 121


 3575              		.cfi_def_cfa_offset 8
 3576              		.cfi_offset 7, -8
 3577              		.cfi_offset 14, -4
 3578 0002 86B0     		sub	sp, sp, #24
 3579              	.LCFI200:
 3580              		.cfi_def_cfa_offset 32
 3581 0004 00AF     		add	r7, sp, #0
 3582              	.LCFI201:
 3583              		.cfi_def_cfa_register 7
 3584 0006 F860     		str	r0, [r7, #12]
 3585 0008 B960     		str	r1, [r7, #8]
 3586 000a 7A60     		str	r2, [r7, #4]
1512:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     uint32_t tmptime = 0, tmpdate = 0;
 3587              		.loc 1 1512 14
 3588 000c 0023     		movs	r3, #0
 3589 000e 7B61     		str	r3, [r7, #20]
 3590              		.loc 1 1512 27
 3591 0010 0023     		movs	r3, #0
 3592 0012 3B61     		str	r3, [r7, #16]
1513:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1514:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Get the TimeStamp time and date registers values */
1515:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     tmptime = (uint32_t)(RTC->TST & RTC_TR_RESERVED_MASK);
 3593              		.loc 1 1515 29
 3594 0014 424B     		ldr	r3, .L206
 3595 0016 1B6B     		ldr	r3, [r3, #48]
 3596              		.loc 1 1515 13
 3597 0018 03F07F33 		and	r3, r3, #2139062143
 3598 001c 23F0FE43 		bic	r3, r3, #2130706432
 3599 0020 7B61     		str	r3, [r7, #20]
1516:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     tmpdate = (uint32_t)(RTC->TSD & RTC_DATE_RESERVED_MASK);
 3600              		.loc 1 1516 29
 3601 0022 3F4B     		ldr	r3, .L206
 3602 0024 5B6B     		ldr	r3, [r3, #52]
 3603              		.loc 1 1516 13
 3604 0026 23F07F43 		bic	r3, r3, #-16777216
 3605 002a 23F0C003 		bic	r3, r3, #192
 3606 002e 3B61     		str	r3, [r7, #16]
1517:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     
1518:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Fill the Time structure fields with the read parameters */
1519:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_StampTimeStruct->Hours   = (uint8_t)((tmptime & (RTC_TSH_HOT | RTC_TSH_HOU)) >> 16);
 3607              		.loc 1 1519 86
 3608 0030 7B69     		ldr	r3, [r7, #20]
 3609 0032 1B0C     		lsrs	r3, r3, #16
 3610              		.loc 1 1519 36
 3611 0034 DBB2     		uxtb	r3, r3
 3612 0036 03F03F03 		and	r3, r3, #63
 3613 003a DAB2     		uxtb	r2, r3
 3614              		.loc 1 1519 34
 3615 003c BB68     		ldr	r3, [r7, #8]
 3616 003e 1A70     		strb	r2, [r3]
1520:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_StampTimeStruct->Minutes = (uint8_t)((tmptime & (RTC_TSH_MIT | RTC_TSH_MIU)) >> 8);
 3617              		.loc 1 1520 86
 3618 0040 7B69     		ldr	r3, [r7, #20]
 3619 0042 1B0A     		lsrs	r3, r3, #8
 3620              		.loc 1 1520 36
 3621 0044 DBB2     		uxtb	r3, r3
 3622 0046 03F07F03 		and	r3, r3, #127
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 122


 3623 004a DAB2     		uxtb	r2, r3
 3624              		.loc 1 1520 34
 3625 004c BB68     		ldr	r3, [r7, #8]
 3626 004e 5A70     		strb	r2, [r3, #1]
1521:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_StampTimeStruct->Seconds = (uint8_t)(tmptime & (RTC_TSH_SCT | RTC_TSH_SCU));
 3627              		.loc 1 1521 36
 3628 0050 7B69     		ldr	r3, [r7, #20]
 3629 0052 DBB2     		uxtb	r3, r3
 3630 0054 03F07F03 		and	r3, r3, #127
 3631 0058 DAB2     		uxtb	r2, r3
 3632              		.loc 1 1521 34
 3633 005a BB68     		ldr	r3, [r7, #8]
 3634 005c 9A70     		strb	r2, [r3, #2]
1522:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_StampTimeStruct->H12     = (uint8_t)((tmptime & (RTC_TSH_APM)) >> 16);
 3635              		.loc 1 1522 72
 3636 005e 7B69     		ldr	r3, [r7, #20]
 3637 0060 1B0C     		lsrs	r3, r3, #16
 3638              		.loc 1 1522 36
 3639 0062 DBB2     		uxtb	r3, r3
 3640 0064 03F04003 		and	r3, r3, #64
 3641 0068 DAB2     		uxtb	r2, r3
 3642              		.loc 1 1522 34
 3643 006a BB68     		ldr	r3, [r7, #8]
 3644 006c DA70     		strb	r2, [r3, #3]
1523:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1524:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Fill the Date structure fields with the read parameters */
1525:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_StampDateStruct->Year    = (uint8_t)((tmpdate & (RTC_DATE_YRT | RTC_DATE_YRU)) >> 16);
 3645              		.loc 1 1525 88
 3646 006e 3B69     		ldr	r3, [r7, #16]
 3647 0070 1B0C     		lsrs	r3, r3, #16
 3648              		.loc 1 1525 36
 3649 0072 DAB2     		uxtb	r2, r3
 3650              		.loc 1 1525 34
 3651 0074 7B68     		ldr	r3, [r7, #4]
 3652 0076 DA70     		strb	r2, [r3, #3]
1526:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_StampDateStruct->Month   = (uint8_t)((tmpdate & (RTC_DATE_MOT | RTC_DATE_MOU)) >> 8);
 3653              		.loc 1 1526 88
 3654 0078 3B69     		ldr	r3, [r7, #16]
 3655 007a 1B0A     		lsrs	r3, r3, #8
 3656              		.loc 1 1526 36
 3657 007c DBB2     		uxtb	r3, r3
 3658 007e 03F01F03 		and	r3, r3, #31
 3659 0082 DAB2     		uxtb	r2, r3
 3660              		.loc 1 1526 34
 3661 0084 7B68     		ldr	r3, [r7, #4]
 3662 0086 5A70     		strb	r2, [r3, #1]
1527:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_StampDateStruct->Date    = (uint8_t)(tmpdate & (RTC_DATE_DAT | RTC_DATE_DAU));
 3663              		.loc 1 1527 36
 3664 0088 3B69     		ldr	r3, [r7, #16]
 3665 008a DBB2     		uxtb	r3, r3
 3666 008c 03F03F03 		and	r3, r3, #63
 3667 0090 DAB2     		uxtb	r2, r3
 3668              		.loc 1 1527 34
 3669 0092 7B68     		ldr	r3, [r7, #4]
 3670 0094 9A70     		strb	r2, [r3, #2]
1528:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_StampDateStruct->WeekDay = (uint8_t)((tmpdate & (RTC_DATE_WDU)) >> 13);
 3671              		.loc 1 1528 73
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 123


 3672 0096 3B69     		ldr	r3, [r7, #16]
 3673 0098 5B0B     		lsrs	r3, r3, #13
 3674              		.loc 1 1528 36
 3675 009a DBB2     		uxtb	r3, r3
 3676 009c 03F00703 		and	r3, r3, #7
 3677 00a0 DAB2     		uxtb	r2, r3
 3678              		.loc 1 1528 34
 3679 00a2 7B68     		ldr	r3, [r7, #4]
 3680 00a4 1A70     		strb	r2, [r3]
1529:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1530:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Check the input parameters format */
1531:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     if (RTC_Format == RTC_FORMAT_BIN)
 3681              		.loc 1 1531 8
 3682 00a6 FB68     		ldr	r3, [r7, #12]
 3683 00a8 002B     		cmp	r3, #0
 3684 00aa 35D1     		bne	.L205
1532:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
1533:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         /* Convert the Time structure parameters to Binary format */
1534:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         RTC_StampTimeStruct->Hours   = (uint8_t)RTC_Bcd2_To_Byte(RTC_StampTimeStruct->Hours);
 3685              		.loc 1 1534 49
 3686 00ac BB68     		ldr	r3, [r7, #8]
 3687 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3688 00b0 1846     		mov	r0, r3
 3689 00b2 FFF7FEFF 		bl	RTC_Bcd2_To_Byte
 3690 00b6 0346     		mov	r3, r0
 3691 00b8 1A46     		mov	r2, r3
 3692              		.loc 1 1534 38
 3693 00ba BB68     		ldr	r3, [r7, #8]
 3694 00bc 1A70     		strb	r2, [r3]
1535:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         RTC_StampTimeStruct->Minutes = (uint8_t)RTC_Bcd2_To_Byte(RTC_StampTimeStruct->Minutes);
 3695              		.loc 1 1535 49
 3696 00be BB68     		ldr	r3, [r7, #8]
 3697 00c0 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3698 00c2 1846     		mov	r0, r3
 3699 00c4 FFF7FEFF 		bl	RTC_Bcd2_To_Byte
 3700 00c8 0346     		mov	r3, r0
 3701 00ca 1A46     		mov	r2, r3
 3702              		.loc 1 1535 38
 3703 00cc BB68     		ldr	r3, [r7, #8]
 3704 00ce 5A70     		strb	r2, [r3, #1]
1536:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         RTC_StampTimeStruct->Seconds = (uint8_t)RTC_Bcd2_To_Byte(RTC_StampTimeStruct->Seconds);
 3705              		.loc 1 1536 49
 3706 00d0 BB68     		ldr	r3, [r7, #8]
 3707 00d2 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 3708 00d4 1846     		mov	r0, r3
 3709 00d6 FFF7FEFF 		bl	RTC_Bcd2_To_Byte
 3710 00da 0346     		mov	r3, r0
 3711 00dc 1A46     		mov	r2, r3
 3712              		.loc 1 1536 38
 3713 00de BB68     		ldr	r3, [r7, #8]
 3714 00e0 9A70     		strb	r2, [r3, #2]
1537:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1538:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         /* Convert the Date structure parameters to Binary format */
1539:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         RTC_StampDateStruct->Month   = (uint8_t)RTC_Bcd2_To_Byte(RTC_StampDateStruct->Month);
 3715              		.loc 1 1539 49
 3716 00e2 7B68     		ldr	r3, [r7, #4]
 3717 00e4 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 124


 3718 00e6 1846     		mov	r0, r3
 3719 00e8 FFF7FEFF 		bl	RTC_Bcd2_To_Byte
 3720 00ec 0346     		mov	r3, r0
 3721 00ee 1A46     		mov	r2, r3
 3722              		.loc 1 1539 38
 3723 00f0 7B68     		ldr	r3, [r7, #4]
 3724 00f2 5A70     		strb	r2, [r3, #1]
1540:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         RTC_StampDateStruct->Date    = (uint8_t)RTC_Bcd2_To_Byte(RTC_StampDateStruct->Date);
 3725              		.loc 1 1540 49
 3726 00f4 7B68     		ldr	r3, [r7, #4]
 3727 00f6 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 3728 00f8 1846     		mov	r0, r3
 3729 00fa FFF7FEFF 		bl	RTC_Bcd2_To_Byte
 3730 00fe 0346     		mov	r3, r0
 3731 0100 1A46     		mov	r2, r3
 3732              		.loc 1 1540 38
 3733 0102 7B68     		ldr	r3, [r7, #4]
 3734 0104 9A70     		strb	r2, [r3, #2]
1541:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         RTC_StampDateStruct->WeekDay = (uint8_t)RTC_Bcd2_To_Byte(RTC_StampDateStruct->WeekDay);
 3735              		.loc 1 1541 49
 3736 0106 7B68     		ldr	r3, [r7, #4]
 3737 0108 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3738 010a 1846     		mov	r0, r3
 3739 010c FFF7FEFF 		bl	RTC_Bcd2_To_Byte
 3740 0110 0346     		mov	r3, r0
 3741 0112 1A46     		mov	r2, r3
 3742              		.loc 1 1541 38
 3743 0114 7B68     		ldr	r3, [r7, #4]
 3744 0116 1A70     		strb	r2, [r3]
 3745              	.L205:
1542:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
1543:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 3746              		.loc 1 1543 1
 3747 0118 00BF     		nop
 3748 011a 1837     		adds	r7, r7, #24
 3749              	.LCFI202:
 3750              		.cfi_def_cfa_offset 8
 3751 011c BD46     		mov	sp, r7
 3752              	.LCFI203:
 3753              		.cfi_def_cfa_register 13
 3754              		@ sp needed
 3755 011e 80BD     		pop	{r7, pc}
 3756              	.L207:
 3757              		.align	2
 3758              	.L206:
 3759 0120 00280040 		.word	1073752064
 3760              		.cfi_endproc
 3761              	.LFE174:
 3763              		.section	.text.RTC_TimeStamp_SubSecond_Get,"ax",%progbits
 3764              		.align	1
 3765              		.global	RTC_TimeStamp_SubSecond_Get
 3766              		.syntax unified
 3767              		.thumb
 3768              		.thumb_func
 3770              	RTC_TimeStamp_SubSecond_Get:
 3771              	.LFB175:
1544:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 125


1545:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
1546:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_TimeStamp_SubSecond_Get
1547:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Get the RTC timestamp Subseconds value.
1548:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  RTC current timestamp Subseconds value.
1549:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
1550:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** uint32_t RTC_TimeStamp_SubSecond_Get(void)
1551:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 3772              		.loc 1 1551 1
 3773              		.cfi_startproc
 3774              		@ args = 0, pretend = 0, frame = 0
 3775              		@ frame_needed = 1, uses_anonymous_args = 0
 3776              		@ link register save eliminated.
 3777 0000 80B4     		push	{r7}
 3778              	.LCFI204:
 3779              		.cfi_def_cfa_offset 4
 3780              		.cfi_offset 7, -4
 3781 0002 00AF     		add	r7, sp, #0
 3782              	.LCFI205:
 3783              		.cfi_def_cfa_register 7
1552:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Get timestamp subseconds values from the correspondent registers */
1553:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     return (uint32_t)(RTC->TSSS);
 3784              		.loc 1 1553 26
 3785 0004 034B     		ldr	r3, .L210
 3786              		.loc 1 1553 12
 3787 0006 9B6B     		ldr	r3, [r3, #56]
1554:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 3788              		.loc 1 1554 1
 3789 0008 1846     		mov	r0, r3
 3790 000a BD46     		mov	sp, r7
 3791              	.LCFI206:
 3792              		.cfi_def_cfa_register 13
 3793              		@ sp needed
 3794 000c 5DF8047B 		ldr	r7, [sp], #4
 3795              	.LCFI207:
 3796              		.cfi_restore 7
 3797              		.cfi_def_cfa_offset 0
 3798 0010 7047     		bx	lr
 3799              	.L211:
 3800 0012 00BF     		.align	2
 3801              	.L210:
 3802 0014 00280040 		.word	1073752064
 3803              		.cfi_endproc
 3804              	.LFE175:
 3806              		.section	.text.RTC_Output_Mode_Config,"ax",%progbits
 3807              		.align	1
 3808              		.global	RTC_Output_Mode_Config
 3809              		.syntax unified
 3810              		.thumb
 3811              		.thumb_func
 3813              	RTC_Output_Mode_Config:
 3814              	.LFB176:
1555:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1556:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1557:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
1558:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Output_Mode_Config
1559:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Configures the RTC Output Pin mode.
1560:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_OutputType : specifies the RTC Output (PC13) pin mode.
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 126


1561:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_OUTPUT_OPENDRAIN : RTC Output (PC13) is configured in  Open Drain mode.
1562:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_OUTPUT_PUSHPULL : RTC Output (PC13) is configured in Push Pull mode.
1563:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none
1564:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
1565:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** void RTC_Output_Mode_Config(uint32_t RTC_OutputType)
1566:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 3815              		.loc 1 1566 1
 3816              		.cfi_startproc
 3817              		@ args = 0, pretend = 0, frame = 8
 3818              		@ frame_needed = 1, uses_anonymous_args = 0
 3819              		@ link register save eliminated.
 3820 0000 80B4     		push	{r7}
 3821              	.LCFI208:
 3822              		.cfi_def_cfa_offset 4
 3823              		.cfi_offset 7, -4
 3824 0002 83B0     		sub	sp, sp, #12
 3825              	.LCFI209:
 3826              		.cfi_def_cfa_offset 16
 3827 0004 00AF     		add	r7, sp, #0
 3828              	.LCFI210:
 3829              		.cfi_def_cfa_register 7
 3830 0006 7860     		str	r0, [r7, #4]
1567:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->OPT &= (uint32_t) ~(RTC_OPT_TYPE);
 3831              		.loc 1 1567 8
 3832 0008 084B     		ldr	r3, .L213
 3833 000a DB6C     		ldr	r3, [r3, #76]
 3834 000c 074A     		ldr	r2, .L213
 3835              		.loc 1 1567 14
 3836 000e 23F00103 		bic	r3, r3, #1
 3837 0012 D364     		str	r3, [r2, #76]
1568:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->OPT |= (uint32_t)(RTC_OutputType);
 3838              		.loc 1 1568 8
 3839 0014 054B     		ldr	r3, .L213
 3840 0016 DA6C     		ldr	r2, [r3, #76]
 3841 0018 0449     		ldr	r1, .L213
 3842              		.loc 1 1568 14
 3843 001a 7B68     		ldr	r3, [r7, #4]
 3844 001c 1343     		orrs	r3, r3, r2
 3845 001e CB64     		str	r3, [r1, #76]
1569:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 3846              		.loc 1 1569 1
 3847 0020 00BF     		nop
 3848 0022 0C37     		adds	r7, r7, #12
 3849              	.LCFI211:
 3850              		.cfi_def_cfa_offset 4
 3851 0024 BD46     		mov	sp, r7
 3852              	.LCFI212:
 3853              		.cfi_def_cfa_register 13
 3854              		@ sp needed
 3855 0026 5DF8047B 		ldr	r7, [sp], #4
 3856              	.LCFI213:
 3857              		.cfi_restore 7
 3858              		.cfi_def_cfa_offset 0
 3859 002a 7047     		bx	lr
 3860              	.L214:
 3861              		.align	2
 3862              	.L213:
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 127


 3863 002c 00280040 		.word	1073752064
 3864              		.cfi_endproc
 3865              	.LFE176:
 3867              		.section	.text.RTC_Synchronization_Shift_Config,"ax",%progbits
 3868              		.align	1
 3869              		.global	RTC_Synchronization_Shift_Config
 3870              		.syntax unified
 3871              		.thumb
 3872              		.thumb_func
 3874              	RTC_Synchronization_Shift_Config:
 3875              	.LFB177:
1570:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1571:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1572:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
1573:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Synchronization_Shift_Config
1574:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Configures the Synchronization Shift Control Settings.
1575:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_ShiftAdd1S : Select to add or not 1 second to the time Calendar.
1576:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_SHIFT_SUB1S_DISABLE : Add one second to the clock calendar.
1577:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_SHIFT_SUB1S_ENABLE : No effect.
1578:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_ShiftAddFS : Select the number of Second Fractions to Substitute.
1579:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          This parameter can be one any value from 0 to 0x7FFF.
1580:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  ErrorStatus :
1581:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - SUCCESS : RTC Shift registers are configured
1582:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - ERROR : RTC Shift registers are not configured
1583:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
1584:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** ErrorStatus RTC_Synchronization_Shift_Config(uint32_t RTC_ShiftAddFS, uint32_t RTC_ShiftSub1s)
1585:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 3876              		.loc 1 1585 1
 3877              		.cfi_startproc
 3878              		@ args = 0, pretend = 0, frame = 16
 3879              		@ frame_needed = 1, uses_anonymous_args = 0
 3880 0000 80B5     		push	{r7, lr}
 3881              	.LCFI214:
 3882              		.cfi_def_cfa_offset 8
 3883              		.cfi_offset 7, -8
 3884              		.cfi_offset 14, -4
 3885 0002 84B0     		sub	sp, sp, #16
 3886              	.LCFI215:
 3887              		.cfi_def_cfa_offset 24
 3888 0004 00AF     		add	r7, sp, #0
 3889              	.LCFI216:
 3890              		.cfi_def_cfa_register 7
 3891 0006 7860     		str	r0, [r7, #4]
 3892 0008 3960     		str	r1, [r7]
1586:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     uint32_t temp_value = 0;
 3893              		.loc 1 1586 14
 3894 000a 0023     		movs	r3, #0
 3895 000c FB60     		str	r3, [r7, #12]
1587:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     ErrorStatus status_value = ERROR;
 3896              		.loc 1 1587 17
 3897 000e 0023     		movs	r3, #0
 3898 0010 FB72     		strb	r3, [r7, #11]
1588:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     
1589:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Disable the write protection for RTC registers */
1590:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Disable();
 3899              		.loc 1 1590 5
 3900 0012 FFF7FEFF 		bl	RTC_Write_Protection_Disable
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 128


1591:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1592:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Check if a Shift is pending*/
1593:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     if ((RTC->INITSTS & RTC_FLAG_SHOPF) != RESET)
 3901              		.loc 1 1593 13
 3902 0016 1E4B     		ldr	r3, .L224
 3903 0018 DB68     		ldr	r3, [r3, #12]
 3904              		.loc 1 1593 23
 3905 001a 03F00803 		and	r3, r3, #8
 3906              		.loc 1 1593 8
 3907 001e 002B     		cmp	r3, #0
 3908 0020 0DD0     		beq	.L216
1594:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
1595:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         /* Wait until the shift is completed*/
1596:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         while (((RTC->INITSTS & RTC_FLAG_SHOPF) != RESET) && (temp_value != SHPF_TIMEOUT))
 3909              		.loc 1 1596 15
 3910 0022 02E0     		b	.L217
 3911              	.L218:
1597:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         {
1598:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             temp_value++;
 3912              		.loc 1 1598 23
 3913 0024 FB68     		ldr	r3, [r7, #12]
 3914 0026 0133     		adds	r3, r3, #1
 3915 0028 FB60     		str	r3, [r7, #12]
 3916              	.L217:
1596:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         {
 3917              		.loc 1 1596 21
 3918 002a 194B     		ldr	r3, .L224
 3919 002c DB68     		ldr	r3, [r3, #12]
1596:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         {
 3920              		.loc 1 1596 31
 3921 002e 03F00803 		and	r3, r3, #8
1596:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         {
 3922              		.loc 1 1596 59
 3923 0032 002B     		cmp	r3, #0
 3924 0034 03D0     		beq	.L216
1596:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         {
 3925              		.loc 1 1596 59 is_stmt 0 discriminator 1
 3926 0036 FB68     		ldr	r3, [r7, #12]
 3927 0038 B3F5005F 		cmp	r3, #8192
 3928 003c F2D1     		bne	.L218
 3929              	.L216:
1599:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         }
1600:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
1601:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1602:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Check if the Shift pending is completed or if there is no Shift operation at all*/
1603:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     if ((RTC->INITSTS & RTC_FLAG_SHOPF) == RESET)
 3930              		.loc 1 1603 13 is_stmt 1
 3931 003e 144B     		ldr	r3, .L224
 3932 0040 DB68     		ldr	r3, [r3, #12]
 3933              		.loc 1 1603 23
 3934 0042 03F00803 		and	r3, r3, #8
 3935              		.loc 1 1603 8
 3936 0046 002B     		cmp	r3, #0
 3937 0048 18D1     		bne	.L219
1604:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
1605:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         
1606:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         /* check if the reference clock detection is disabled */
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 129


1607:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         if ((RTC->CTRL & RTC_CTRL_REFCLKEN) == RESET)
 3938              		.loc 1 1607 17
 3939 004a 114B     		ldr	r3, .L224
 3940 004c 9B68     		ldr	r3, [r3, #8]
 3941              		.loc 1 1607 24
 3942 004e 03F01003 		and	r3, r3, #16
 3943              		.loc 1 1607 12
 3944 0052 002B     		cmp	r3, #0
 3945 0054 0FD1     		bne	.L220
1608:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         {
1609:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             /* Configure the Shift settings */
1610:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             RTC->SCTRL = (uint32_t)(uint32_t)(RTC_ShiftAddFS) | (uint32_t)(RTC_ShiftSub1s);
 3946              		.loc 1 1610 16
 3947 0056 0E49     		ldr	r1, .L224
 3948              		.loc 1 1610 63
 3949 0058 7A68     		ldr	r2, [r7, #4]
 3950 005a 3B68     		ldr	r3, [r7]
 3951 005c 1343     		orrs	r3, r3, r2
 3952              		.loc 1 1610 24
 3953 005e CB62     		str	r3, [r1, #44]
1611:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1612:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             if (RTC_Wait_For_Synchronization() == ERROR)
 3954              		.loc 1 1612 17
 3955 0060 FFF7FEFF 		bl	RTC_Wait_For_Synchronization
 3956 0064 0346     		mov	r3, r0
 3957              		.loc 1 1612 16
 3958 0066 002B     		cmp	r3, #0
 3959 0068 02D1     		bne	.L221
1613:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             {
1614:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****                 status_value = ERROR;
 3960              		.loc 1 1614 30
 3961 006a 0023     		movs	r3, #0
 3962 006c FB72     		strb	r3, [r7, #11]
 3963 006e 07E0     		b	.L222
 3964              	.L221:
1615:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             }
1616:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             else
1617:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             {
1618:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****                 status_value = SUCCESS;
 3965              		.loc 1 1618 30
 3966 0070 0123     		movs	r3, #1
 3967 0072 FB72     		strb	r3, [r7, #11]
 3968 0074 04E0     		b	.L222
 3969              	.L220:
1619:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             }
1620:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         }
1621:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         else
1622:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         {
1623:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             status_value = ERROR;
 3970              		.loc 1 1623 26
 3971 0076 0023     		movs	r3, #0
 3972 0078 FB72     		strb	r3, [r7, #11]
 3973 007a 01E0     		b	.L222
 3974              	.L219:
1624:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         }
1625:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
1626:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     else
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 130


1627:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
1628:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         status_value = ERROR;
 3975              		.loc 1 1628 22
 3976 007c 0023     		movs	r3, #0
 3977 007e FB72     		strb	r3, [r7, #11]
 3978              	.L222:
1629:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
1630:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1631:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Enable the write protection for RTC registers */
1632:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Enable();
 3979              		.loc 1 1632 5
 3980 0080 FFF7FEFF 		bl	RTC_Write_Protection_Enable
1633:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1634:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     return status_value;
 3981              		.loc 1 1634 12
 3982 0084 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
1635:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 3983              		.loc 1 1635 1
 3984 0086 1846     		mov	r0, r3
 3985 0088 1037     		adds	r7, r7, #16
 3986              	.LCFI217:
 3987              		.cfi_def_cfa_offset 8
 3988 008a BD46     		mov	sp, r7
 3989              	.LCFI218:
 3990              		.cfi_def_cfa_register 13
 3991              		@ sp needed
 3992 008c 80BD     		pop	{r7, pc}
 3993              	.L225:
 3994 008e 00BF     		.align	2
 3995              	.L224:
 3996 0090 00280040 		.word	1073752064
 3997              		.cfi_endproc
 3998              	.LFE177:
 4000              		.section	.text.RTC_Interrupts_Enable,"ax",%progbits
 4001              		.align	1
 4002              		.global	RTC_Interrupts_Enable
 4003              		.syntax unified
 4004              		.thumb
 4005              		.thumb_func
 4007              	RTC_Interrupts_Enable:
 4008              	.LFB178:
1636:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1637:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1638:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
1639:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Interrupts_Enable
1640:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Enable the specified RTC interrupts.
1641:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_INT : specifies the RTC interrupt sources to be enabled .
1642:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_INT_TST : TimeStamp interrupt mask.
1643:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_INT_WUT : WakeUp Timer interrupt mask.
1644:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_INT_ALRB : Alarm B interrupt mask.
1645:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_INT_ALRA : Alarm A interrupt mask.
1646:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none
1647:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
1648:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** void RTC_Interrupts_Enable(uint32_t RTC_INT)
1649:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 4009              		.loc 1 1649 1
 4010              		.cfi_startproc
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 131


 4011              		@ args = 0, pretend = 0, frame = 8
 4012              		@ frame_needed = 1, uses_anonymous_args = 0
 4013 0000 80B5     		push	{r7, lr}
 4014              	.LCFI219:
 4015              		.cfi_def_cfa_offset 8
 4016              		.cfi_offset 7, -8
 4017              		.cfi_offset 14, -4
 4018 0002 82B0     		sub	sp, sp, #8
 4019              	.LCFI220:
 4020              		.cfi_def_cfa_offset 16
 4021 0004 00AF     		add	r7, sp, #0
 4022              	.LCFI221:
 4023              		.cfi_def_cfa_register 7
 4024 0006 7860     		str	r0, [r7, #4]
1650:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Disable the write protection for RTC registers */
1651:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Disable();
 4025              		.loc 1 1651 5
 4026 0008 FFF7FEFF 		bl	RTC_Write_Protection_Disable
1652:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1653:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Configure the Interrupts in the RTC_CTRL register */
1654:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->CTRL |= RTC_INT ;
 4027              		.loc 1 1654 8
 4028 000c 054B     		ldr	r3, .L227
 4029 000e 9A68     		ldr	r2, [r3, #8]
 4030 0010 0449     		ldr	r1, .L227
 4031              		.loc 1 1654 15
 4032 0012 7B68     		ldr	r3, [r7, #4]
 4033 0014 1343     		orrs	r3, r3, r2
 4034 0016 8B60     		str	r3, [r1, #8]
1655:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     
1656:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Enable the write protection for RTC registers */
1657:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Enable();
 4035              		.loc 1 1657 5
 4036 0018 FFF7FEFF 		bl	RTC_Write_Protection_Enable
1658:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 4037              		.loc 1 1658 1
 4038 001c 00BF     		nop
 4039 001e 0837     		adds	r7, r7, #8
 4040              	.LCFI222:
 4041              		.cfi_def_cfa_offset 8
 4042 0020 BD46     		mov	sp, r7
 4043              	.LCFI223:
 4044              		.cfi_def_cfa_register 13
 4045              		@ sp needed
 4046 0022 80BD     		pop	{r7, pc}
 4047              	.L228:
 4048              		.align	2
 4049              	.L227:
 4050 0024 00280040 		.word	1073752064
 4051              		.cfi_endproc
 4052              	.LFE178:
 4054              		.section	.text.RTC_Interrupts_Disable,"ax",%progbits
 4055              		.align	1
 4056              		.global	RTC_Interrupts_Disable
 4057              		.syntax unified
 4058              		.thumb
 4059              		.thumb_func
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 132


 4061              	RTC_Interrupts_Disable:
 4062              	.LFB179:
1659:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1660:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
1661:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Interrupts_Disable
1662:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Disable the specified RTC interrupts.
1663:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_INT : specifies the RTC interrupt sources to be disabled.
1664:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_INT_TST : TimeStamp interrupt mask.
1665:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_INT_WUT : WakeUp Timer interrupt mask.
1666:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_INT_ALRB : Alarm B interrupt mask.
1667:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_INT_ALRA : Alarm A interrupt mask.
1668:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none
1669:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
1670:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** void RTC_Interrupts_Disable(uint32_t RTC_INT)
1671:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 4063              		.loc 1 1671 1
 4064              		.cfi_startproc
 4065              		@ args = 0, pretend = 0, frame = 8
 4066              		@ frame_needed = 1, uses_anonymous_args = 0
 4067 0000 80B5     		push	{r7, lr}
 4068              	.LCFI224:
 4069              		.cfi_def_cfa_offset 8
 4070              		.cfi_offset 7, -8
 4071              		.cfi_offset 14, -4
 4072 0002 82B0     		sub	sp, sp, #8
 4073              	.LCFI225:
 4074              		.cfi_def_cfa_offset 16
 4075 0004 00AF     		add	r7, sp, #0
 4076              	.LCFI226:
 4077              		.cfi_def_cfa_register 7
 4078 0006 7860     		str	r0, [r7, #4]
1672:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Disable the write protection for RTC registers */
1673:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Disable();
 4079              		.loc 1 1673 5
 4080 0008 FFF7FEFF 		bl	RTC_Write_Protection_Disable
1674:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1675:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Configure the Interrupts in the RTC_CTRL register */
1676:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->CTRL &= (uint32_t) ~(RTC_INT);
 4081              		.loc 1 1676 8
 4082 000c 064B     		ldr	r3, .L230
 4083 000e 9A68     		ldr	r2, [r3, #8]
 4084              		.loc 1 1676 29
 4085 0010 7B68     		ldr	r3, [r7, #4]
 4086 0012 DB43     		mvns	r3, r3
 4087              		.loc 1 1676 8
 4088 0014 0449     		ldr	r1, .L230
 4089              		.loc 1 1676 15
 4090 0016 1340     		ands	r3, r3, r2
 4091 0018 8B60     		str	r3, [r1, #8]
1677:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     
1678:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Enable the write protection for RTC registers */
1679:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC_Write_Protection_Enable();
 4092              		.loc 1 1679 5
 4093 001a FFF7FEFF 		bl	RTC_Write_Protection_Enable
1680:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 4094              		.loc 1 1680 1
 4095 001e 00BF     		nop
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 133


 4096 0020 0837     		adds	r7, r7, #8
 4097              	.LCFI227:
 4098              		.cfi_def_cfa_offset 8
 4099 0022 BD46     		mov	sp, r7
 4100              	.LCFI228:
 4101              		.cfi_def_cfa_register 13
 4102              		@ sp needed
 4103 0024 80BD     		pop	{r7, pc}
 4104              	.L231:
 4105 0026 00BF     		.align	2
 4106              	.L230:
 4107 0028 00280040 		.word	1073752064
 4108              		.cfi_endproc
 4109              	.LFE179:
 4111              		.section	.text.RTC_Flag_Status_Get,"ax",%progbits
 4112              		.align	1
 4113              		.global	RTC_Flag_Status_Get
 4114              		.syntax unified
 4115              		.thumb
 4116              		.thumb_func
 4118              	RTC_Flag_Status_Get:
 4119              	.LFB180:
1681:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1682:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
1683:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Flag_Status_Get
1684:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Checks whether the specified RTC flag is set or not.
1685:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_INT : specifies the flag to check.
1686:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_FLAG_RECPF  : RECALPF event flag.
1687:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_FLAG_TAM3F  : Tamp3 detect flag.
1688:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_FLAG_TAM2F  : Tamp2 detect flag.
1689:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_FLAG_TAM1F  : Tamp1 detect flag.
1690:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_FLAG_TISOVF : Time Stamp OverFlow flag.
1691:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_FLAG_TISF   : Time Stamp event flag.
1692:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_FLAG_WTF    : WakeUp Timer flag.
1693:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_FLAG_ALBF   : Alarm B flag.
1694:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_FLAG_ALAF   : Alarm A flag.
1695:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_FLAG_INITF  : Initialization mode flag.
1696:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_FLAG_RSYF   : Registers Synchronized flag.
1697:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_FLAG_INITSF : Registers Configured flag.
1698:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_FLAG_SHOPF  : Shift operation pending flag.
1699:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_FLAG_WTWF   : WakeUp Timer Write flag.
1700:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_FLAG_ALBWF  : Alarm B Write flag.
1701:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_FLAG_ALAWF  : Alarm A write flag.
1702:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  FlagStatus
1703:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - SET  : 
1704:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RESET : 
1705:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
1706:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** FlagStatus RTC_Flag_Status_Get(uint32_t RTC_FLAG)
1707:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 4120              		.loc 1 1707 1
 4121              		.cfi_startproc
 4122              		@ args = 0, pretend = 0, frame = 16
 4123              		@ frame_needed = 1, uses_anonymous_args = 0
 4124              		@ link register save eliminated.
 4125 0000 80B4     		push	{r7}
 4126              	.LCFI229:
 4127              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 134


 4128              		.cfi_offset 7, -4
 4129 0002 85B0     		sub	sp, sp, #20
 4130              	.LCFI230:
 4131              		.cfi_def_cfa_offset 24
 4132 0004 00AF     		add	r7, sp, #0
 4133              	.LCFI231:
 4134              		.cfi_def_cfa_register 7
 4135 0006 7860     		str	r0, [r7, #4]
1708:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     uint32_t temp_value = 0;
 4136              		.loc 1 1708 14
 4137 0008 0023     		movs	r3, #0
 4138 000a FB60     		str	r3, [r7, #12]
1709:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1710:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Get all the flags */
1711:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     temp_value = (uint32_t)(RTC->INITSTS & RTC_FLAGS_MASK);
 4139              		.loc 1 1711 32
 4140 000c 094B     		ldr	r3, .L235
 4141 000e DA68     		ldr	r2, [r3, #12]
 4142              		.loc 1 1711 16
 4143 0010 094B     		ldr	r3, .L235+4
 4144 0012 1340     		ands	r3, r3, r2
 4145 0014 FB60     		str	r3, [r7, #12]
1712:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1713:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Return the status of the flag */
1714:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     if ((temp_value & RTC_FLAG) != (uint32_t)RESET)
 4146              		.loc 1 1714 21
 4147 0016 FA68     		ldr	r2, [r7, #12]
 4148 0018 7B68     		ldr	r3, [r7, #4]
 4149 001a 1340     		ands	r3, r3, r2
 4150              		.loc 1 1714 8
 4151 001c 002B     		cmp	r3, #0
 4152 001e 01D0     		beq	.L233
1715:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
1716:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         return SET;
 4153              		.loc 1 1716 16
 4154 0020 0123     		movs	r3, #1
 4155 0022 00E0     		b	.L234
 4156              	.L233:
1717:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
1718:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     else
1719:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
1720:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         return RESET;
 4157              		.loc 1 1720 16
 4158 0024 0023     		movs	r3, #0
 4159              	.L234:
1721:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
1722:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 4160              		.loc 1 1722 1
 4161 0026 1846     		mov	r0, r3
 4162 0028 1437     		adds	r7, r7, #20
 4163              	.LCFI232:
 4164              		.cfi_def_cfa_offset 4
 4165 002a BD46     		mov	sp, r7
 4166              	.LCFI233:
 4167              		.cfi_def_cfa_register 13
 4168              		@ sp needed
 4169 002c 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 135


 4170              	.LCFI234:
 4171              		.cfi_restore 7
 4172              		.cfi_def_cfa_offset 0
 4173 0030 7047     		bx	lr
 4174              	.L236:
 4175 0032 00BF     		.align	2
 4176              	.L235:
 4177 0034 00280040 		.word	1073752064
 4178 0038 7FFF0100 		.word	130943
 4179              		.cfi_endproc
 4180              	.LFE180:
 4182              		.section	.text.RTC_Flag_Clear,"ax",%progbits
 4183              		.align	1
 4184              		.global	RTC_Flag_Clear
 4185              		.syntax unified
 4186              		.thumb
 4187              		.thumb_func
 4189              	RTC_Flag_Clear:
 4190              	.LFB181:
1723:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1724:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
1725:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Flag_Clear
1726:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Clears the RTC's flags.
1727:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_FLAG : RTC_FLAG specifies the RTC flag to clear.
1728:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_FLAG_TAM3F  : Tamp3 detect flag.
1729:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_FLAG_TAM2F  : Tamp2 detect flag.
1730:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_FLAG_TAM1F  : Tamp1 detect flag.
1731:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_FLAG_TISOVF  : Time Stamp Overflow flag.
1732:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_FLAG_TISF    : Time Stamp event flag.
1733:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_FLAG_WTF     : WakeUp Timer flag
1734:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_FLAG_ALBF    : Alarm B flag.
1735:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_FLAG_ALAF    : Alarm A flag.
1736:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_FLAG_RSYF    : Registers Synchronized flag.
1737:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none
1738:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
1739:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** void RTC_Flag_Clear(uint32_t RTC_FLAG)
1740:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 4191              		.loc 1 1740 1
 4192              		.cfi_startproc
 4193              		@ args = 0, pretend = 0, frame = 8
 4194              		@ frame_needed = 1, uses_anonymous_args = 0
 4195              		@ link register save eliminated.
 4196 0000 80B4     		push	{r7}
 4197              	.LCFI235:
 4198              		.cfi_def_cfa_offset 4
 4199              		.cfi_offset 7, -4
 4200 0002 83B0     		sub	sp, sp, #12
 4201              	.LCFI236:
 4202              		.cfi_def_cfa_offset 16
 4203 0004 00AF     		add	r7, sp, #0
 4204              	.LCFI237:
 4205              		.cfi_def_cfa_register 7
 4206 0006 7860     		str	r0, [r7, #4]
1741:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Clear the Flags in the RTC_INITSTS register */
1742:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->INITSTS = (uint32_t)((uint32_t)(~((RTC_FLAG | RTC_FLAG_INITM) & 0x0000FFFF) | (uint32_t)(R
 4207              		.loc 1 1742 72
 4208 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 136


 4209 000a 9BB2     		uxth	r3, r3
 4210 000c 43F08003 		orr	r3, r3, #128
 4211              		.loc 1 1742 42
 4212 0010 DA43     		mvns	r2, r3
 4213              		.loc 1 1742 102
 4214 0012 064B     		ldr	r3, .L238
 4215 0014 DB68     		ldr	r3, [r3, #12]
 4216              		.loc 1 1742 88
 4217 0016 03F08003 		and	r3, r3, #128
 4218              		.loc 1 1742 8
 4219 001a 0449     		ldr	r1, .L238
 4220              		.loc 1 1742 20
 4221 001c 1343     		orrs	r3, r3, r2
 4222              		.loc 1 1742 18
 4223 001e CB60     		str	r3, [r1, #12]
1743:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 4224              		.loc 1 1743 1
 4225 0020 00BF     		nop
 4226 0022 0C37     		adds	r7, r7, #12
 4227              	.LCFI238:
 4228              		.cfi_def_cfa_offset 4
 4229 0024 BD46     		mov	sp, r7
 4230              	.LCFI239:
 4231              		.cfi_def_cfa_register 13
 4232              		@ sp needed
 4233 0026 5DF8047B 		ldr	r7, [sp], #4
 4234              	.LCFI240:
 4235              		.cfi_restore 7
 4236              		.cfi_def_cfa_offset 0
 4237 002a 7047     		bx	lr
 4238              	.L239:
 4239              		.align	2
 4240              	.L238:
 4241 002c 00280040 		.word	1073752064
 4242              		.cfi_endproc
 4243              	.LFE181:
 4245              		.section	.text.RTC_Interrupt_Status_Get,"ax",%progbits
 4246              		.align	1
 4247              		.global	RTC_Interrupt_Status_Get
 4248              		.syntax unified
 4249              		.thumb
 4250              		.thumb_func
 4252              	RTC_Interrupt_Status_Get:
 4253              	.LFB182:
1744:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1745:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
1746:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Interrupt_Status_Get
1747:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Checks whether the specified RTC interrupt has occurred or not.
1748:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_INT : specifies the RTC interrupt source to check.
1749:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_INT_TAMP3 : Tamper3 interrupt.
1750:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_INT_TAMP2 : Tamper2 interrupt.
1751:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_INT_TAMP1 : Tamper1 interrupt.
1752:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_INT_TST   : Timestamp interrupt.
1753:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_INT_WUT   : WakeUp Timer interrupt.
1754:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_INT_ALRB  : Alarm B interrupt.
1755:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_INT_ALRA  : Alarm A interrupt.
1756:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  INTStatus
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 137


1757:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - SET   : 
1758:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RESET : 
1759:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
1760:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** INTStatus RTC_Interrupt_Status_Get(uint32_t RTC_INT)
1761:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 4254              		.loc 1 1761 1
 4255              		.cfi_startproc
 4256              		@ args = 0, pretend = 0, frame = 16
 4257              		@ frame_needed = 1, uses_anonymous_args = 0
 4258              		@ link register save eliminated.
 4259 0000 80B4     		push	{r7}
 4260              	.LCFI241:
 4261              		.cfi_def_cfa_offset 4
 4262              		.cfi_offset 7, -4
 4263 0002 85B0     		sub	sp, sp, #20
 4264              	.LCFI242:
 4265              		.cfi_def_cfa_offset 24
 4266 0004 00AF     		add	r7, sp, #0
 4267              	.LCFI243:
 4268              		.cfi_def_cfa_register 7
 4269 0006 7860     		str	r0, [r7, #4]
1762:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     uint32_t temp_value = 0, status_value = 0;
 4270              		.loc 1 1762 14
 4271 0008 0023     		movs	r3, #0
 4272 000a BB60     		str	r3, [r7, #8]
 4273              		.loc 1 1762 30
 4274 000c 0023     		movs	r3, #0
 4275 000e FB60     		str	r3, [r7, #12]
1763:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1764:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Get the Interrupt enable Status */
1765:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     if ((RTC_INT == RTC_INT_TAMP1) || (RTC_INT == RTC_INT_TAMP2)|| (RTC_INT == RTC_INT_TAMP3))
 4276              		.loc 1 1765 8
 4277 0010 7B68     		ldr	r3, [r7, #4]
 4278 0012 B3F5003F 		cmp	r3, #131072
 4279 0016 07D0     		beq	.L241
 4280              		.loc 1 1765 36 discriminator 1
 4281 0018 7B68     		ldr	r3, [r7, #4]
 4282 001a B3F5802F 		cmp	r3, #262144
 4283 001e 03D0     		beq	.L241
 4284              		.loc 1 1765 65 discriminator 2
 4285 0020 7B68     		ldr	r3, [r7, #4]
 4286 0022 B3F5002F 		cmp	r3, #524288
 4287 0026 0AD1     		bne	.L242
 4288              	.L241:
1766:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
1767:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         temp_value = ((RTC->TMPCFG & 0x00ff0000)>>16);
 4289              		.loc 1 1767 27
 4290 0028 124B     		ldr	r3, .L247
 4291 002a 1B6C     		ldr	r3, [r3, #64]
 4292              		.loc 1 1767 49
 4293 002c 1B0C     		lsrs	r3, r3, #16
 4294              		.loc 1 1767 20
 4295 002e DBB2     		uxtb	r3, r3
 4296 0030 BB60     		str	r3, [r7, #8]
1768:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         if (temp_value > 0)
 4297              		.loc 1 1768 12
 4298 0032 BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 138


 4299 0034 002B     		cmp	r3, #0
 4300 0036 07D0     		beq	.L244
1769:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         {
1770:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****             status_value = SET;
 4301              		.loc 1 1770 26
 4302 0038 0123     		movs	r3, #1
 4303 003a FB60     		str	r3, [r7, #12]
1768:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         if (temp_value > 0)
 4304              		.loc 1 1768 12
 4305 003c 04E0     		b	.L244
 4306              	.L242:
1771:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         }
1772:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
1773:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     else
1774:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
1775:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****        status_value = (uint32_t)((RTC->CTRL & RTC_INT));
 4307              		.loc 1 1775 38
 4308 003e 0D4B     		ldr	r3, .L247
 4309 0040 9B68     		ldr	r3, [r3, #8]
 4310              		.loc 1 1775 21
 4311 0042 7A68     		ldr	r2, [r7, #4]
 4312 0044 1340     		ands	r3, r3, r2
 4313 0046 FB60     		str	r3, [r7, #12]
 4314              	.L244:
1776:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
1777:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1778:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Get the Interrupt bit */
1779:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     temp_value = (uint32_t)((RTC->INITSTS & (uint32_t)(RTC_INT >> 4)));
 4315              		.loc 1 1779 33
 4316 0048 0A4B     		ldr	r3, .L247
 4317 004a DA68     		ldr	r2, [r3, #12]
 4318              		.loc 1 1779 64
 4319 004c 7B68     		ldr	r3, [r7, #4]
 4320 004e 1B09     		lsrs	r3, r3, #4
 4321              		.loc 1 1779 16
 4322 0050 1340     		ands	r3, r3, r2
 4323 0052 BB60     		str	r3, [r7, #8]
1780:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1781:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Get the status of the Interrupt */
1782:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     if ((status_value != (uint32_t)RESET) && ((temp_value & 0x0000FFFF) != (uint32_t)RESET))
 4324              		.loc 1 1782 8
 4325 0054 FB68     		ldr	r3, [r7, #12]
 4326 0056 002B     		cmp	r3, #0
 4327 0058 05D0     		beq	.L245
 4328              		.loc 1 1782 59 discriminator 1
 4329 005a BB68     		ldr	r3, [r7, #8]
 4330 005c 9BB2     		uxth	r3, r3
 4331              		.loc 1 1782 43 discriminator 1
 4332 005e 002B     		cmp	r3, #0
 4333 0060 01D0     		beq	.L245
1783:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
1784:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         return SET;
 4334              		.loc 1 1784 16
 4335 0062 0123     		movs	r3, #1
 4336 0064 00E0     		b	.L246
 4337              	.L245:
1785:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 139


1786:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     else
1787:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
1788:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         return RESET;
 4338              		.loc 1 1788 16
 4339 0066 0023     		movs	r3, #0
 4340              	.L246:
1789:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
1790:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 4341              		.loc 1 1790 1
 4342 0068 1846     		mov	r0, r3
 4343 006a 1437     		adds	r7, r7, #20
 4344              	.LCFI244:
 4345              		.cfi_def_cfa_offset 4
 4346 006c BD46     		mov	sp, r7
 4347              	.LCFI245:
 4348              		.cfi_def_cfa_register 13
 4349              		@ sp needed
 4350 006e 5DF8047B 		ldr	r7, [sp], #4
 4351              	.LCFI246:
 4352              		.cfi_restore 7
 4353              		.cfi_def_cfa_offset 0
 4354 0072 7047     		bx	lr
 4355              	.L248:
 4356              		.align	2
 4357              	.L247:
 4358 0074 00280040 		.word	1073752064
 4359              		.cfi_endproc
 4360              	.LFE182:
 4362              		.section	.text.RTC_Interrupt_Status_Clear,"ax",%progbits
 4363              		.align	1
 4364              		.global	RTC_Interrupt_Status_Clear
 4365              		.syntax unified
 4366              		.thumb
 4367              		.thumb_func
 4369              	RTC_Interrupt_Status_Clear:
 4370              	.LFB183:
1791:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1792:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
1793:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Interrupt_Status_Clear
1794:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Clears the RTC's interrupt pending bits.
1795:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_INT : specifies the RTC interrupt pending bit to clear.
1796:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_INT_TAMP3 : Tamper3 interrupt.
1797:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_INT_TAMP2 : Tamper2 interrupt.
1798:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_INT_TAMP1 : Tamper1 interrupt.
1799:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_INT_TST   : Timestamp interrupt.
1800:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_INT_WUT   : WakeUp Timer interrupt
1801:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_INT_ALRB  : Alarm B interrupt
1802:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_INT_ALRA  : Alarm A interrupt
1803:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none
1804:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
1805:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** void RTC_Interrupt_Status_Clear(uint32_t RTC_INT)
1806:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 4371              		.loc 1 1806 1
 4372              		.cfi_startproc
 4373              		@ args = 0, pretend = 0, frame = 16
 4374              		@ frame_needed = 1, uses_anonymous_args = 0
 4375              		@ link register save eliminated.
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 140


 4376 0000 80B4     		push	{r7}
 4377              	.LCFI247:
 4378              		.cfi_def_cfa_offset 4
 4379              		.cfi_offset 7, -4
 4380 0002 85B0     		sub	sp, sp, #20
 4381              	.LCFI248:
 4382              		.cfi_def_cfa_offset 24
 4383 0004 00AF     		add	r7, sp, #0
 4384              	.LCFI249:
 4385              		.cfi_def_cfa_register 7
 4386 0006 7860     		str	r0, [r7, #4]
1807:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     uint32_t temp_value = 0;
 4387              		.loc 1 1807 14
 4388 0008 0023     		movs	r3, #0
 4389 000a FB60     		str	r3, [r7, #12]
1808:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1809:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Get the RTC_INITSTS Interrupt pending bits mask */
1810:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     temp_value = (uint32_t)(RTC_INT >> 4);
 4390              		.loc 1 1810 16
 4391 000c 7B68     		ldr	r3, [r7, #4]
 4392 000e 1B09     		lsrs	r3, r3, #4
 4393 0010 FB60     		str	r3, [r7, #12]
1811:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1812:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Clear the interrupt pending bits in the RTC_INITSTS register */
1813:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->INITSTS = (uint32_t)((uint32_t)(~((temp_value | RTC_FLAG_INITM) & 0x0000FFFF) | (uint32_t)
 4394              		.loc 1 1813 74
 4395 0012 FB68     		ldr	r3, [r7, #12]
 4396 0014 9BB2     		uxth	r3, r3
 4397 0016 43F08003 		orr	r3, r3, #128
 4398              		.loc 1 1813 42
 4399 001a DA43     		mvns	r2, r3
 4400              		.loc 1 1813 104
 4401 001c 064B     		ldr	r3, .L250
 4402 001e DB68     		ldr	r3, [r3, #12]
 4403              		.loc 1 1813 90
 4404 0020 03F08003 		and	r3, r3, #128
 4405              		.loc 1 1813 8
 4406 0024 0449     		ldr	r1, .L250
 4407              		.loc 1 1813 20
 4408 0026 1343     		orrs	r3, r3, r2
 4409              		.loc 1 1813 18
 4410 0028 CB60     		str	r3, [r1, #12]
1814:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1815:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 4411              		.loc 1 1815 1
 4412 002a 00BF     		nop
 4413 002c 1437     		adds	r7, r7, #20
 4414              	.LCFI250:
 4415              		.cfi_def_cfa_offset 4
 4416 002e BD46     		mov	sp, r7
 4417              	.LCFI251:
 4418              		.cfi_def_cfa_register 13
 4419              		@ sp needed
 4420 0030 5DF8047B 		ldr	r7, [sp], #4
 4421              	.LCFI252:
 4422              		.cfi_restore 7
 4423              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 141


 4424 0034 7047     		bx	lr
 4425              	.L251:
 4426 0036 00BF     		.align	2
 4427              	.L250:
 4428 0038 00280040 		.word	1073752064
 4429              		.cfi_endproc
 4430              	.LFE183:
 4432              		.section	.text.RTC_Tamper_Trigger_Config,"ax",%progbits
 4433              		.align	1
 4434              		.global	RTC_Tamper_Trigger_Config
 4435              		.syntax unified
 4436              		.thumb
 4437              		.thumb_func
 4439              	RTC_Tamper_Trigger_Config:
 4440              	.LFB184:
1816:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1817:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
1818:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Tamper_Trigger_Config
1819:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Configures the select Tamper pin edge.
1820:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_Tamper: Selected tamper pin.
1821:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_TAMPER_1: Select Tamper 1.
1822:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_TAMPER_2: Select Tamper 2.
1823:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_TAMPER_3: Select Tamper 3.
1824:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_TamperTrigger: Specifies the trigger on the tamper pin that stimulates tamper event
1825:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_TamperTrigger_RisingEdge: Rising Edge of the tamper pin causes tamper event.
1826:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_TamperTrigger_FallingEdge: Falling Edge of the tamper pin causes tamper event.
1827:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_TamperTrigger_LowLevel: Low Level of the tamper pin causes tamper event.
1828:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_TamperTrigger_HighLevel: High Level of the tamper pin causes tamper event.
1829:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none
1830:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
1831:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** void RTC_Tamper_Trigger_Config(uint32_t RTC_Tamper, uint32_t RTC_TamperTrigger)
1832:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 4441              		.loc 1 1832 1
 4442              		.cfi_startproc
 4443              		@ args = 0, pretend = 0, frame = 8
 4444              		@ frame_needed = 1, uses_anonymous_args = 0
 4445              		@ link register save eliminated.
 4446 0000 80B4     		push	{r7}
 4447              	.LCFI253:
 4448              		.cfi_def_cfa_offset 4
 4449              		.cfi_offset 7, -4
 4450 0002 83B0     		sub	sp, sp, #12
 4451              	.LCFI254:
 4452              		.cfi_def_cfa_offset 16
 4453 0004 00AF     		add	r7, sp, #0
 4454              	.LCFI255:
 4455              		.cfi_def_cfa_register 7
 4456 0006 7860     		str	r0, [r7, #4]
 4457 0008 3960     		str	r1, [r7]
1833:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     if (RTC_Tamper == RTC_TAMPER_3)
 4458              		.loc 1 1833 8
 4459 000a 7B68     		ldr	r3, [r7, #4]
 4460 000c 202B     		cmp	r3, #32
 4461 000e 03D1     		bne	.L253
1834:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
1835:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         RTC_TamperTrigger <<= 5;
 4462              		.loc 1 1835 27
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 142


 4463 0010 3B68     		ldr	r3, [r7]
 4464 0012 5B01     		lsls	r3, r3, #5
 4465 0014 3B60     		str	r3, [r7]
 4466 0016 05E0     		b	.L254
 4467              	.L253:
1836:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }  
1837:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     else if (RTC_Tamper == RTC_TAMPER_2)
 4468              		.loc 1 1837 13
 4469 0018 7B68     		ldr	r3, [r7, #4]
 4470 001a 082B     		cmp	r3, #8
 4471 001c 02D1     		bne	.L254
1838:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
1839:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         RTC_TamperTrigger <<= 3;
 4472              		.loc 1 1839 27
 4473 001e 3B68     		ldr	r3, [r7]
 4474 0020 DB00     		lsls	r3, r3, #3
 4475 0022 3B60     		str	r3, [r7]
 4476              	.L254:
1840:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }     
1841:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Configure the RTC_TAMPCR register */
1842:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->TMPCFG |= (uint32_t)(RTC_Tamper | RTC_TamperTrigger);     
 4477              		.loc 1 1842 8
 4478 0024 064B     		ldr	r3, .L255
 4479 0026 1A6C     		ldr	r2, [r3, #64]
 4480              		.loc 1 1842 42
 4481 0028 7968     		ldr	r1, [r7, #4]
 4482 002a 3B68     		ldr	r3, [r7]
 4483 002c 0B43     		orrs	r3, r3, r1
 4484              		.loc 1 1842 8
 4485 002e 0449     		ldr	r1, .L255
 4486              		.loc 1 1842 17
 4487 0030 1343     		orrs	r3, r3, r2
 4488 0032 0B64     		str	r3, [r1, #64]
1843:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     
1844:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 4489              		.loc 1 1844 1
 4490 0034 00BF     		nop
 4491 0036 0C37     		adds	r7, r7, #12
 4492              	.LCFI256:
 4493              		.cfi_def_cfa_offset 4
 4494 0038 BD46     		mov	sp, r7
 4495              	.LCFI257:
 4496              		.cfi_def_cfa_register 13
 4497              		@ sp needed
 4498 003a 5DF8047B 		ldr	r7, [sp], #4
 4499              	.LCFI258:
 4500              		.cfi_restore 7
 4501              		.cfi_def_cfa_offset 0
 4502 003e 7047     		bx	lr
 4503              	.L256:
 4504              		.align	2
 4505              	.L255:
 4506 0040 00280040 		.word	1073752064
 4507              		.cfi_endproc
 4508              	.LFE184:
 4510              		.section	.text.RTC_Tamper_Enable,"ax",%progbits
 4511              		.align	1
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 143


 4512              		.global	RTC_Tamper_Enable
 4513              		.syntax unified
 4514              		.thumb
 4515              		.thumb_func
 4517              	RTC_Tamper_Enable:
 4518              	.LFB185:
1845:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1846:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
1847:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Tamper_Enable
1848:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Enable the Tamper detection.
1849:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_Tamper: Selected tamper pin.
1850:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_TAMPER_1: Select Tamper 1.
1851:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_TAMPER_2: Select Tamper 2.
1852:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_TAMPER_3: Select Tamper 3.
1853:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none
1854:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
1855:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** void RTC_Tamper_Enable(uint32_t RTC_Tamper)
1856:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 4519              		.loc 1 1856 1
 4520              		.cfi_startproc
 4521              		@ args = 0, pretend = 0, frame = 8
 4522              		@ frame_needed = 1, uses_anonymous_args = 0
 4523              		@ link register save eliminated.
 4524 0000 80B4     		push	{r7}
 4525              	.LCFI259:
 4526              		.cfi_def_cfa_offset 4
 4527              		.cfi_offset 7, -4
 4528 0002 83B0     		sub	sp, sp, #12
 4529              	.LCFI260:
 4530              		.cfi_def_cfa_offset 16
 4531 0004 00AF     		add	r7, sp, #0
 4532              	.LCFI261:
 4533              		.cfi_def_cfa_register 7
 4534 0006 7860     		str	r0, [r7, #4]
1857:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Enable the selected Tamper pin */
1858:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->TMPCFG |= (uint32_t)RTC_Tamper;
 4535              		.loc 1 1858 8
 4536 0008 054B     		ldr	r3, .L258
 4537 000a 1A6C     		ldr	r2, [r3, #64]
 4538 000c 0449     		ldr	r1, .L258
 4539              		.loc 1 1858 17
 4540 000e 7B68     		ldr	r3, [r7, #4]
 4541 0010 1343     		orrs	r3, r3, r2
 4542 0012 0B64     		str	r3, [r1, #64]
1859:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 4543              		.loc 1 1859 1
 4544 0014 00BF     		nop
 4545 0016 0C37     		adds	r7, r7, #12
 4546              	.LCFI262:
 4547              		.cfi_def_cfa_offset 4
 4548 0018 BD46     		mov	sp, r7
 4549              	.LCFI263:
 4550              		.cfi_def_cfa_register 13
 4551              		@ sp needed
 4552 001a 5DF8047B 		ldr	r7, [sp], #4
 4553              	.LCFI264:
 4554              		.cfi_restore 7
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 144


 4555              		.cfi_def_cfa_offset 0
 4556 001e 7047     		bx	lr
 4557              	.L259:
 4558              		.align	2
 4559              	.L258:
 4560 0020 00280040 		.word	1073752064
 4561              		.cfi_endproc
 4562              	.LFE185:
 4564              		.section	.text.RTC_Tamper_Disable,"ax",%progbits
 4565              		.align	1
 4566              		.global	RTC_Tamper_Disable
 4567              		.syntax unified
 4568              		.thumb
 4569              		.thumb_func
 4571              	RTC_Tamper_Disable:
 4572              	.LFB186:
1860:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1861:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
1862:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Tamper_Disable
1863:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Disable the Tamper detection.
1864:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_Tamper: Selected tamper pin.
1865:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_TAMPER_1: Select Tamper 1.
1866:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_TAMPER_2: Select Tamper 2.
1867:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_TAMPER_3: Select Tamper 3.
1868:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none
1869:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
1870:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** void RTC_Tamper_Disable(uint32_t RTC_Tamper)
1871:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 4573              		.loc 1 1871 1
 4574              		.cfi_startproc
 4575              		@ args = 0, pretend = 0, frame = 8
 4576              		@ frame_needed = 1, uses_anonymous_args = 0
 4577              		@ link register save eliminated.
 4578 0000 80B4     		push	{r7}
 4579              	.LCFI265:
 4580              		.cfi_def_cfa_offset 4
 4581              		.cfi_offset 7, -4
 4582 0002 83B0     		sub	sp, sp, #12
 4583              	.LCFI266:
 4584              		.cfi_def_cfa_offset 16
 4585 0004 00AF     		add	r7, sp, #0
 4586              	.LCFI267:
 4587              		.cfi_def_cfa_register 7
 4588 0006 7860     		str	r0, [r7, #4]
1872:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Disable the selected Tamper pin */
1873:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->TMPCFG &= (uint32_t)~RTC_Tamper;    
 4589              		.loc 1 1873 8
 4590 0008 064B     		ldr	r3, .L261
 4591 000a 1A6C     		ldr	r2, [r3, #64]
 4592              		.loc 1 1873 30
 4593 000c 7B68     		ldr	r3, [r7, #4]
 4594 000e DB43     		mvns	r3, r3
 4595              		.loc 1 1873 8
 4596 0010 0449     		ldr	r1, .L261
 4597              		.loc 1 1873 17
 4598 0012 1340     		ands	r3, r3, r2
 4599 0014 0B64     		str	r3, [r1, #64]
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 145


1874:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1875:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 4600              		.loc 1 1875 1
 4601 0016 00BF     		nop
 4602 0018 0C37     		adds	r7, r7, #12
 4603              	.LCFI268:
 4604              		.cfi_def_cfa_offset 4
 4605 001a BD46     		mov	sp, r7
 4606              	.LCFI269:
 4607              		.cfi_def_cfa_register 13
 4608              		@ sp needed
 4609 001c 5DF8047B 		ldr	r7, [sp], #4
 4610              	.LCFI270:
 4611              		.cfi_restore 7
 4612              		.cfi_def_cfa_offset 0
 4613 0020 7047     		bx	lr
 4614              	.L262:
 4615 0022 00BF     		.align	2
 4616              	.L261:
 4617 0024 00280040 		.word	1073752064
 4618              		.cfi_endproc
 4619              	.LFE186:
 4621              		.section	.text.RTC_Tamper_Filter_Config,"ax",%progbits
 4622              		.align	1
 4623              		.global	RTC_Tamper_Filter_Config
 4624              		.syntax unified
 4625              		.thumb
 4626              		.thumb_func
 4628              	RTC_Tamper_Filter_Config:
 4629              	.LFB187:
1876:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1877:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
1878:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Tamper_Filter_Config
1879:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Configures the Tampers Filter.
1880:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_TamperFilter: Selected tamper pin.
1881:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_TamperFilter_Disable: Tamper filter is disabled.
1882:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_TamperFilter_2Sample: Tamper is activated after 2 consecutive samples at the 
1883:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_TamperFilter_4Sample: Tamper is activated after 4 consecutive samples at the 
1884:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_TamperFilter_8Sample: Tamper is activated after 8 consecutive samples at the 
1885:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none
1886:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
1887:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** void RTC_Tamper_Filter_Config(uint32_t RTC_TamperFilter)
1888:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {   
 4630              		.loc 1 1888 1
 4631              		.cfi_startproc
 4632              		@ args = 0, pretend = 0, frame = 8
 4633              		@ frame_needed = 1, uses_anonymous_args = 0
 4634              		@ link register save eliminated.
 4635 0000 80B4     		push	{r7}
 4636              	.LCFI271:
 4637              		.cfi_def_cfa_offset 4
 4638              		.cfi_offset 7, -4
 4639 0002 83B0     		sub	sp, sp, #12
 4640              	.LCFI272:
 4641              		.cfi_def_cfa_offset 16
 4642 0004 00AF     		add	r7, sp, #0
 4643              	.LCFI273:
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 146


 4644              		.cfi_def_cfa_register 7
 4645 0006 7860     		str	r0, [r7, #4]
1889:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Clear TAMPFLT[1:0] bits in the RTC_TAMPCR register */
1890:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->TMPCFG &= (uint32_t)~(RTC_TMPCFG_TPFLT);
 4646              		.loc 1 1890 8
 4647 0008 084B     		ldr	r3, .L264
 4648 000a 1B6C     		ldr	r3, [r3, #64]
 4649 000c 074A     		ldr	r2, .L264
 4650              		.loc 1 1890 17
 4651 000e 23F4C053 		bic	r3, r3, #6144
 4652 0012 1364     		str	r3, [r2, #64]
1891:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1892:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Configure the RTC_TAMPCR register */
1893:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->TMPCFG |= (uint32_t)RTC_TamperFilter;
 4653              		.loc 1 1893 8
 4654 0014 054B     		ldr	r3, .L264
 4655 0016 1A6C     		ldr	r2, [r3, #64]
 4656 0018 0449     		ldr	r1, .L264
 4657              		.loc 1 1893 17
 4658 001a 7B68     		ldr	r3, [r7, #4]
 4659 001c 1343     		orrs	r3, r3, r2
 4660 001e 0B64     		str	r3, [r1, #64]
1894:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 4661              		.loc 1 1894 1
 4662 0020 00BF     		nop
 4663 0022 0C37     		adds	r7, r7, #12
 4664              	.LCFI274:
 4665              		.cfi_def_cfa_offset 4
 4666 0024 BD46     		mov	sp, r7
 4667              	.LCFI275:
 4668              		.cfi_def_cfa_register 13
 4669              		@ sp needed
 4670 0026 5DF8047B 		ldr	r7, [sp], #4
 4671              	.LCFI276:
 4672              		.cfi_restore 7
 4673              		.cfi_def_cfa_offset 0
 4674 002a 7047     		bx	lr
 4675              	.L265:
 4676              		.align	2
 4677              	.L264:
 4678 002c 00280040 		.word	1073752064
 4679              		.cfi_endproc
 4680              	.LFE187:
 4682              		.section	.text.RTC_Tamper_Sampling_Frequency_Config,"ax",%progbits
 4683              		.align	1
 4684              		.global	RTC_Tamper_Sampling_Frequency_Config
 4685              		.syntax unified
 4686              		.thumb
 4687              		.thumb_func
 4689              	RTC_Tamper_Sampling_Frequency_Config:
 4690              	.LFB188:
1895:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1896:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
1897:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Tamper_Sampling_Frequency_Config
1898:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Configures the Tampers Sampling Frequency.
1899:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_TamperSamplingFreq: Selected tamper pin.
1900:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_TamperSamplingFreq_RTCCLK_Div32768
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 147


1901:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_TamperSamplingFreq_RTCCLK_Div16384
1902:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_TamperSamplingFreq_RTCCLK_Div8192
1903:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_TamperSamplingFreq_RTCCLK_Div4096
1904:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_TamperSamplingFreq_RTCCLK_Div2048
1905:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_TamperSamplingFreq_RTCCLK_Div1024
1906:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_TamperSamplingFreq_RTCCLK_Div512
1907:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_TamperSamplingFreq_RTCCLK_Div256
1908:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none
1909:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
1910:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** void RTC_Tamper_Sampling_Frequency_Config(uint32_t RTC_TamperSamplingFreq)
1911:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** { 
 4691              		.loc 1 1911 1
 4692              		.cfi_startproc
 4693              		@ args = 0, pretend = 0, frame = 8
 4694              		@ frame_needed = 1, uses_anonymous_args = 0
 4695              		@ link register save eliminated.
 4696 0000 80B4     		push	{r7}
 4697              	.LCFI277:
 4698              		.cfi_def_cfa_offset 4
 4699              		.cfi_offset 7, -4
 4700 0002 83B0     		sub	sp, sp, #12
 4701              	.LCFI278:
 4702              		.cfi_def_cfa_offset 16
 4703 0004 00AF     		add	r7, sp, #0
 4704              	.LCFI279:
 4705              		.cfi_def_cfa_register 7
 4706 0006 7860     		str	r0, [r7, #4]
1912:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****   /* Clear TAMPFREQ[2:0] bits in the RTC_TAMPCR register */
1913:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****   RTC->TMPCFG &= (uint32_t)~(RTC_TAMPCR_TAMPFREQ);
 4707              		.loc 1 1913 6
 4708 0008 084B     		ldr	r3, .L267
 4709 000a 1B6C     		ldr	r3, [r3, #64]
 4710 000c 074A     		ldr	r2, .L267
 4711              		.loc 1 1913 15
 4712 000e 23F4E063 		bic	r3, r3, #1792
 4713 0012 1364     		str	r3, [r2, #64]
1914:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1915:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****   /* Configure the RTC_TAMPCR register */
1916:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****   RTC->TMPCFG |= (uint32_t)RTC_TamperSamplingFreq;
 4714              		.loc 1 1916 6
 4715 0014 054B     		ldr	r3, .L267
 4716 0016 1A6C     		ldr	r2, [r3, #64]
 4717 0018 0449     		ldr	r1, .L267
 4718              		.loc 1 1916 15
 4719 001a 7B68     		ldr	r3, [r7, #4]
 4720 001c 1343     		orrs	r3, r3, r2
 4721 001e 0B64     		str	r3, [r1, #64]
1917:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 4722              		.loc 1 1917 1
 4723 0020 00BF     		nop
 4724 0022 0C37     		adds	r7, r7, #12
 4725              	.LCFI280:
 4726              		.cfi_def_cfa_offset 4
 4727 0024 BD46     		mov	sp, r7
 4728              	.LCFI281:
 4729              		.cfi_def_cfa_register 13
 4730              		@ sp needed
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 148


 4731 0026 5DF8047B 		ldr	r7, [sp], #4
 4732              	.LCFI282:
 4733              		.cfi_restore 7
 4734              		.cfi_def_cfa_offset 0
 4735 002a 7047     		bx	lr
 4736              	.L268:
 4737              		.align	2
 4738              	.L267:
 4739 002c 00280040 		.word	1073752064
 4740              		.cfi_endproc
 4741              	.LFE188:
 4743              		.section	.text.RTC_Tamper_Pins_Precharge_Duration,"ax",%progbits
 4744              		.align	1
 4745              		.global	RTC_Tamper_Pins_Precharge_Duration
 4746              		.syntax unified
 4747              		.thumb
 4748              		.thumb_func
 4750              	RTC_Tamper_Pins_Precharge_Duration:
 4751              	.LFB189:
1918:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1919:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
1920:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Tamper_Pins_Precharge_Duration
1921:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Configures the Tampers Pins input Precharge Duration.
1922:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_TamperPrechargeDuration: Selected tamper pin.
1923:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_TamperPrechargeDuration_1RTCCLK
1924:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_TamperPrechargeDuration_2RTCCLK
1925:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_TamperPrechargeDuration_4RTCCLK
1926:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_TamperPrechargeDuration_8RTCCLK
1927:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none
1928:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
1929:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** void RTC_Tamper_Pins_Precharge_Duration(uint32_t RTC_TamperPrechargeDuration)
1930:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {   
 4752              		.loc 1 1930 1
 4753              		.cfi_startproc
 4754              		@ args = 0, pretend = 0, frame = 8
 4755              		@ frame_needed = 1, uses_anonymous_args = 0
 4756              		@ link register save eliminated.
 4757 0000 80B4     		push	{r7}
 4758              	.LCFI283:
 4759              		.cfi_def_cfa_offset 4
 4760              		.cfi_offset 7, -4
 4761 0002 83B0     		sub	sp, sp, #12
 4762              	.LCFI284:
 4763              		.cfi_def_cfa_offset 16
 4764 0004 00AF     		add	r7, sp, #0
 4765              	.LCFI285:
 4766              		.cfi_def_cfa_register 7
 4767 0006 7860     		str	r0, [r7, #4]
1931:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****   /* Clear TAMPPRCH[1:0] bits in the RTC_TAMPCR register */
1932:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****   RTC->TMPCFG &= (uint32_t)~(RTC_TMPCFG_TPPRCH);
 4768              		.loc 1 1932 6
 4769 0008 084B     		ldr	r3, .L270
 4770 000a 1B6C     		ldr	r3, [r3, #64]
 4771 000c 074A     		ldr	r2, .L270
 4772              		.loc 1 1932 15
 4773 000e 23F4C043 		bic	r3, r3, #24576
 4774 0012 1364     		str	r3, [r2, #64]
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 149


1933:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1934:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****   /* Configure the RTC_TAMPCR register */
1935:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****   RTC->TMPCFG |= (uint32_t)RTC_TamperPrechargeDuration;
 4775              		.loc 1 1935 6
 4776 0014 054B     		ldr	r3, .L270
 4777 0016 1A6C     		ldr	r2, [r3, #64]
 4778 0018 0449     		ldr	r1, .L270
 4779              		.loc 1 1935 15
 4780 001a 7B68     		ldr	r3, [r7, #4]
 4781 001c 1343     		orrs	r3, r3, r2
 4782 001e 0B64     		str	r3, [r1, #64]
1936:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 4783              		.loc 1 1936 1
 4784 0020 00BF     		nop
 4785 0022 0C37     		adds	r7, r7, #12
 4786              	.LCFI286:
 4787              		.cfi_def_cfa_offset 4
 4788 0024 BD46     		mov	sp, r7
 4789              	.LCFI287:
 4790              		.cfi_def_cfa_register 13
 4791              		@ sp needed
 4792 0026 5DF8047B 		ldr	r7, [sp], #4
 4793              	.LCFI288:
 4794              		.cfi_restore 7
 4795              		.cfi_def_cfa_offset 0
 4796 002a 7047     		bx	lr
 4797              	.L271:
 4798              		.align	2
 4799              	.L270:
 4800 002c 00280040 		.word	1073752064
 4801              		.cfi_endproc
 4802              	.LFE189:
 4804              		.section	.text.RTC_TimeStamp_On_Tamper_Detection_Enable,"ax",%progbits
 4805              		.align	1
 4806              		.global	RTC_TimeStamp_On_Tamper_Detection_Enable
 4807              		.syntax unified
 4808              		.thumb
 4809              		.thumb_func
 4811              	RTC_TimeStamp_On_Tamper_Detection_Enable:
 4812              	.LFB190:
1937:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1938:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
1939:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_TimeStamp_On_Tamper_Detection_Enable
1940:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     The timestamp is valid even the TSEN bit in tamper control register is reset.   
1941:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   none
1942:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none
1943:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
1944:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** void RTC_TimeStamp_On_Tamper_Detection_Enable(void)
1945:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {   
 4813              		.loc 1 1945 1
 4814              		.cfi_startproc
 4815              		@ args = 0, pretend = 0, frame = 0
 4816              		@ frame_needed = 1, uses_anonymous_args = 0
 4817              		@ link register save eliminated.
 4818 0000 80B4     		push	{r7}
 4819              	.LCFI289:
 4820              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 150


 4821              		.cfi_offset 7, -4
 4822 0002 00AF     		add	r7, sp, #0
 4823              	.LCFI290:
 4824              		.cfi_def_cfa_register 7
1946:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Save timestamp on tamper detection event */
1947:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->TMPCFG |= (uint32_t)RTC_TMPCFG_TPTS;
 4825              		.loc 1 1947 8
 4826 0004 054B     		ldr	r3, .L273
 4827 0006 1B6C     		ldr	r3, [r3, #64]
 4828 0008 044A     		ldr	r2, .L273
 4829              		.loc 1 1947 17
 4830 000a 43F08003 		orr	r3, r3, #128
 4831 000e 1364     		str	r3, [r2, #64]
1948:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 4832              		.loc 1 1948 1
 4833 0010 00BF     		nop
 4834 0012 BD46     		mov	sp, r7
 4835              	.LCFI291:
 4836              		.cfi_def_cfa_register 13
 4837              		@ sp needed
 4838 0014 5DF8047B 		ldr	r7, [sp], #4
 4839              	.LCFI292:
 4840              		.cfi_restore 7
 4841              		.cfi_def_cfa_offset 0
 4842 0018 7047     		bx	lr
 4843              	.L274:
 4844 001a 00BF     		.align	2
 4845              	.L273:
 4846 001c 00280040 		.word	1073752064
 4847              		.cfi_endproc
 4848              	.LFE190:
 4850              		.section	.text.RTC_TimeStamp_On_Tamper_Detection_Disable,"ax",%progbits
 4851              		.align	1
 4852              		.global	RTC_TimeStamp_On_Tamper_Detection_Disable
 4853              		.syntax unified
 4854              		.thumb
 4855              		.thumb_func
 4857              	RTC_TimeStamp_On_Tamper_Detection_Disable:
 4858              	.LFB191:
1949:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1950:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
1951:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_TimeStamp_On_Tamper_Detection_Disable
1952:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     The timestamp is invalid even the TSEN bit in tamper control register is reset.   
1953:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   none
1954:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none
1955:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
1956:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** void RTC_TimeStamp_On_Tamper_Detection_Disable(void)
1957:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {   
 4859              		.loc 1 1957 1
 4860              		.cfi_startproc
 4861              		@ args = 0, pretend = 0, frame = 0
 4862              		@ frame_needed = 1, uses_anonymous_args = 0
 4863              		@ link register save eliminated.
 4864 0000 80B4     		push	{r7}
 4865              	.LCFI293:
 4866              		.cfi_def_cfa_offset 4
 4867              		.cfi_offset 7, -4
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 151


 4868 0002 00AF     		add	r7, sp, #0
 4869              	.LCFI294:
 4870              		.cfi_def_cfa_register 7
1958:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Tamper detection does not cause a timestamp to be saved */
1959:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->TMPCFG &= (uint32_t)~RTC_TMPCFG_TPTS;    
 4871              		.loc 1 1959 8
 4872 0004 054B     		ldr	r3, .L276
 4873 0006 1B6C     		ldr	r3, [r3, #64]
 4874 0008 044A     		ldr	r2, .L276
 4875              		.loc 1 1959 17
 4876 000a 23F08003 		bic	r3, r3, #128
 4877 000e 1364     		str	r3, [r2, #64]
1960:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 4878              		.loc 1 1960 1
 4879 0010 00BF     		nop
 4880 0012 BD46     		mov	sp, r7
 4881              	.LCFI295:
 4882              		.cfi_def_cfa_register 13
 4883              		@ sp needed
 4884 0014 5DF8047B 		ldr	r7, [sp], #4
 4885              	.LCFI296:
 4886              		.cfi_restore 7
 4887              		.cfi_def_cfa_offset 0
 4888 0018 7047     		bx	lr
 4889              	.L277:
 4890 001a 00BF     		.align	2
 4891              	.L276:
 4892 001c 00280040 		.word	1073752064
 4893              		.cfi_endproc
 4894              	.LFE191:
 4896              		.section	.text.RTC_Tamper_Precharge_Enable,"ax",%progbits
 4897              		.align	1
 4898              		.global	RTC_Tamper_Precharge_Enable
 4899              		.syntax unified
 4900              		.thumb
 4901              		.thumb_func
 4903              	RTC_Tamper_Precharge_Enable:
 4904              	.LFB192:
1961:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1962:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
1963:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Tamper_Precharge_Enable
1964:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Enable the Precharge of Tamper pin. 
1965:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   none
1966:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none
1967:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
1968:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** void RTC_Tamper_Precharge_Enable(void)
1969:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {  
 4905              		.loc 1 1969 1
 4906              		.cfi_startproc
 4907              		@ args = 0, pretend = 0, frame = 0
 4908              		@ frame_needed = 1, uses_anonymous_args = 0
 4909              		@ link register save eliminated.
 4910 0000 80B4     		push	{r7}
 4911              	.LCFI297:
 4912              		.cfi_def_cfa_offset 4
 4913              		.cfi_offset 7, -4
 4914 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 152


 4915              	.LCFI298:
 4916              		.cfi_def_cfa_register 7
1970:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Enable precharge of the selected Tamper pin */
1971:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->TMPCFG &= (uint32_t)~RTC_TMPCFG_TPPUDIS; 
 4917              		.loc 1 1971 8
 4918 0004 054B     		ldr	r3, .L279
 4919 0006 1B6C     		ldr	r3, [r3, #64]
 4920 0008 044A     		ldr	r2, .L279
 4921              		.loc 1 1971 17
 4922 000a 23F40043 		bic	r3, r3, #32768
 4923 000e 1364     		str	r3, [r2, #64]
1972:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 4924              		.loc 1 1972 1
 4925 0010 00BF     		nop
 4926 0012 BD46     		mov	sp, r7
 4927              	.LCFI299:
 4928              		.cfi_def_cfa_register 13
 4929              		@ sp needed
 4930 0014 5DF8047B 		ldr	r7, [sp], #4
 4931              	.LCFI300:
 4932              		.cfi_restore 7
 4933              		.cfi_def_cfa_offset 0
 4934 0018 7047     		bx	lr
 4935              	.L280:
 4936 001a 00BF     		.align	2
 4937              	.L279:
 4938 001c 00280040 		.word	1073752064
 4939              		.cfi_endproc
 4940              	.LFE192:
 4942              		.section	.text.RTC_Tamper_Precharge_Disable,"ax",%progbits
 4943              		.align	1
 4944              		.global	RTC_Tamper_Precharge_Disable
 4945              		.syntax unified
 4946              		.thumb
 4947              		.thumb_func
 4949              	RTC_Tamper_Precharge_Disable:
 4950              	.LFB193:
1973:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1974:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
1975:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Tamper_Precharge_Disable
1976:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Enables or Disables the Precharge of Tamper pin. 
1977:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   none
1978:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none
1979:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
1980:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** void RTC_Tamper_Precharge_Disable(void)
1981:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {  
 4951              		.loc 1 1981 1
 4952              		.cfi_startproc
 4953              		@ args = 0, pretend = 0, frame = 0
 4954              		@ frame_needed = 1, uses_anonymous_args = 0
 4955              		@ link register save eliminated.
 4956 0000 80B4     		push	{r7}
 4957              	.LCFI301:
 4958              		.cfi_def_cfa_offset 4
 4959              		.cfi_offset 7, -4
 4960 0002 00AF     		add	r7, sp, #0
 4961              	.LCFI302:
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 153


 4962              		.cfi_def_cfa_register 7
1982:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Disable precharge of the selected Tamper pin */
1983:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->TMPCFG |= (uint32_t)RTC_TMPCFG_TPPUDIS;    
 4963              		.loc 1 1983 8
 4964 0004 054B     		ldr	r3, .L282
 4965 0006 1B6C     		ldr	r3, [r3, #64]
 4966 0008 044A     		ldr	r2, .L282
 4967              		.loc 1 1983 17
 4968 000a 43F40043 		orr	r3, r3, #32768
 4969 000e 1364     		str	r3, [r2, #64]
1984:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 4970              		.loc 1 1984 1
 4971 0010 00BF     		nop
 4972 0012 BD46     		mov	sp, r7
 4973              	.LCFI303:
 4974              		.cfi_def_cfa_register 13
 4975              		@ sp needed
 4976 0014 5DF8047B 		ldr	r7, [sp], #4
 4977              	.LCFI304:
 4978              		.cfi_restore 7
 4979              		.cfi_def_cfa_offset 0
 4980 0018 7047     		bx	lr
 4981              	.L283:
 4982 001a 00BF     		.align	2
 4983              	.L282:
 4984 001c 00280040 		.word	1073752064
 4985              		.cfi_endproc
 4986              	.LFE193:
 4988              		.section	.text.RTC_Tamper_Interrput_Enable,"ax",%progbits
 4989              		.align	1
 4990              		.global	RTC_Tamper_Interrput_Enable
 4991              		.syntax unified
 4992              		.thumb
 4993              		.thumb_func
 4995              	RTC_Tamper_Interrput_Enable:
 4996              	.LFB194:
1985:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
1986:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
1987:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Tamper_Interrput_Enable
1988:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Enable the Tamper interrupt.
1989:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   TAMPx_INT: Selected tamper number.
1990:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_TAMPER1_INT
1991:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_TAMPER2_INT
1992:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_TAMPER3_INT
1993:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none
1994:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
1995:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** void RTC_Tamper_Interrput_Enable(uint32_t TAMPx_INT)
1996:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 4997              		.loc 1 1996 1
 4998              		.cfi_startproc
 4999              		@ args = 0, pretend = 0, frame = 8
 5000              		@ frame_needed = 1, uses_anonymous_args = 0
 5001              		@ link register save eliminated.
 5002 0000 80B4     		push	{r7}
 5003              	.LCFI305:
 5004              		.cfi_def_cfa_offset 4
 5005              		.cfi_offset 7, -4
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 154


 5006 0002 83B0     		sub	sp, sp, #12
 5007              	.LCFI306:
 5008              		.cfi_def_cfa_offset 16
 5009 0004 00AF     		add	r7, sp, #0
 5010              	.LCFI307:
 5011              		.cfi_def_cfa_register 7
 5012 0006 7860     		str	r0, [r7, #4]
1997:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Enable the selected Tamper pin */
1998:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->TMPCFG |= (uint32_t)TAMPx_INT;
 5013              		.loc 1 1998 8
 5014 0008 054B     		ldr	r3, .L285
 5015 000a 1A6C     		ldr	r2, [r3, #64]
 5016 000c 0449     		ldr	r1, .L285
 5017              		.loc 1 1998 17
 5018 000e 7B68     		ldr	r3, [r7, #4]
 5019 0010 1343     		orrs	r3, r3, r2
 5020 0012 0B64     		str	r3, [r1, #64]
1999:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 5021              		.loc 1 1999 1
 5022 0014 00BF     		nop
 5023 0016 0C37     		adds	r7, r7, #12
 5024              	.LCFI308:
 5025              		.cfi_def_cfa_offset 4
 5026 0018 BD46     		mov	sp, r7
 5027              	.LCFI309:
 5028              		.cfi_def_cfa_register 13
 5029              		@ sp needed
 5030 001a 5DF8047B 		ldr	r7, [sp], #4
 5031              	.LCFI310:
 5032              		.cfi_restore 7
 5033              		.cfi_def_cfa_offset 0
 5034 001e 7047     		bx	lr
 5035              	.L286:
 5036              		.align	2
 5037              	.L285:
 5038 0020 00280040 		.word	1073752064
 5039              		.cfi_endproc
 5040              	.LFE194:
 5042              		.section	.text.RTC_Tamper_Interrput_Disable,"ax",%progbits
 5043              		.align	1
 5044              		.global	RTC_Tamper_Interrput_Disable
 5045              		.syntax unified
 5046              		.thumb
 5047              		.thumb_func
 5049              	RTC_Tamper_Interrput_Disable:
 5050              	.LFB195:
2000:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
2001:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
2002:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Tamper_Interrput_Disable
2003:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Disable the Tamper interrupt.
2004:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   TAMPx_INT: Selected tamper number.
2005:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_TAMPER1_INT
2006:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_TAMPER2_INT
2007:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            - RTC_TAMPER3_INT
2008:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none
2009:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
2010:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** void RTC_Tamper_Interrput_Disable(uint32_t TAMPx_INT)
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 155


2011:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 5051              		.loc 1 2011 1
 5052              		.cfi_startproc
 5053              		@ args = 0, pretend = 0, frame = 8
 5054              		@ frame_needed = 1, uses_anonymous_args = 0
 5055              		@ link register save eliminated.
 5056 0000 80B4     		push	{r7}
 5057              	.LCFI311:
 5058              		.cfi_def_cfa_offset 4
 5059              		.cfi_offset 7, -4
 5060 0002 83B0     		sub	sp, sp, #12
 5061              	.LCFI312:
 5062              		.cfi_def_cfa_offset 16
 5063 0004 00AF     		add	r7, sp, #0
 5064              	.LCFI313:
 5065              		.cfi_def_cfa_register 7
 5066 0006 7860     		str	r0, [r7, #4]
2012:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Disable the selected Tamper pin */
2013:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->TMPCFG &= (uint32_t)~TAMPx_INT;
 5067              		.loc 1 2013 8
 5068 0008 064B     		ldr	r3, .L288
 5069 000a 1A6C     		ldr	r2, [r3, #64]
 5070              		.loc 1 2013 30
 5071 000c 7B68     		ldr	r3, [r7, #4]
 5072 000e DB43     		mvns	r3, r3
 5073              		.loc 1 2013 8
 5074 0010 0449     		ldr	r1, .L288
 5075              		.loc 1 2013 17
 5076 0012 1340     		ands	r3, r3, r2
 5077 0014 0B64     		str	r3, [r1, #64]
2014:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 5078              		.loc 1 2014 1
 5079 0016 00BF     		nop
 5080 0018 0C37     		adds	r7, r7, #12
 5081              	.LCFI314:
 5082              		.cfi_def_cfa_offset 4
 5083 001a BD46     		mov	sp, r7
 5084              	.LCFI315:
 5085              		.cfi_def_cfa_register 13
 5086              		@ sp needed
 5087 001c 5DF8047B 		ldr	r7, [sp], #4
 5088              	.LCFI316:
 5089              		.cfi_restore 7
 5090              		.cfi_def_cfa_offset 0
 5091 0020 7047     		bx	lr
 5092              	.L289:
 5093 0022 00BF     		.align	2
 5094              	.L288:
 5095 0024 00280040 		.word	1073752064
 5096              		.cfi_endproc
 5097              	.LFE195:
 5099              		.section	.text.RTC_Tamper_Backup_Register_Clear_Disable,"ax",%progbits
 5100              		.align	1
 5101              		.global	RTC_Tamper_Backup_Register_Clear_Disable
 5102              		.syntax unified
 5103              		.thumb
 5104              		.thumb_func
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 156


 5106              	RTC_Tamper_Backup_Register_Clear_Disable:
 5107              	.LFB196:
2015:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
2016:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
2017:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Tamper_Backup_Register_Clear_Disable
2018:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Enable the Tamper do not clear backup register.
2019:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_Tamper: Selected tamper event.
2020:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_TAMPER1_NOE: Select Tamper 1.
2021:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_TAMPER2_NOE: Select Tamper 2.
2022:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_TAMPER3_NOE: Select Tamper 3.
2023:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none
2024:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
2025:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** void RTC_Tamper_Backup_Register_Clear_Disable(uint32_t RTC_TAMPERx_NOE)
2026:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 5108              		.loc 1 2026 1
 5109              		.cfi_startproc
 5110              		@ args = 0, pretend = 0, frame = 8
 5111              		@ frame_needed = 1, uses_anonymous_args = 0
 5112              		@ link register save eliminated.
 5113 0000 80B4     		push	{r7}
 5114              	.LCFI317:
 5115              		.cfi_def_cfa_offset 4
 5116              		.cfi_offset 7, -4
 5117 0002 83B0     		sub	sp, sp, #12
 5118              	.LCFI318:
 5119              		.cfi_def_cfa_offset 16
 5120 0004 00AF     		add	r7, sp, #0
 5121              	.LCFI319:
 5122              		.cfi_def_cfa_register 7
 5123 0006 7860     		str	r0, [r7, #4]
2027:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Enable Tamper clear backup register */
2028:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->TMPCFG |= (uint32_t)RTC_TAMPERx_NOE;
 5124              		.loc 1 2028 8
 5125 0008 054B     		ldr	r3, .L291
 5126 000a 1A6C     		ldr	r2, [r3, #64]
 5127 000c 0449     		ldr	r1, .L291
 5128              		.loc 1 2028 17
 5129 000e 7B68     		ldr	r3, [r7, #4]
 5130 0010 1343     		orrs	r3, r3, r2
 5131 0012 0B64     		str	r3, [r1, #64]
2029:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 5132              		.loc 1 2029 1
 5133 0014 00BF     		nop
 5134 0016 0C37     		adds	r7, r7, #12
 5135              	.LCFI320:
 5136              		.cfi_def_cfa_offset 4
 5137 0018 BD46     		mov	sp, r7
 5138              	.LCFI321:
 5139              		.cfi_def_cfa_register 13
 5140              		@ sp needed
 5141 001a 5DF8047B 		ldr	r7, [sp], #4
 5142              	.LCFI322:
 5143              		.cfi_restore 7
 5144              		.cfi_def_cfa_offset 0
 5145 001e 7047     		bx	lr
 5146              	.L292:
 5147              		.align	2
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 157


 5148              	.L291:
 5149 0020 00280040 		.word	1073752064
 5150              		.cfi_endproc
 5151              	.LFE196:
 5153              		.section	.text.RTC_Tamper_Backup_Register_Clear_Enable,"ax",%progbits
 5154              		.align	1
 5155              		.global	RTC_Tamper_Backup_Register_Clear_Enable
 5156              		.syntax unified
 5157              		.thumb
 5158              		.thumb_func
 5160              	RTC_Tamper_Backup_Register_Clear_Enable:
 5161              	.LFB197:
2030:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
2031:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
2032:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Tamper_Backup_Register_Clear_Enable
2033:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Enable the Tamper clear backup register.
2034:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   RTC_Tamper: Selected tamper event.
2035:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_TAMPER1_NOE: Select Tamper 1.
2036:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_TAMPER2_NOE: Select Tamper 2.
2037:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\          - RTC_TAMPER3_NOE: Select Tamper 3.
2038:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none
2039:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
2040:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** void RTC_Tamper_Backup_Register_Clear_Enable(uint32_t RTC_TAMPERx_NOE)
2041:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 5162              		.loc 1 2041 1
 5163              		.cfi_startproc
 5164              		@ args = 0, pretend = 0, frame = 8
 5165              		@ frame_needed = 1, uses_anonymous_args = 0
 5166              		@ link register save eliminated.
 5167 0000 80B4     		push	{r7}
 5168              	.LCFI323:
 5169              		.cfi_def_cfa_offset 4
 5170              		.cfi_offset 7, -4
 5171 0002 83B0     		sub	sp, sp, #12
 5172              	.LCFI324:
 5173              		.cfi_def_cfa_offset 16
 5174 0004 00AF     		add	r7, sp, #0
 5175              	.LCFI325:
 5176              		.cfi_def_cfa_register 7
 5177 0006 7860     		str	r0, [r7, #4]
2042:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Enable Tamper clear backup register */
2043:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     RTC->TMPCFG &= (uint32_t)~RTC_TAMPERx_NOE;
 5178              		.loc 1 2043 8
 5179 0008 064B     		ldr	r3, .L294
 5180 000a 1A6C     		ldr	r2, [r3, #64]
 5181              		.loc 1 2043 30
 5182 000c 7B68     		ldr	r3, [r7, #4]
 5183 000e DB43     		mvns	r3, r3
 5184              		.loc 1 2043 8
 5185 0010 0449     		ldr	r1, .L294
 5186              		.loc 1 2043 17
 5187 0012 1340     		ands	r3, r3, r2
 5188 0014 0B64     		str	r3, [r1, #64]
2044:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 5189              		.loc 1 2044 1
 5190 0016 00BF     		nop
 5191 0018 0C37     		adds	r7, r7, #12
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 158


 5192              	.LCFI326:
 5193              		.cfi_def_cfa_offset 4
 5194 001a BD46     		mov	sp, r7
 5195              	.LCFI327:
 5196              		.cfi_def_cfa_register 13
 5197              		@ sp needed
 5198 001c 5DF8047B 		ldr	r7, [sp], #4
 5199              	.LCFI328:
 5200              		.cfi_restore 7
 5201              		.cfi_def_cfa_offset 0
 5202 0020 7047     		bx	lr
 5203              	.L295:
 5204 0022 00BF     		.align	2
 5205              	.L294:
 5206 0024 00280040 		.word	1073752064
 5207              		.cfi_endproc
 5208              	.LFE197:
 5210              		.section	.text.RTC_Backup_Register_Write,"ax",%progbits
 5211              		.align	1
 5212              		.global	RTC_Backup_Register_Write
 5213              		.syntax unified
 5214              		.thumb
 5215              		.thumb_func
 5217              	RTC_Backup_Register_Write:
 5218              	.LFB198:
2045:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
2046:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
2047:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Backup_Registers_Write
2048:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Write a data in a specified RTC Backup data register.
2049:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   register_num: Selected register number.
2050:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            RTC_BACKUP_REGISTER_1
2051:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            RTC_BACKUP_REGISTER_2
2052:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            RTC_BACKUP_REGISTER_3
2053:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            RTC_BACKUP_REGISTER_4
2054:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            RTC_BACKUP_REGISTER_5
2055:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            RTC_BACKUP_REGISTER_6
2056:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            RTC_BACKUP_REGISTER_7
2057:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            RTC_BACKUP_REGISTER_8
2058:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            RTC_BACKUP_REGISTER_9
2059:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            RTC_BACKUP_REGISTER_10
2060:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            RTC_BACKUP_REGISTER_11
2061:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            RTC_BACKUP_REGISTER_12
2062:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            RTC_BACKUP_REGISTER_13
2063:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            RTC_BACKUP_REGISTER_14
2064:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            RTC_BACKUP_REGISTER_15
2065:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            RTC_BACKUP_REGISTER_16
2066:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            RTC_BACKUP_REGISTER_17
2067:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            RTC_BACKUP_REGISTER_18
2068:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            RTC_BACKUP_REGISTER_19
2069:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            RTC_BACKUP_REGISTER_20
2070:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   Data: Data write.
2071:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  none
2072:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
2073:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** void RTC_Backup_Register_Write(RTC_BACKUP_REGISTER register_num, uint32_t Data)
2074:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 5219              		.loc 1 2074 1
 5220              		.cfi_startproc
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 159


 5221              		@ args = 0, pretend = 0, frame = 16
 5222              		@ frame_needed = 1, uses_anonymous_args = 0
 5223              		@ link register save eliminated.
 5224 0000 80B4     		push	{r7}
 5225              	.LCFI329:
 5226              		.cfi_def_cfa_offset 4
 5227              		.cfi_offset 7, -4
 5228 0002 85B0     		sub	sp, sp, #20
 5229              	.LCFI330:
 5230              		.cfi_def_cfa_offset 24
 5231 0004 00AF     		add	r7, sp, #0
 5232              	.LCFI331:
 5233              		.cfi_def_cfa_register 7
 5234 0006 0346     		mov	r3, r0
 5235 0008 3960     		str	r1, [r7]
 5236 000a FB71     		strb	r3, [r7, #7]
2075:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     volatile uint32_t *temp_value;
2076:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
2077:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     temp_value = &RTC->BKP1R;
 5237              		.loc 1 2077 16
 5238 000c 094B     		ldr	r3, .L297
 5239 000e FB60     		str	r3, [r7, #12]
2078:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     temp_value += (register_num-1);
 5240              		.loc 1 2078 16
 5241 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5242 0012 03F18043 		add	r3, r3, #1073741824
 5243 0016 013B     		subs	r3, r3, #1
 5244 0018 9B00     		lsls	r3, r3, #2
 5245 001a FA68     		ldr	r2, [r7, #12]
 5246 001c 1344     		add	r3, r3, r2
 5247 001e FB60     		str	r3, [r7, #12]
2079:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
2080:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Write register */
2081:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     *(__IO uint32_t *)temp_value = (uint32_t)Data;
 5248              		.loc 1 2081 34
 5249 0020 FB68     		ldr	r3, [r7, #12]
 5250 0022 3A68     		ldr	r2, [r7]
 5251 0024 1A60     		str	r2, [r3]
2082:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 5252              		.loc 1 2082 1
 5253 0026 00BF     		nop
 5254 0028 1437     		adds	r7, r7, #20
 5255              	.LCFI332:
 5256              		.cfi_def_cfa_offset 4
 5257 002a BD46     		mov	sp, r7
 5258              	.LCFI333:
 5259              		.cfi_def_cfa_register 13
 5260              		@ sp needed
 5261 002c 5DF8047B 		ldr	r7, [sp], #4
 5262              	.LCFI334:
 5263              		.cfi_restore 7
 5264              		.cfi_def_cfa_offset 0
 5265 0030 7047     		bx	lr
 5266              	.L298:
 5267 0032 00BF     		.align	2
 5268              	.L297:
 5269 0034 50280040 		.word	1073752144
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 160


 5270              		.cfi_endproc
 5271              	.LFE198:
 5273              		.section	.text.RTC_Backup_Register_Read,"ax",%progbits
 5274              		.align	1
 5275              		.global	RTC_Backup_Register_Read
 5276              		.syntax unified
 5277              		.thumb
 5278              		.thumb_func
 5280              	RTC_Backup_Register_Read:
 5281              	.LFB199:
2083:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
2084:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
2085:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Backup_Register_Read
2086:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Read a data in a specified RTC Backup data register.
2087:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   register_num: Selected register number.
2088:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            RTC_BACKUP_REGISTER_1
2089:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            RTC_BACKUP_REGISTER_2
2090:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            RTC_BACKUP_REGISTER_3
2091:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            RTC_BACKUP_REGISTER_4
2092:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            RTC_BACKUP_REGISTER_5
2093:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            RTC_BACKUP_REGISTER_6
2094:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            RTC_BACKUP_REGISTER_7
2095:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            RTC_BACKUP_REGISTER_8
2096:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            RTC_BACKUP_REGISTER_9
2097:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            RTC_BACKUP_REGISTER_10
2098:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            RTC_BACKUP_REGISTER_11
2099:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            RTC_BACKUP_REGISTER_12
2100:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            RTC_BACKUP_REGISTER_13
2101:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            RTC_BACKUP_REGISTER_14
2102:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            RTC_BACKUP_REGISTER_15
2103:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            RTC_BACKUP_REGISTER_16
2104:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            RTC_BACKUP_REGISTER_17
2105:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            RTC_BACKUP_REGISTER_18
2106:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            RTC_BACKUP_REGISTER_19
2107:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\            RTC_BACKUP_REGISTER_20
2108:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  Register data
2109:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
2110:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** uint32_t RTC_Backup_Register_Read(RTC_BACKUP_REGISTER register_num)
2111:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 5282              		.loc 1 2111 1
 5283              		.cfi_startproc
 5284              		@ args = 0, pretend = 0, frame = 16
 5285              		@ frame_needed = 1, uses_anonymous_args = 0
 5286              		@ link register save eliminated.
 5287 0000 80B4     		push	{r7}
 5288              	.LCFI335:
 5289              		.cfi_def_cfa_offset 4
 5290              		.cfi_offset 7, -4
 5291 0002 85B0     		sub	sp, sp, #20
 5292              	.LCFI336:
 5293              		.cfi_def_cfa_offset 24
 5294 0004 00AF     		add	r7, sp, #0
 5295              	.LCFI337:
 5296              		.cfi_def_cfa_register 7
 5297 0006 0346     		mov	r3, r0
 5298 0008 FB71     		strb	r3, [r7, #7]
2112:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     volatile uint32_t *temp_value;
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 161


2113:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
2114:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     temp_value = &RTC->BKP1R;
 5299              		.loc 1 2114 16
 5300 000a 094B     		ldr	r3, .L301
 5301 000c FB60     		str	r3, [r7, #12]
2115:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     temp_value += (register_num-1);
 5302              		.loc 1 2115 16
 5303 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5304 0010 03F18043 		add	r3, r3, #1073741824
 5305 0014 013B     		subs	r3, r3, #1
 5306 0016 9B00     		lsls	r3, r3, #2
 5307 0018 FA68     		ldr	r2, [r7, #12]
 5308 001a 1344     		add	r3, r3, r2
 5309 001c FB60     		str	r3, [r7, #12]
2116:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
2117:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     /* Read register */
2118:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     return (*(__IO uint32_t *)temp_value);
 5310              		.loc 1 2118 13
 5311 001e FB68     		ldr	r3, [r7, #12]
 5312 0020 1B68     		ldr	r3, [r3]
2119:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 5313              		.loc 1 2119 1
 5314 0022 1846     		mov	r0, r3
 5315 0024 1437     		adds	r7, r7, #20
 5316              	.LCFI338:
 5317              		.cfi_def_cfa_offset 4
 5318 0026 BD46     		mov	sp, r7
 5319              	.LCFI339:
 5320              		.cfi_def_cfa_register 13
 5321              		@ sp needed
 5322 0028 5DF8047B 		ldr	r7, [sp], #4
 5323              	.LCFI340:
 5324              		.cfi_restore 7
 5325              		.cfi_def_cfa_offset 0
 5326 002c 7047     		bx	lr
 5327              	.L302:
 5328 002e 00BF     		.align	2
 5329              	.L301:
 5330 0030 50280040 		.word	1073752144
 5331              		.cfi_endproc
 5332              	.LFE199:
 5334              		.section	.text.RTC_Byte_To_Bcd2,"ax",%progbits
 5335              		.align	1
 5336              		.syntax unified
 5337              		.thumb
 5338              		.thumb_func
 5340              	RTC_Byte_To_Bcd2:
 5341              	.LFB200:
2120:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
2121:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
2122:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Byte_To_Bcd2
2123:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Converts a 2 digit decimal to BCD format.
2124:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   value : Value Byte to be converted.
2125:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  Converted byte
2126:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
2127:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** static uint8_t RTC_Byte_To_Bcd2(uint8_t value)
2128:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 162


 5342              		.loc 1 2128 1
 5343              		.cfi_startproc
 5344              		@ args = 0, pretend = 0, frame = 16
 5345              		@ frame_needed = 1, uses_anonymous_args = 0
 5346              		@ link register save eliminated.
 5347 0000 80B4     		push	{r7}
 5348              	.LCFI341:
 5349              		.cfi_def_cfa_offset 4
 5350              		.cfi_offset 7, -4
 5351 0002 85B0     		sub	sp, sp, #20
 5352              	.LCFI342:
 5353              		.cfi_def_cfa_offset 24
 5354 0004 00AF     		add	r7, sp, #0
 5355              	.LCFI343:
 5356              		.cfi_def_cfa_register 7
 5357 0006 0346     		mov	r3, r0
 5358 0008 FB71     		strb	r3, [r7, #7]
2129:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     uint8_t temp_value = 0;
 5359              		.loc 1 2129 13
 5360 000a 0023     		movs	r3, #0
 5361 000c FB73     		strb	r3, [r7, #15]
2130:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
2131:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     while (value >= 10)
 5362              		.loc 1 2131 11
 5363 000e 05E0     		b	.L304
 5364              	.L305:
2132:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
2133:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         temp_value++;
 5365              		.loc 1 2133 19
 5366 0010 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5367 0012 0133     		adds	r3, r3, #1
 5368 0014 FB73     		strb	r3, [r7, #15]
2134:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****         value -= 10;
 5369              		.loc 1 2134 15
 5370 0016 FB79     		ldrb	r3, [r7, #7]
 5371 0018 0A3B     		subs	r3, r3, #10
 5372 001a FB71     		strb	r3, [r7, #7]
 5373              	.L304:
2131:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     {
 5374              		.loc 1 2131 18
 5375 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5376 001e 092B     		cmp	r3, #9
 5377 0020 F6D8     		bhi	.L305
2135:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     }
2136:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     return ((uint8_t)(temp_value << 4) | value);
 5378              		.loc 1 2136 13
 5379 0022 FB7B     		ldrb	r3, [r7, #15]
 5380 0024 1B01     		lsls	r3, r3, #4
 5381 0026 DAB2     		uxtb	r2, r3
 5382              		.loc 1 2136 40
 5383 0028 FB79     		ldrb	r3, [r7, #7]
 5384 002a 1343     		orrs	r3, r3, r2
 5385 002c DBB2     		uxtb	r3, r3
2137:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 5386              		.loc 1 2137 1
 5387 002e 1846     		mov	r0, r3
 5388 0030 1437     		adds	r7, r7, #20
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 163


 5389              	.LCFI344:
 5390              		.cfi_def_cfa_offset 4
 5391 0032 BD46     		mov	sp, r7
 5392              	.LCFI345:
 5393              		.cfi_def_cfa_register 13
 5394              		@ sp needed
 5395 0034 5DF8047B 		ldr	r7, [sp], #4
 5396              	.LCFI346:
 5397              		.cfi_restore 7
 5398              		.cfi_def_cfa_offset 0
 5399 0038 7047     		bx	lr
 5400              		.cfi_endproc
 5401              	.LFE200:
 5403              		.section	.text.RTC_Bcd2_To_Byte,"ax",%progbits
 5404              		.align	1
 5405              		.syntax unified
 5406              		.thumb
 5407              		.thumb_func
 5409              	RTC_Bcd2_To_Byte:
 5410              	.LFB201:
2138:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** 
2139:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** /**
2140:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\name    RTC_Bcd2_To_Byte
2141:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\fun     Convert from 2 digit BCD to Binary.
2142:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\param   Value : Value BCD value to be converted.
2143:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** *\*\return  Converted byte
2144:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** **/
2145:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** static uint8_t RTC_Bcd2_To_Byte(uint8_t value)
2146:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** {
 5411              		.loc 1 2146 1
 5412              		.cfi_startproc
 5413              		@ args = 0, pretend = 0, frame = 16
 5414              		@ frame_needed = 1, uses_anonymous_args = 0
 5415              		@ link register save eliminated.
 5416 0000 80B4     		push	{r7}
 5417              	.LCFI347:
 5418              		.cfi_def_cfa_offset 4
 5419              		.cfi_offset 7, -4
 5420 0002 85B0     		sub	sp, sp, #20
 5421              	.LCFI348:
 5422              		.cfi_def_cfa_offset 24
 5423 0004 00AF     		add	r7, sp, #0
 5424              	.LCFI349:
 5425              		.cfi_def_cfa_register 7
 5426 0006 0346     		mov	r3, r0
 5427 0008 FB71     		strb	r3, [r7, #7]
2147:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     uint8_t temp_value = 0;
 5428              		.loc 1 2147 13
 5429 000a 0023     		movs	r3, #0
 5430 000c FB73     		strb	r3, [r7, #15]
2148:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     temp_value = ((uint8_t)(value & (uint8_t)0xF0) >> (uint8_t)0x4) * 10;
 5431              		.loc 1 2148 52
 5432 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5433 0010 1B09     		lsrs	r3, r3, #4
 5434 0012 DBB2     		uxtb	r3, r3
 5435              		.loc 1 2148 16
 5436 0014 1A46     		mov	r2, r3
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 164


 5437 0016 9200     		lsls	r2, r2, #2
 5438 0018 1344     		add	r3, r3, r2
 5439 001a 5B00     		lsls	r3, r3, #1
 5440 001c FB73     		strb	r3, [r7, #15]
2149:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c ****     return (temp_value + (value & (uint8_t)0x0F));
 5441              		.loc 1 2149 33
 5442 001e FB79     		ldrb	r3, [r7, #7]
 5443 0020 03F00F03 		and	r3, r3, #15
 5444 0024 DAB2     		uxtb	r2, r3
 5445              		.loc 1 2149 24
 5446 0026 FB7B     		ldrb	r3, [r7, #15]
 5447 0028 1344     		add	r3, r3, r2
 5448 002a DBB2     		uxtb	r3, r3
2150:../firmware/n32g430_std_periph_driver/src/n32g430_rtc.c **** }
 5449              		.loc 1 2150 1
 5450 002c 1846     		mov	r0, r3
 5451 002e 1437     		adds	r7, r7, #20
 5452              	.LCFI350:
 5453              		.cfi_def_cfa_offset 4
 5454 0030 BD46     		mov	sp, r7
 5455              	.LCFI351:
 5456              		.cfi_def_cfa_register 13
 5457              		@ sp needed
 5458 0032 5DF8047B 		ldr	r7, [sp], #4
 5459              	.LCFI352:
 5460              		.cfi_restore 7
 5461              		.cfi_def_cfa_offset 0
 5462 0036 7047     		bx	lr
 5463              		.cfi_endproc
 5464              	.LFE201:
 5466              		.section	.data.first_init_flag.0,"aw"
 5467              		.align	2
 5470              	first_init_flag.0:
 5471 0000 01000000 		.word	1
 5472              		.text
 5473              	.Letext0:
 5474              		.file 3 "../firmware/CMSIS/device/n32g430.h"
 5475              		.file 4 "d:\\program files (x86)\\arm gnu toolchain arm-none-eabi\\12.3 rel1\\arm-none-eabi\\inclu
 5476              		.file 5 "d:\\program files (x86)\\arm gnu toolchain arm-none-eabi\\12.3 rel1\\arm-none-eabi\\inclu
 5477              		.file 6 "../firmware/n32g430_std_periph_driver/inc/n32g430_rtc.h"
 5478              		.file 7 "../firmware/CMSIS/device/system_n32g430.h"
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 165


DEFINED SYMBOLS
                            *ABS*:00000000 n32g430_rtc.c
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:21     .text.__NVIC_SetPriority:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:26     .text.__NVIC_SetPriority:00000000 __NVIC_SetPriority
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:101    .text.__NVIC_SetPriority:0000004c $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:107    .text.RTC_Structure_Initializes:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:113    .text.RTC_Structure_Initializes:00000000 RTC_Structure_Initializes
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:161    .text.RTC_Write_Protection_Enable:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:167    .text.RTC_Write_Protection_Enable:00000000 RTC_Write_Protection_Enable
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:200    .text.RTC_Write_Protection_Enable:00000014 $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:205    .text.RTC_Write_Protection_Disable:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:211    .text.RTC_Write_Protection_Disable:00000000 RTC_Write_Protection_Disable
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:249    .text.RTC_Write_Protection_Disable:0000001c $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:254    .text.RTC_Initialization_Mode_Enter:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:260    .text.RTC_Initialization_Mode_Enter:00000000 RTC_Initialization_Mode_Enter
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:361    .text.RTC_Initialization_Mode_Enter:0000006c $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:366    .text.RTC_Initialization_Mode_Exit:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:372    .text.RTC_Initialization_Mode_Exit:00000000 RTC_Initialization_Mode_Exit
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:407    .text.RTC_Initialization_Mode_Exit:0000001c $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:412    .text.RTC_Hour_Format_Set:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:417    .text.RTC_Hour_Format_Set:00000000 RTC_Hour_Format_Set
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:467    .text.RTC_Hour_Format_Set:0000002c $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:472    .text.RTC_Prescale_Config:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:477    .text.RTC_Prescale_Config:00000000 RTC_Prescale_Config
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:529    .text.RTC_Prescale_Config:0000002c $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:534    .text.RTC_Registers_Reset:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:539    .text.RTC_Registers_Reset:00000000 RTC_Registers_Reset
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:624    .text.RTC_Registers_Reset:00000058 $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:630    .text.RTC_Deinitializes:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:636    .text.RTC_Deinitializes:00000000 RTC_Deinitializes
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:770    .text.RTC_Wait_For_Synchronization:00000000 RTC_Wait_For_Synchronization
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:759    .text.RTC_Deinitializes:00000098 $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:764    .text.RTC_Wait_For_Synchronization:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:859    .text.RTC_Wait_For_Synchronization:00000064 $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:864    .text.RTC_Reference_Clock_Enable:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:870    .text.RTC_Reference_Clock_Enable:00000000 RTC_Reference_Clock_Enable
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:933    .text.RTC_Reference_Clock_Enable:00000040 $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:938    .text.RTC_Reference_Clock_Disable:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:944    .text.RTC_Reference_Clock_Disable:00000000 RTC_Reference_Clock_Disable
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:1007   .text.RTC_Reference_Clock_Disable:00000040 $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:1012   .text.RTC_Bypass_Shadow_Enable:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:1018   .text.RTC_Bypass_Shadow_Enable:00000000 RTC_Bypass_Shadow_Enable
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:1049   .text.RTC_Bypass_Shadow_Enable:0000001c $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:1054   .text.RTC_Bypass_Shadow_Disable:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:1060   .text.RTC_Bypass_Shadow_Disable:00000000 RTC_Bypass_Shadow_Disable
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:1091   .text.RTC_Bypass_Shadow_Disable:0000001c $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:1096   .text.RTC_Time_Struct_Initializes:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:1102   .text.RTC_Time_Struct_Initializes:00000000 RTC_Time_Struct_Initializes
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:1154   .text.RTC_Time_Get:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:1160   .text.RTC_Time_Get:00000000 RTC_Time_Get
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:5409   .text.RTC_Bcd2_To_Byte:00000000 RTC_Bcd2_To_Byte
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:1278   .text.RTC_Time_Get:000000a4 $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:1283   .text.RTC_SubSecond_Get:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:1289   .text.RTC_SubSecond_Get:00000000 RTC_SubSecond_Get
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:1333   .text.RTC_SubSecond_Get:00000020 $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:1342   .bss.RTC_Delay_Flag:00000000 RTC_Delay_Flag
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:1339   .bss.RTC_Delay_Flag:00000000 $d
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 166


C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:1345   .text.RTC_Calendar_Initializes:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:1351   .text.RTC_Calendar_Initializes:00000000 RTC_Calendar_Initializes
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:5340   .text.RTC_Byte_To_Bcd2:00000000 RTC_Byte_To_Bcd2
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:1725   .text.RTC_Calendar_Initializes:00000208 $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:5470   .data.first_init_flag.0:00000000 first_init_flag.0
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:1735   .text.RTC_Date_Struct_Initializes:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:1741   .text.RTC_Date_Struct_Initializes:00000000 RTC_Date_Struct_Initializes
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:1793   .text.RTC_Date_Get:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:1799   .text.RTC_Date_Get:00000000 RTC_Date_Get
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:1912   .text.RTC_Date_Get:00000098 $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:1917   .text.RTC_Alarm_Set:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:1923   .text.RTC_Alarm_Set:00000000 RTC_Alarm_Set
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:2115   .text.RTC_Alarm_Set:000000f4 $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:2120   .text.RTC_Alarm_Struct_Initializes:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:2126   .text.RTC_Alarm_Struct_Initializes:00000000 RTC_Alarm_Struct_Initializes
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:2190   .text.RTC_Alarm_Get:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:2196   .text.RTC_Alarm_Get:00000000 RTC_Alarm_Get
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:2350   .text.RTC_Alarm_Get:000000e0 $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:2355   .text.RTC_Alarm_Enable:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:2361   .text.RTC_Alarm_Enable:00000000 RTC_Alarm_Enable
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:2406   .text.RTC_Alarm_Enable:00000028 $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:2411   .text.RTC_Alarm_Disable:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:2417   .text.RTC_Alarm_Disable:00000000 RTC_Alarm_Disable
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:2517   .text.RTC_Alarm_Disable:0000006c $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:2522   .text.RTC_Alarm_SubSecond_Config:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:2528   .text.RTC_Alarm_SubSecond_Config:00000000 RTC_Alarm_SubSecond_Config
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:2590   .text.RTC_Alarm_SubSecond_Config:00000040 $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:2595   .text.RTC_Alarm_SubSecond_Get:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:2601   .text.RTC_Alarm_SubSecond_Get:00000000 RTC_Alarm_SubSecond_Get
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:2660   .text.RTC_Alarm_SubSecond_Get:00000038 $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:2665   .text.RTC_WakeUp_Clock_Select:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:2671   .text.RTC_WakeUp_Clock_Select:00000000 RTC_WakeUp_Clock_Select
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:2724   .text.RTC_WakeUp_Clock_Select:00000034 $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:2729   .text.RTC_WakeUp_Counter_Set:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:2735   .text.RTC_WakeUp_Counter_Set:00000000 RTC_WakeUp_Counter_Set
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:2798   .text.RTC_WakeUp_Counter_Set:0000003c $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:2803   .text.RTC_WakeUp_Counter_Get:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:2809   .text.RTC_WakeUp_Counter_Get:00000000 RTC_WakeUp_Counter_Get
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:2842   .text.RTC_WakeUp_Counter_Get:00000014 $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:2847   .text.RTC_WakeUp_Enable:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:2853   .text.RTC_WakeUp_Enable:00000000 RTC_WakeUp_Enable
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:2886   .text.RTC_WakeUp_Enable:00000020 $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:2891   .text.RTC_WakeUp_Disable:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:2897   .text.RTC_WakeUp_Disable:00000000 RTC_WakeUp_Disable
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:2986   .text.RTC_WakeUp_Disable:00000064 $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:2991   .text.RTC_Day_Light_Saving_Config:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:2997   .text.RTC_Day_Light_Saving_Config:00000000 RTC_Day_Light_Saving_Config
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:3058   .text.RTC_Day_Light_Saving_Config:00000040 $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:3063   .text.RTC_Store_Operation_Get:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:3069   .text.RTC_Store_Operation_Get:00000000 RTC_Store_Operation_Get
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:3102   .text.RTC_Store_Operation_Get:00000018 $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:3107   .text.RTC_Output_Config:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:3113   .text.RTC_Output_Config:00000000 RTC_Output_Config
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:3171   .text.RTC_Output_Config:0000003c $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:3176   .text.RTC_Calibration_Output_Enable:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:3182   .text.RTC_Calibration_Output_Enable:00000000 RTC_Calibration_Output_Enable
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:3213   .text.RTC_Calibration_Output_Enable:0000001c $d
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 167


C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:3218   .text.RTC_Calibration_Output_Disable:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:3224   .text.RTC_Calibration_Output_Disable:00000000 RTC_Calibration_Output_Disable
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:3255   .text.RTC_Calibration_Output_Disable:0000001c $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:3260   .text.RTC_Calibration_Output_Config:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:3266   .text.RTC_Calibration_Output_Config:00000000 RTC_Calibration_Output_Config
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:3316   .text.RTC_Calibration_Output_Config:00000030 $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:3321   .text.RTC_Smooth_Calibration_Config:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:3327   .text.RTC_Smooth_Calibration_Config:00000000 RTC_Smooth_Calibration_Config
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:3429   .text.RTC_Smooth_Calibration_Config:00000074 $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:3434   .text.RTC_TimeStamp_Enable:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:3440   .text.RTC_TimeStamp_Enable:00000000 RTC_TimeStamp_Enable
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:3496   .text.RTC_TimeStamp_Enable:0000003c $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:3501   .text.RTC_TimeStamp_Disable:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:3507   .text.RTC_TimeStamp_Disable:00000000 RTC_TimeStamp_Disable
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:3556   .text.RTC_TimeStamp_Disable:00000030 $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:3561   .text.RTC_TimeStamp_Get:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:3567   .text.RTC_TimeStamp_Get:00000000 RTC_TimeStamp_Get
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:3759   .text.RTC_TimeStamp_Get:00000120 $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:3764   .text.RTC_TimeStamp_SubSecond_Get:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:3770   .text.RTC_TimeStamp_SubSecond_Get:00000000 RTC_TimeStamp_SubSecond_Get
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:3802   .text.RTC_TimeStamp_SubSecond_Get:00000014 $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:3807   .text.RTC_Output_Mode_Config:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:3813   .text.RTC_Output_Mode_Config:00000000 RTC_Output_Mode_Config
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:3863   .text.RTC_Output_Mode_Config:0000002c $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:3868   .text.RTC_Synchronization_Shift_Config:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:3874   .text.RTC_Synchronization_Shift_Config:00000000 RTC_Synchronization_Shift_Config
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:3996   .text.RTC_Synchronization_Shift_Config:00000090 $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4001   .text.RTC_Interrupts_Enable:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4007   .text.RTC_Interrupts_Enable:00000000 RTC_Interrupts_Enable
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4050   .text.RTC_Interrupts_Enable:00000024 $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4055   .text.RTC_Interrupts_Disable:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4061   .text.RTC_Interrupts_Disable:00000000 RTC_Interrupts_Disable
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4107   .text.RTC_Interrupts_Disable:00000028 $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4112   .text.RTC_Flag_Status_Get:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4118   .text.RTC_Flag_Status_Get:00000000 RTC_Flag_Status_Get
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4177   .text.RTC_Flag_Status_Get:00000034 $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4183   .text.RTC_Flag_Clear:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4189   .text.RTC_Flag_Clear:00000000 RTC_Flag_Clear
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4241   .text.RTC_Flag_Clear:0000002c $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4246   .text.RTC_Interrupt_Status_Get:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4252   .text.RTC_Interrupt_Status_Get:00000000 RTC_Interrupt_Status_Get
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4358   .text.RTC_Interrupt_Status_Get:00000074 $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4363   .text.RTC_Interrupt_Status_Clear:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4369   .text.RTC_Interrupt_Status_Clear:00000000 RTC_Interrupt_Status_Clear
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4428   .text.RTC_Interrupt_Status_Clear:00000038 $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4433   .text.RTC_Tamper_Trigger_Config:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4439   .text.RTC_Tamper_Trigger_Config:00000000 RTC_Tamper_Trigger_Config
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4506   .text.RTC_Tamper_Trigger_Config:00000040 $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4511   .text.RTC_Tamper_Enable:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4517   .text.RTC_Tamper_Enable:00000000 RTC_Tamper_Enable
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4560   .text.RTC_Tamper_Enable:00000020 $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4565   .text.RTC_Tamper_Disable:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4571   .text.RTC_Tamper_Disable:00000000 RTC_Tamper_Disable
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4617   .text.RTC_Tamper_Disable:00000024 $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4622   .text.RTC_Tamper_Filter_Config:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4628   .text.RTC_Tamper_Filter_Config:00000000 RTC_Tamper_Filter_Config
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4678   .text.RTC_Tamper_Filter_Config:0000002c $d
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s 			page 168


C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4683   .text.RTC_Tamper_Sampling_Frequency_Config:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4689   .text.RTC_Tamper_Sampling_Frequency_Config:00000000 RTC_Tamper_Sampling_Frequency_Config
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4739   .text.RTC_Tamper_Sampling_Frequency_Config:0000002c $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4744   .text.RTC_Tamper_Pins_Precharge_Duration:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4750   .text.RTC_Tamper_Pins_Precharge_Duration:00000000 RTC_Tamper_Pins_Precharge_Duration
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4800   .text.RTC_Tamper_Pins_Precharge_Duration:0000002c $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4805   .text.RTC_TimeStamp_On_Tamper_Detection_Enable:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4811   .text.RTC_TimeStamp_On_Tamper_Detection_Enable:00000000 RTC_TimeStamp_On_Tamper_Detection_Enable
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4846   .text.RTC_TimeStamp_On_Tamper_Detection_Enable:0000001c $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4851   .text.RTC_TimeStamp_On_Tamper_Detection_Disable:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4857   .text.RTC_TimeStamp_On_Tamper_Detection_Disable:00000000 RTC_TimeStamp_On_Tamper_Detection_Disable
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4892   .text.RTC_TimeStamp_On_Tamper_Detection_Disable:0000001c $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4897   .text.RTC_Tamper_Precharge_Enable:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4903   .text.RTC_Tamper_Precharge_Enable:00000000 RTC_Tamper_Precharge_Enable
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4938   .text.RTC_Tamper_Precharge_Enable:0000001c $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4943   .text.RTC_Tamper_Precharge_Disable:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4949   .text.RTC_Tamper_Precharge_Disable:00000000 RTC_Tamper_Precharge_Disable
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4984   .text.RTC_Tamper_Precharge_Disable:0000001c $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4989   .text.RTC_Tamper_Interrput_Enable:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:4995   .text.RTC_Tamper_Interrput_Enable:00000000 RTC_Tamper_Interrput_Enable
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:5038   .text.RTC_Tamper_Interrput_Enable:00000020 $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:5043   .text.RTC_Tamper_Interrput_Disable:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:5049   .text.RTC_Tamper_Interrput_Disable:00000000 RTC_Tamper_Interrput_Disable
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:5095   .text.RTC_Tamper_Interrput_Disable:00000024 $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:5100   .text.RTC_Tamper_Backup_Register_Clear_Disable:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:5106   .text.RTC_Tamper_Backup_Register_Clear_Disable:00000000 RTC_Tamper_Backup_Register_Clear_Disable
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:5149   .text.RTC_Tamper_Backup_Register_Clear_Disable:00000020 $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:5154   .text.RTC_Tamper_Backup_Register_Clear_Enable:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:5160   .text.RTC_Tamper_Backup_Register_Clear_Enable:00000000 RTC_Tamper_Backup_Register_Clear_Enable
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:5206   .text.RTC_Tamper_Backup_Register_Clear_Enable:00000024 $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:5211   .text.RTC_Backup_Register_Write:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:5217   .text.RTC_Backup_Register_Write:00000000 RTC_Backup_Register_Write
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:5269   .text.RTC_Backup_Register_Write:00000034 $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:5274   .text.RTC_Backup_Register_Read:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:5280   .text.RTC_Backup_Register_Read:00000000 RTC_Backup_Register_Read
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:5330   .text.RTC_Backup_Register_Read:00000030 $d
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:5335   .text.RTC_Byte_To_Bcd2:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:5404   .text.RTC_Bcd2_To_Byte:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccFpoTVo.s:5467   .data.first_init_flag.0:00000000 $d

UNDEFINED SYMBOLS
SystemClockFrequency
