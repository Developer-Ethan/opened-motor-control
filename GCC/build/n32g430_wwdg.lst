ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccQm3AbQ.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"n32g430_wwdg.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c"
  20              		.section	.text.WWDG_Reset,"ax",%progbits
  21              		.align	1
  22              		.global	WWDG_Reset
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	WWDG_Reset:
  28              	.LFB130:
   1:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** /**
   2:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *     Copyright (c) 2022, Nations Technologies Inc.
   3:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** * 
   4:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *     All rights reserved.
   5:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *
   6:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *     This software is the exclusive property of Nations Technologies Inc. (Hereinafter 
   7:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** * referred to as NATIONS). This software, and the product of NATIONS described herein 
   8:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** * (Hereinafter referred to as the Product) are owned by NATIONS under the laws and treaties
   9:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** * of the People’s Republic of China and other applicable jurisdictions worldwide.
  10:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *
  11:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *     NATIONS does not grant any license under its patents, copyrights, trademarks, or other 
  12:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** * intellectual property rights. Names and brands of third party may be mentioned or referred 
  13:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** * thereto (if any) for identification purposes only.
  14:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *
  15:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *     NATIONS reserves the right to make changes, corrections, enhancements, modifications, and 
  16:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** * improvements to this software at any time without notice. Please contact NATIONS and obtain 
  17:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** * the latest version of this software before placing orders.
  18:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** 
  19:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *     Although NATIONS has attempted to provide accurate and reliable information, NATIONS assumes 
  20:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** * no responsibility for the accuracy and reliability of this software.
  21:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** * 
  22:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *     It is the responsibility of the user of this software to properly design, program, and test 
  23:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** * the functionality and safety of any application made of this information and any resulting produc
  24:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** * In no event shall NATIONS be liable for any direct, indirect, incidental, special,exemplary, or 
  25:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** * consequential damages arising in any way out of the use of this software or the Product.
  26:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *
  27:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *     NATIONS Products are neither intended nor warranted for usage in systems or equipment, any
  28:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** * malfunction or failure of which may cause loss of human life, bodily injury or severe property 
  29:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** * damage. Such applications are deemed, “Insecure Usage”.
  30:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccQm3AbQ.s 			page 2


  31:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *     All Insecure Usage shall be made at user’s risk. User shall indemnify NATIONS and hold NATI
  32:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** * harmless from and against all claims, costs, damages, and other liabilities, arising from or rela
  33:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** * to any customer’s Insecure Usage.
  34:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** 
  35:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *     Any express or implied warranty with regard to this software or the Product, including,but no
  36:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** * limited to, the warranties of merchantability, fitness for a particular purpose and non-infringem
  37:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** * are disclaimed to the fullest extent permitted by law.
  38:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** 
  39:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *     Unless otherwise explicitly permitted by NATIONS, anyone may not duplicate, modify, transcrib
  40:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** * or otherwise distribute this software for any purposes, in whole or in part.
  41:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *
  42:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *     NATIONS products and technologies shall not be used for or incorporated into any products or 
  43:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** * whose manufacture, use, or sale is prohibited under any applicable domestic or foreign laws or re
  44:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** * User shall comply with any applicable export control laws and regulations promulgated and adminis
  45:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** * the governments of any countries asserting jurisdiction over the parties or transactions.
  46:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** **/
  47:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c ****  
  48:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** /**
  49:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *\*\file n32g430_wwdg.c
  50:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *\*\author Nations
  51:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *\*\version v1.0.0
  52:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *\*\copyright Copyright (c) 2022, Nations Technologies Inc. All rights reserved.
  53:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** **/
  54:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** 
  55:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** #include "n32g430_wwdg.h"
  56:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** #include "n32g430_rcc.h"
  57:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** 
  58:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** 
  59:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** /**
  60:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *\*\name    WWDG_Reset.
  61:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *\*\fun     Resets the WWDG peripheral registers to their default reset values.
  62:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *\*\return  none
  63:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** **/
  64:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** void WWDG_Reset(void)
  65:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** {
  29              		.loc 1 65 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 00AF     		add	r7, sp, #0
  39              	.LCFI1:
  40              		.cfi_def_cfa_register 7
  66:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c ****     RCC_APB1_Peripheral_Reset(RCC_APB1_PERIPH_WWDG);
  41              		.loc 1 66 5
  42 0004 4FF40060 		mov	r0, #2048
  43 0008 FFF7FEFF 		bl	RCC_APB1_Peripheral_Reset
  67:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** }
  44              		.loc 1 67 1
  45 000c 00BF     		nop
  46 000e 80BD     		pop	{r7, pc}
  47              		.cfi_endproc
  48              	.LFE130:
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccQm3AbQ.s 			page 3


  50              		.section	.text.WWDG_Prescaler_Division_Set,"ax",%progbits
  51              		.align	1
  52              		.global	WWDG_Prescaler_Division_Set
  53              		.syntax unified
  54              		.thumb
  55              		.thumb_func
  57              	WWDG_Prescaler_Division_Set:
  58              	.LFB131:
  68:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** 
  69:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** 
  70:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** /**
  71:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *\*\name    WWDG_Prescaler_Division_Set.
  72:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *\*\fun     Set the WWDOG Prescaler Division Value.
  73:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *\*\param   prescaler_division : 
  74:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *\*\          - WWDG_PRESCALER_DIV1   WWDG Counter Clock (PCLK1 / 4096) / 1
  75:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *\*\          - WWDG_PRESCALER_DIV2   WWDG Counter Clock (PCLK1 / 4096) / 2
  76:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *\*\          - WWDG_PRESCALER_DIV4   WWDG Counter Clock (PCLK1 / 4096) / 4
  77:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *\*\          - WWDG_PRESCALER_DIV8   WWDG Counter Clock (PCLK1 / 4096) / 8
  78:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *\*\return  none
  79:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** **/
  80:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** void WWDG_Prescaler_Division_Set(uint32_t prescaler_division)
  81:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** {
  59              		.loc 1 81 1
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 16
  62              		@ frame_needed = 1, uses_anonymous_args = 0
  63              		@ link register save eliminated.
  64 0000 80B4     		push	{r7}
  65              	.LCFI2:
  66              		.cfi_def_cfa_offset 4
  67              		.cfi_offset 7, -4
  68 0002 85B0     		sub	sp, sp, #20
  69              	.LCFI3:
  70              		.cfi_def_cfa_offset 24
  71 0004 00AF     		add	r7, sp, #0
  72              	.LCFI4:
  73              		.cfi_def_cfa_register 7
  74 0006 7860     		str	r0, [r7, #4]
  82:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c ****     uint32_t temp_value = 0;
  75              		.loc 1 82 14
  76 0008 0023     		movs	r3, #0
  77 000a FB60     		str	r3, [r7, #12]
  83:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** 
  84:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c ****     /* Clear TIMERB[1:0] bits */
  85:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c ****     temp_value = WWDG->CFG & CFG_TIMERB_MASK;
  78              		.loc 1 85 22
  79 000c 084B     		ldr	r3, .L3
  80 000e 5B68     		ldr	r3, [r3, #4]
  81              		.loc 1 85 16
  82 0010 23F44043 		bic	r3, r3, #49152
  83 0014 FB60     		str	r3, [r7, #12]
  86:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** 
  87:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c ****     /* Set TIMERB[1:0] bits according to prescaler_division value */
  88:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c ****     temp_value |= prescaler_division;
  84              		.loc 1 88 16
  85 0016 FA68     		ldr	r2, [r7, #12]
  86 0018 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccQm3AbQ.s 			page 4


  87 001a 1343     		orrs	r3, r3, r2
  88 001c FB60     		str	r3, [r7, #12]
  89:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** 
  90:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c ****     /* Store the new value */
  91:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c ****     WWDG->CFG = temp_value;
  89              		.loc 1 91 9
  90 001e 044A     		ldr	r2, .L3
  91              		.loc 1 91 15
  92 0020 FB68     		ldr	r3, [r7, #12]
  93 0022 5360     		str	r3, [r2, #4]
  92:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** }
  94              		.loc 1 92 1
  95 0024 00BF     		nop
  96 0026 1437     		adds	r7, r7, #20
  97              	.LCFI5:
  98              		.cfi_def_cfa_offset 4
  99 0028 BD46     		mov	sp, r7
 100              	.LCFI6:
 101              		.cfi_def_cfa_register 13
 102              		@ sp needed
 103 002a 5DF8047B 		ldr	r7, [sp], #4
 104              	.LCFI7:
 105              		.cfi_restore 7
 106              		.cfi_def_cfa_offset 0
 107 002e 7047     		bx	lr
 108              	.L4:
 109              		.align	2
 110              	.L3:
 111 0030 002C0040 		.word	1073753088
 112              		.cfi_endproc
 113              	.LFE131:
 115              		.section	.text.WWDG_Window_Value_Set,"ax",%progbits
 116              		.align	1
 117              		.global	WWDG_Window_Value_Set
 118              		.syntax unified
 119              		.thumb
 120              		.thumb_func
 122              	WWDG_Window_Value_Set:
 123              	.LFB132:
  93:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** 
  94:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** 
  95:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** /**
  96:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *\*\name    WWDG_Window_Value_Set.
  97:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *\*\fun     Set the WWDOG Window Value.
  98:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *\*\param   window_value : WWDOG Window Value
  99:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *\*\          The value range of this parameter :
 100:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *\*\          - 0x0040 ~ 0x3FFF
 101:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *\*\return  none
 102:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** **/
 103:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** void WWDG_Window_Value_Set(uint16_t window_value)
 104:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** {
 124              		.loc 1 104 1
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 16
 127              		@ frame_needed = 1, uses_anonymous_args = 0
 128              		@ link register save eliminated.
 129 0000 80B4     		push	{r7}
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccQm3AbQ.s 			page 5


 130              	.LCFI8:
 131              		.cfi_def_cfa_offset 4
 132              		.cfi_offset 7, -4
 133 0002 85B0     		sub	sp, sp, #20
 134              	.LCFI9:
 135              		.cfi_def_cfa_offset 24
 136 0004 00AF     		add	r7, sp, #0
 137              	.LCFI10:
 138              		.cfi_def_cfa_register 7
 139 0006 0346     		mov	r3, r0
 140 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 105:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c ****     __IO uint32_t temp_value = 0;
 141              		.loc 1 105 19
 142 000a 0023     		movs	r3, #0
 143 000c FB60     		str	r3, [r7, #12]
 106:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** 
 107:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c ****     /* Clear W[13:0] bits */
 108:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c ****     temp_value = WWDG->CFG & CFG_W_MASK;
 144              		.loc 1 108 22
 145 000e 0B4B     		ldr	r3, .L6
 146 0010 5B68     		ldr	r3, [r3, #4]
 147              		.loc 1 108 28
 148 0012 23F47F53 		bic	r3, r3, #16320
 149 0016 23F03F03 		bic	r3, r3, #63
 150              		.loc 1 108 16
 151 001a FB60     		str	r3, [r7, #12]
 109:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** 
 110:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c ****     /* Set W[13:0] bits according to window_value value */
 111:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c ****     temp_value |= window_value & (uint32_t)BIT_MASK;
 152              		.loc 1 111 32
 153 001c FB88     		ldrh	r3, [r7, #6]
 154 001e C3F30D02 		ubfx	r2, r3, #0, #14
 155              		.loc 1 111 16
 156 0022 FB68     		ldr	r3, [r7, #12]
 157 0024 1343     		orrs	r3, r3, r2
 158 0026 FB60     		str	r3, [r7, #12]
 112:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** 
 113:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c ****     /* Store the new value */
 114:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c ****     WWDG->CFG = temp_value;
 159              		.loc 1 114 9
 160 0028 044A     		ldr	r2, .L6
 161              		.loc 1 114 15
 162 002a FB68     		ldr	r3, [r7, #12]
 163 002c 5360     		str	r3, [r2, #4]
 115:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** }
 164              		.loc 1 115 1
 165 002e 00BF     		nop
 166 0030 1437     		adds	r7, r7, #20
 167              	.LCFI11:
 168              		.cfi_def_cfa_offset 4
 169 0032 BD46     		mov	sp, r7
 170              	.LCFI12:
 171              		.cfi_def_cfa_register 13
 172              		@ sp needed
 173 0034 5DF8047B 		ldr	r7, [sp], #4
 174              	.LCFI13:
 175              		.cfi_restore 7
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccQm3AbQ.s 			page 6


 176              		.cfi_def_cfa_offset 0
 177 0038 7047     		bx	lr
 178              	.L7:
 179 003a 00BF     		.align	2
 180              	.L6:
 181 003c 002C0040 		.word	1073753088
 182              		.cfi_endproc
 183              	.LFE132:
 185              		.section	.text.WWDG_Interrupt_Enable,"ax",%progbits
 186              		.align	1
 187              		.global	WWDG_Interrupt_Enable
 188              		.syntax unified
 189              		.thumb
 190              		.thumb_func
 192              	WWDG_Interrupt_Enable:
 193              	.LFB133:
 116:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** 
 117:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** 
 118:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** /**
 119:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *\*\name    WWDG_Interrupt_Enable.
 120:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *\*\fun     Enable WWDG Early Wakeup interrupt(EWINT).
 121:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *\*\return  none
 122:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** **/
 123:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** void WWDG_Interrupt_Enable(void)
 124:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** {
 194              		.loc 1 124 1
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 0
 197              		@ frame_needed = 1, uses_anonymous_args = 0
 198              		@ link register save eliminated.
 199 0000 80B4     		push	{r7}
 200              	.LCFI14:
 201              		.cfi_def_cfa_offset 4
 202              		.cfi_offset 7, -4
 203 0002 00AF     		add	r7, sp, #0
 204              	.LCFI15:
 205              		.cfi_def_cfa_register 7
 125:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c ****     *(__IO uint32_t*)CFG_EWINT_BB = (uint32_t)ENABLE;
 206              		.loc 1 125 5
 207 0004 034B     		ldr	r3, .L9
 208              		.loc 1 125 35
 209 0006 0122     		movs	r2, #1
 210 0008 1A60     		str	r2, [r3]
 126:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** }
 211              		.loc 1 126 1
 212 000a 00BF     		nop
 213 000c BD46     		mov	sp, r7
 214              	.LCFI16:
 215              		.cfi_def_cfa_register 13
 216              		@ sp needed
 217 000e 5DF8047B 		ldr	r7, [sp], #4
 218              	.LCFI17:
 219              		.cfi_restore 7
 220              		.cfi_def_cfa_offset 0
 221 0012 7047     		bx	lr
 222              	.L10:
 223              		.align	2
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccQm3AbQ.s 			page 7


 224              	.L9:
 225 0014 C0800542 		.word	1107656896
 226              		.cfi_endproc
 227              	.LFE133:
 229              		.section	.text.WWDG_Counter_Value_Set,"ax",%progbits
 230              		.align	1
 231              		.global	WWDG_Counter_Value_Set
 232              		.syntax unified
 233              		.thumb
 234              		.thumb_func
 236              	WWDG_Counter_Value_Set:
 237              	.LFB134:
 127:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** 
 128:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** 
 129:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** /**
 130:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *\*\name    WWDG_Counter_Value_Set.
 131:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *\*\fun     Set the WWDOG Counter Value.
 132:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *\*\param   counter_value : WWDOG Counter value
 133:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *\*\          The value range of this parameter :
 134:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *\*\          - 0x40 ~ 0x3FFF
 135:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *\*\return  none 
 136:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** **/
 137:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** void WWDG_Counter_Value_Set(uint16_t counter_value)
 138:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** {
 238              		.loc 1 138 1
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 16
 241              		@ frame_needed = 1, uses_anonymous_args = 0
 242              		@ link register save eliminated.
 243 0000 80B4     		push	{r7}
 244              	.LCFI18:
 245              		.cfi_def_cfa_offset 4
 246              		.cfi_offset 7, -4
 247 0002 85B0     		sub	sp, sp, #20
 248              	.LCFI19:
 249              		.cfi_def_cfa_offset 24
 250 0004 00AF     		add	r7, sp, #0
 251              	.LCFI20:
 252              		.cfi_def_cfa_register 7
 253 0006 0346     		mov	r3, r0
 254 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 139:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c ****     uint32_t temp_value = 0x00U;
 255              		.loc 1 139 14
 256 000a 0023     		movs	r3, #0
 257 000c FB60     		str	r3, [r7, #12]
 140:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c ****     temp_value = (counter_value & BIT_MASK);
 258              		.loc 1 140 33
 259 000e FB88     		ldrh	r3, [r7, #6]
 260              		.loc 1 140 16
 261 0010 C3F30D03 		ubfx	r3, r3, #0, #14
 262 0014 FB60     		str	r3, [r7, #12]
 141:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c ****     /* Write the T[13:0] bits to configure the counter value, which can be written directly 
 142:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c ****        without read-modify-write; only write 1 to the ACTB bit to activate the window watchdog */
 143:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c ****     WWDG->CTRL = temp_value;
 263              		.loc 1 143 9
 264 0016 044A     		ldr	r2, .L12
 265              		.loc 1 143 16
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccQm3AbQ.s 			page 8


 266 0018 FB68     		ldr	r3, [r7, #12]
 267 001a 1360     		str	r3, [r2]
 144:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** }
 268              		.loc 1 144 1
 269 001c 00BF     		nop
 270 001e 1437     		adds	r7, r7, #20
 271              	.LCFI21:
 272              		.cfi_def_cfa_offset 4
 273 0020 BD46     		mov	sp, r7
 274              	.LCFI22:
 275              		.cfi_def_cfa_register 13
 276              		@ sp needed
 277 0022 5DF8047B 		ldr	r7, [sp], #4
 278              	.LCFI23:
 279              		.cfi_restore 7
 280              		.cfi_def_cfa_offset 0
 281 0026 7047     		bx	lr
 282              	.L13:
 283              		.align	2
 284              	.L12:
 285 0028 002C0040 		.word	1073753088
 286              		.cfi_endproc
 287              	.LFE134:
 289              		.section	.text.WWDG_Enable,"ax",%progbits
 290              		.align	1
 291              		.global	WWDG_Enable
 292              		.syntax unified
 293              		.thumb
 294              		.thumb_func
 296              	WWDG_Enable:
 297              	.LFB135:
 145:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** 
 146:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** 
 147:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** /**
 148:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *\*\name    WWDG_Enable.
 149:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *\*\fun     Set the WWDOG Counter Value and Enable WWDOG .
 150:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *\*\param   counter_value : WWDOG Counter value
 151:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *\*\          The value range of this parameter :
 152:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *\*\          - 0x40 ~ 0x3FFF
 153:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *\*\return  none
 154:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** **/
 155:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** void WWDG_Enable(uint16_t counter_value)
 156:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** {
 298              		.loc 1 156 1
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 8
 301              		@ frame_needed = 1, uses_anonymous_args = 0
 302              		@ link register save eliminated.
 303 0000 80B4     		push	{r7}
 304              	.LCFI24:
 305              		.cfi_def_cfa_offset 4
 306              		.cfi_offset 7, -4
 307 0002 83B0     		sub	sp, sp, #12
 308              	.LCFI25:
 309              		.cfi_def_cfa_offset 16
 310 0004 00AF     		add	r7, sp, #0
 311              	.LCFI26:
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccQm3AbQ.s 			page 9


 312              		.cfi_def_cfa_register 7
 313 0006 0346     		mov	r3, r0
 314 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 157:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c ****     WWDG->CTRL = CTRL_ACTB_SET | counter_value;
 315              		.loc 1 157 32
 316 000a FB88     		ldrh	r3, [r7, #6]	@ movhi
 317 000c 43F48043 		orr	r3, r3, #16384
 318 0010 9AB2     		uxth	r2, r3
 319              		.loc 1 157 9
 320 0012 044B     		ldr	r3, .L15
 321              		.loc 1 157 16
 322 0014 1A60     		str	r2, [r3]
 158:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** }
 323              		.loc 1 158 1
 324 0016 00BF     		nop
 325 0018 0C37     		adds	r7, r7, #12
 326              	.LCFI27:
 327              		.cfi_def_cfa_offset 4
 328 001a BD46     		mov	sp, r7
 329              	.LCFI28:
 330              		.cfi_def_cfa_register 13
 331              		@ sp needed
 332 001c 5DF8047B 		ldr	r7, [sp], #4
 333              	.LCFI29:
 334              		.cfi_restore 7
 335              		.cfi_def_cfa_offset 0
 336 0020 7047     		bx	lr
 337              	.L16:
 338 0022 00BF     		.align	2
 339              	.L15:
 340 0024 002C0040 		.word	1073753088
 341              		.cfi_endproc
 342              	.LFE135:
 344              		.section	.text.WWDG_EWINTF_Flag_Get,"ax",%progbits
 345              		.align	1
 346              		.global	WWDG_EWINTF_Flag_Get
 347              		.syntax unified
 348              		.thumb
 349              		.thumb_func
 351              	WWDG_EWINTF_Flag_Get:
 352              	.LFB136:
 159:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** 
 160:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** 
 161:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** 
 162:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** /**
 163:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *\*\name    WWDG_EWINTF_Flag_Get.
 164:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *\*\fun     Get WWDOG Early Wake-up Interrupt Flag.
 165:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *\*\return  SET or RESET
 166:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** **/
 167:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** FlagStatus WWDG_EWINTF_Flag_Get(void)
 168:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** {
 353              		.loc 1 168 1
 354              		.cfi_startproc
 355              		@ args = 0, pretend = 0, frame = 0
 356              		@ frame_needed = 1, uses_anonymous_args = 0
 357              		@ link register save eliminated.
 358 0000 80B4     		push	{r7}
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccQm3AbQ.s 			page 10


 359              	.LCFI30:
 360              		.cfi_def_cfa_offset 4
 361              		.cfi_offset 7, -4
 362 0002 00AF     		add	r7, sp, #0
 363              	.LCFI31:
 364              		.cfi_def_cfa_register 7
 169:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c ****     return (FlagStatus)(WWDG->STS);
 365              		.loc 1 169 29
 366 0004 034B     		ldr	r3, .L19
 367 0006 9B68     		ldr	r3, [r3, #8]
 368              		.loc 1 169 12
 369 0008 DBB2     		uxtb	r3, r3
 170:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** }
 370              		.loc 1 170 1
 371 000a 1846     		mov	r0, r3
 372 000c BD46     		mov	sp, r7
 373              	.LCFI32:
 374              		.cfi_def_cfa_register 13
 375              		@ sp needed
 376 000e 5DF8047B 		ldr	r7, [sp], #4
 377              	.LCFI33:
 378              		.cfi_restore 7
 379              		.cfi_def_cfa_offset 0
 380 0012 7047     		bx	lr
 381              	.L20:
 382              		.align	2
 383              	.L19:
 384 0014 002C0040 		.word	1073753088
 385              		.cfi_endproc
 386              	.LFE136:
 388              		.section	.text.WWDG_EWINTF_Flag_Clear,"ax",%progbits
 389              		.align	1
 390              		.global	WWDG_EWINTF_Flag_Clear
 391              		.syntax unified
 392              		.thumb
 393              		.thumb_func
 395              	WWDG_EWINTF_Flag_Clear:
 396              	.LFB137:
 171:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** 
 172:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** /**
 173:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *\*\name    WWDG_EWINTF_Flag_Clear.
 174:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *\*\fun     Clear WWDOG Early Wake-up Interrupt Flag.
 175:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** *\*\return  none
 176:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** **/
 177:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** void WWDG_EWINTF_Flag_Clear(void)
 178:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** {
 397              		.loc 1 178 1
 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 0
 400              		@ frame_needed = 1, uses_anonymous_args = 0
 401              		@ link register save eliminated.
 402 0000 80B4     		push	{r7}
 403              	.LCFI34:
 404              		.cfi_def_cfa_offset 4
 405              		.cfi_offset 7, -4
 406 0002 00AF     		add	r7, sp, #0
 407              	.LCFI35:
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccQm3AbQ.s 			page 11


 408              		.cfi_def_cfa_register 7
 179:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c ****     WWDG->STS = (uint32_t)RESET;
 409              		.loc 1 179 9
 410 0004 034B     		ldr	r3, .L22
 411              		.loc 1 179 15
 412 0006 0022     		movs	r2, #0
 413 0008 9A60     		str	r2, [r3, #8]
 180:../firmware/n32g430_std_periph_driver/src/n32g430_wwdg.c **** }
 414              		.loc 1 180 1
 415 000a 00BF     		nop
 416 000c BD46     		mov	sp, r7
 417              	.LCFI36:
 418              		.cfi_def_cfa_register 13
 419              		@ sp needed
 420 000e 5DF8047B 		ldr	r7, [sp], #4
 421              	.LCFI37:
 422              		.cfi_restore 7
 423              		.cfi_def_cfa_offset 0
 424 0012 7047     		bx	lr
 425              	.L23:
 426              		.align	2
 427              	.L22:
 428 0014 002C0040 		.word	1073753088
 429              		.cfi_endproc
 430              	.LFE137:
 432              		.text
 433              	.Letext0:
 434              		.file 2 "d:\\program files (x86)\\arm gnu toolchain arm-none-eabi\\12.3 rel1\\arm-none-eabi\\inclu
 435              		.file 3 "d:\\program files (x86)\\arm gnu toolchain arm-none-eabi\\12.3 rel1\\arm-none-eabi\\inclu
 436              		.file 4 "../firmware/CMSIS/device/n32g430.h"
 437              		.file 5 "../firmware/n32g430_std_periph_driver/inc/n32g430_rcc.h"
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccQm3AbQ.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 n32g430_wwdg.c
C:\Users\ZShuai\AppData\Local\Temp\ccQm3AbQ.s:21     .text.WWDG_Reset:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccQm3AbQ.s:27     .text.WWDG_Reset:00000000 WWDG_Reset
C:\Users\ZShuai\AppData\Local\Temp\ccQm3AbQ.s:51     .text.WWDG_Prescaler_Division_Set:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccQm3AbQ.s:57     .text.WWDG_Prescaler_Division_Set:00000000 WWDG_Prescaler_Division_Set
C:\Users\ZShuai\AppData\Local\Temp\ccQm3AbQ.s:111    .text.WWDG_Prescaler_Division_Set:00000030 $d
C:\Users\ZShuai\AppData\Local\Temp\ccQm3AbQ.s:116    .text.WWDG_Window_Value_Set:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccQm3AbQ.s:122    .text.WWDG_Window_Value_Set:00000000 WWDG_Window_Value_Set
C:\Users\ZShuai\AppData\Local\Temp\ccQm3AbQ.s:181    .text.WWDG_Window_Value_Set:0000003c $d
C:\Users\ZShuai\AppData\Local\Temp\ccQm3AbQ.s:186    .text.WWDG_Interrupt_Enable:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccQm3AbQ.s:192    .text.WWDG_Interrupt_Enable:00000000 WWDG_Interrupt_Enable
C:\Users\ZShuai\AppData\Local\Temp\ccQm3AbQ.s:225    .text.WWDG_Interrupt_Enable:00000014 $d
C:\Users\ZShuai\AppData\Local\Temp\ccQm3AbQ.s:230    .text.WWDG_Counter_Value_Set:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccQm3AbQ.s:236    .text.WWDG_Counter_Value_Set:00000000 WWDG_Counter_Value_Set
C:\Users\ZShuai\AppData\Local\Temp\ccQm3AbQ.s:285    .text.WWDG_Counter_Value_Set:00000028 $d
C:\Users\ZShuai\AppData\Local\Temp\ccQm3AbQ.s:290    .text.WWDG_Enable:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccQm3AbQ.s:296    .text.WWDG_Enable:00000000 WWDG_Enable
C:\Users\ZShuai\AppData\Local\Temp\ccQm3AbQ.s:340    .text.WWDG_Enable:00000024 $d
C:\Users\ZShuai\AppData\Local\Temp\ccQm3AbQ.s:345    .text.WWDG_EWINTF_Flag_Get:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccQm3AbQ.s:351    .text.WWDG_EWINTF_Flag_Get:00000000 WWDG_EWINTF_Flag_Get
C:\Users\ZShuai\AppData\Local\Temp\ccQm3AbQ.s:384    .text.WWDG_EWINTF_Flag_Get:00000014 $d
C:\Users\ZShuai\AppData\Local\Temp\ccQm3AbQ.s:389    .text.WWDG_EWINTF_Flag_Clear:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccQm3AbQ.s:395    .text.WWDG_EWINTF_Flag_Clear:00000000 WWDG_EWINTF_Flag_Clear
C:\Users\ZShuai\AppData\Local\Temp\ccQm3AbQ.s:428    .text.WWDG_EWINTF_Flag_Clear:00000014 $d

UNDEFINED SYMBOLS
RCC_APB1_Peripheral_Reset
