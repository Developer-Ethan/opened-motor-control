ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"n32g430_pwr.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c"
  20              		.section	.text.PWR_Reset,"ax",%progbits
  21              		.align	1
  22              		.global	PWR_Reset
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	PWR_Reset:
  28              	.LFB130:
   1:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** /**
   2:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *     Copyright (c) 2022, Nations Technologies Inc.
   3:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** * 
   4:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *     All rights reserved.
   5:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *
   6:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *     This software is the exclusive property of Nations Technologies Inc. (Hereinafter 
   7:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** * referred to as NATIONS). This software, and the product of NATIONS described herein 
   8:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** * (Hereinafter referred to as the Product) are owned by NATIONS under the laws and treaties
   9:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** * of the People's Republic of China and other applicable jurisdictions worldwide.
  10:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *
  11:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *     NATIONS does not grant any license under its patents, copyrights, trademarks, or other 
  12:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** * intellectual property rights. Names and brands of third party may be mentioned or referred 
  13:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** * thereto (if any) for identification purposes only.
  14:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *
  15:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *     NATIONS reserves the right to make changes, corrections, enhancements, modifications, and 
  16:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** * improvements to this software at any time without notice. Please contact NATIONS and obtain 
  17:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** * the latest version of this software before placing orders.
  18:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** 
  19:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *     Although NATIONS has attempted to provide accurate and reliable information, NATIONS assumes 
  20:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** * no responsibility for the accuracy and reliability of this software.
  21:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** * 
  22:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *     It is the responsibility of the user of this software to properly design, program, and test 
  23:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** * the functionality and safety of any application made of this information and any resulting produc
  24:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** * In no event shall NATIONS be liable for any direct, indirect, incidental, special,exemplary, or 
  25:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** * consequential damages arising in any way out of the use of this software or the Product.
  26:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *
  27:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *     NATIONS Products are neither intended nor warranted for usage in systems or equipment, any
  28:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** * malfunction or failure of which may cause loss of human life, bodily injury or severe property 
  29:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** * damage. Such applications are deemed, "Insecure Usage".
  30:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s 			page 2


  31:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *     All Insecure Usage shall be made at user's risk. User shall indemnify NATIONS and hold NATION
  32:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** * harmless from and against all claims, costs, damages, and other liabilities, arising from or rela
  33:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** * to any customer's Insecure Usage.
  34:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** 
  35:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *     Any express or implied warranty with regard to this software or the Product, including,but no
  36:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** * limited to, the warranties of merchantability, fitness for a particular purpose and non-infringem
  37:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** * are disclaimed to the fullest extent permitted by law.
  38:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** 
  39:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *     Unless otherwise explicitly permitted by NATIONS, anyone may not duplicate, modify, transcrib
  40:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** * or otherwise distribute this software for any purposes, in whole or in part.
  41:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *
  42:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *     NATIONS products and technologies shall not be used for or incorporated into any products or 
  43:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** * whose manufacture, use, or sale is prohibited under any applicable domestic or foreign laws or re
  44:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** * User shall comply with any applicable export control laws and regulations promulgated and adminis
  45:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** * the governments of any countries asserting jurisdiction over the parties or transactions.
  46:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** **/
  47:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** 
  48:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** /**
  49:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\file n32g430_pwr.c
  50:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\author Nations
  51:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\version v1.0.1
  52:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\copyright Copyright (c) 2022, Nations Technologies Inc. All rights reserved.
  53:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** **/
  54:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** 
  55:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** #include "n32g430_pwr.h"
  56:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** 
  57:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** /** PWR Private Defines **/
  58:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** 
  59:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** 
  60:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** /** PWR Driving Functions Declaration **/
  61:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** 
  62:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** /**
  63:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\name    PWR_Reset.
  64:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\fun     Deinitializes the PWR peripheral registers to their default reset values.
  65:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\param   none
  66:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\return  none
  67:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** **/
  68:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** void PWR_Reset(void)
  69:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** {
  29              		.loc 1 69 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 00AF     		add	r7, sp, #0
  39              	.LCFI1:
  40              		.cfi_def_cfa_register 7
  70:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     RCC_APB1_Peripheral_Reset(RCC_APB1_PERIPH_PWR);
  41              		.loc 1 70 5
  42 0004 4FF08050 		mov	r0, #268435456
  43 0008 FFF7FEFF 		bl	RCC_APB1_Peripheral_Reset
  71:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** }
  44              		.loc 1 71 1
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s 			page 3


  45 000c 00BF     		nop
  46 000e 80BD     		pop	{r7, pc}
  47              		.cfi_endproc
  48              	.LFE130:
  50              		.section	.text.PWR_RTC_Backup_Access_Enable,"ax",%progbits
  51              		.align	1
  52              		.global	PWR_RTC_Backup_Access_Enable
  53              		.syntax unified
  54              		.thumb
  55              		.thumb_func
  57              	PWR_RTC_Backup_Access_Enable:
  58              	.LFB131:
  72:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** 
  73:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** /**
  74:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\name    PWR_RTC_Backup_Access_Enable.
  75:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\fun     Enables access to the RTC and backup registers.
  76:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\param   none
  77:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\return  none
  78:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** **/
  79:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** void PWR_RTC_Backup_Access_Enable(void)
  80:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** {
  59              		.loc 1 80 1
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 1, uses_anonymous_args = 0
  63              		@ link register save eliminated.
  64 0000 80B4     		push	{r7}
  65              	.LCFI2:
  66              		.cfi_def_cfa_offset 4
  67              		.cfi_offset 7, -4
  68 0002 00AF     		add	r7, sp, #0
  69              	.LCFI3:
  70              		.cfi_def_cfa_register 7
  81:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     *(__IO uint32_t*)PWR_CTRL_DBKP_BITBAND = (uint32_t)ENABLE;
  71              		.loc 1 81 5
  72 0004 034B     		ldr	r3, .L3
  73              		.loc 1 81 44
  74 0006 0122     		movs	r2, #1
  75 0008 1A60     		str	r2, [r3]
  82:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** }
  76              		.loc 1 82 1
  77 000a 00BF     		nop
  78 000c BD46     		mov	sp, r7
  79              	.LCFI4:
  80              		.cfi_def_cfa_register 13
  81              		@ sp needed
  82 000e 5DF8047B 		ldr	r7, [sp], #4
  83              	.LCFI5:
  84              		.cfi_restore 7
  85              		.cfi_def_cfa_offset 0
  86 0012 7047     		bx	lr
  87              	.L4:
  88              		.align	2
  89              	.L3:
  90 0014 20000E42 		.word	1108213792
  91              		.cfi_endproc
  92              	.LFE131:
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s 			page 4


  94              		.section	.text.PWR_RTC_Backup_Access_Disable,"ax",%progbits
  95              		.align	1
  96              		.global	PWR_RTC_Backup_Access_Disable
  97              		.syntax unified
  98              		.thumb
  99              		.thumb_func
 101              	PWR_RTC_Backup_Access_Disable:
 102              	.LFB132:
  83:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** 
  84:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** /**
  85:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\name    PWR_RTC_Backup_Access_Disable.
  86:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\fun     Disables access to the RTC and backup registers.
  87:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\param   none
  88:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\return  none
  89:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** **/
  90:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** void PWR_RTC_Backup_Access_Disable(void)
  91:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** {
 103              		.loc 1 91 1
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 1, uses_anonymous_args = 0
 107              		@ link register save eliminated.
 108 0000 80B4     		push	{r7}
 109              	.LCFI6:
 110              		.cfi_def_cfa_offset 4
 111              		.cfi_offset 7, -4
 112 0002 00AF     		add	r7, sp, #0
 113              	.LCFI7:
 114              		.cfi_def_cfa_register 7
  92:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     *(__IO uint32_t*)PWR_CTRL_DBKP_BITBAND = (uint32_t)DISABLE;
 115              		.loc 1 92 5
 116 0004 034B     		ldr	r3, .L6
 117              		.loc 1 92 44
 118 0006 0022     		movs	r2, #0
 119 0008 1A60     		str	r2, [r3]
  93:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** }
 120              		.loc 1 93 1
 121 000a 00BF     		nop
 122 000c BD46     		mov	sp, r7
 123              	.LCFI8:
 124              		.cfi_def_cfa_register 13
 125              		@ sp needed
 126 000e 5DF8047B 		ldr	r7, [sp], #4
 127              	.LCFI9:
 128              		.cfi_restore 7
 129              		.cfi_def_cfa_offset 0
 130 0012 7047     		bx	lr
 131              	.L7:
 132              		.align	2
 133              	.L6:
 134 0014 20000E42 		.word	1108213792
 135              		.cfi_endproc
 136              	.LFE132:
 138              		.section	.text.PWR_PVD_Enable,"ax",%progbits
 139              		.align	1
 140              		.global	PWR_PVD_Enable
 141              		.syntax unified
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s 			page 5


 142              		.thumb
 143              		.thumb_func
 145              	PWR_PVD_Enable:
 146              	.LFB133:
  94:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** 
  95:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** /**
  96:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\name    PWR_PVD_Enable.
  97:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\fun     Enables the Power Voltage Detector(PVD).
  98:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\param   none
  99:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\return  none
 100:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** **/
 101:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** void PWR_PVD_Enable(void)
 102:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** {
 147              		.loc 1 102 1
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 1, uses_anonymous_args = 0
 151              		@ link register save eliminated.
 152 0000 80B4     		push	{r7}
 153              	.LCFI10:
 154              		.cfi_def_cfa_offset 4
 155              		.cfi_offset 7, -4
 156 0002 00AF     		add	r7, sp, #0
 157              	.LCFI11:
 158              		.cfi_def_cfa_register 7
 103:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     *(__IO uint32_t*)PWR_CTRL_PVDEN_BITBAND = (uint32_t)ENABLE;
 159              		.loc 1 103 5
 160 0004 034B     		ldr	r3, .L9
 161              		.loc 1 103 45
 162 0006 0122     		movs	r2, #1
 163 0008 1A60     		str	r2, [r3]
 104:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** }
 164              		.loc 1 104 1
 165 000a 00BF     		nop
 166 000c BD46     		mov	sp, r7
 167              	.LCFI12:
 168              		.cfi_def_cfa_register 13
 169              		@ sp needed
 170 000e 5DF8047B 		ldr	r7, [sp], #4
 171              	.LCFI13:
 172              		.cfi_restore 7
 173              		.cfi_def_cfa_offset 0
 174 0012 7047     		bx	lr
 175              	.L10:
 176              		.align	2
 177              	.L9:
 178 0014 10000E42 		.word	1108213776
 179              		.cfi_endproc
 180              	.LFE133:
 182              		.section	.text.PWR_PVD_Disable,"ax",%progbits
 183              		.align	1
 184              		.global	PWR_PVD_Disable
 185              		.syntax unified
 186              		.thumb
 187              		.thumb_func
 189              	PWR_PVD_Disable:
 190              	.LFB134:
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s 			page 6


 105:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** 
 106:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** /**
 107:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\name    PWR_PVD_Disable.
 108:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\fun     Disables the Power Voltage Detector(PVD).
 109:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\param   none
 110:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\return  none
 111:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** **/
 112:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** void PWR_PVD_Disable(void)
 113:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** {
 191              		.loc 1 113 1
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 1, uses_anonymous_args = 0
 195              		@ link register save eliminated.
 196 0000 80B4     		push	{r7}
 197              	.LCFI14:
 198              		.cfi_def_cfa_offset 4
 199              		.cfi_offset 7, -4
 200 0002 00AF     		add	r7, sp, #0
 201              	.LCFI15:
 202              		.cfi_def_cfa_register 7
 114:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     *(__IO uint32_t*)PWR_CTRL_PVDEN_BITBAND = (uint32_t)DISABLE;
 203              		.loc 1 114 5
 204 0004 034B     		ldr	r3, .L12
 205              		.loc 1 114 45
 206 0006 0022     		movs	r2, #0
 207 0008 1A60     		str	r2, [r3]
 115:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** }
 208              		.loc 1 115 1
 209 000a 00BF     		nop
 210 000c BD46     		mov	sp, r7
 211              	.LCFI16:
 212              		.cfi_def_cfa_register 13
 213              		@ sp needed
 214 000e 5DF8047B 		ldr	r7, [sp], #4
 215              	.LCFI17:
 216              		.cfi_restore 7
 217              		.cfi_def_cfa_offset 0
 218 0012 7047     		bx	lr
 219              	.L13:
 220              		.align	2
 221              	.L12:
 222 0014 10000E42 		.word	1108213776
 223              		.cfi_endproc
 224              	.LFE134:
 226              		.section	.text.PWR_PVD_Level_Config,"ax",%progbits
 227              		.align	1
 228              		.global	PWR_PVD_Level_Config
 229              		.syntax unified
 230              		.thumb
 231              		.thumb_func
 233              	PWR_PVD_Level_Config:
 234              	.LFB135:
 116:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** 
 117:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** /**
 118:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\name    PWR_PVD_Level_Config.
 119:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\fun     Configures the voltage threshold detected by the Power Voltage Detector(PVD).
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s 			page 7


 120:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\param   level :
 121:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - PWR_PVD_LEVEL_2V18
 122:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - PWR_PVD_LEVEL_2V28
 123:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - PWR_PVD_LEVEL_2V38
 124:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - PWR_PVD_LEVEL_2V48
 125:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - PWR_PVD_LEVEL_2V58
 126:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - PWR_PVD_LEVEL_2V68
 127:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - PWR_PVD_LEVEL_2V78
 128:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - PWR_PVD_LEVEL_2V88
 129:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - PWR_PVD_LEVEL_1V78
 130:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - PWR_PVD_LEVEL_1V88
 131:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - PWR_PVD_LEVEL_1V98
 132:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - PWR_PVD_LEVEL_2V08
 133:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - PWR_PVD_LEVEL_3V28
 134:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - PWR_PVD_LEVEL_3V38
 135:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - PWR_PVD_LEVEL_3V48
 136:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - PWR_PVD_LEVEL_3V58
 137:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\return  none
 138:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** **/
 139:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** void PWR_PVD_Level_Config(uint32_t level)
 140:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** {
 235              		.loc 1 140 1
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 16
 238              		@ frame_needed = 1, uses_anonymous_args = 0
 239              		@ link register save eliminated.
 240 0000 80B4     		push	{r7}
 241              	.LCFI18:
 242              		.cfi_def_cfa_offset 4
 243              		.cfi_offset 7, -4
 244 0002 85B0     		sub	sp, sp, #20
 245              	.LCFI19:
 246              		.cfi_def_cfa_offset 24
 247 0004 00AF     		add	r7, sp, #0
 248              	.LCFI20:
 249              		.cfi_def_cfa_register 7
 250 0006 7860     		str	r0, [r7, #4]
 141:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     uint32_t temp_value = 0;
 251              		.loc 1 141 14
 252 0008 0023     		movs	r3, #0
 253 000a FB60     		str	r3, [r7, #12]
 142:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     temp_value = PWR->CTRL;
 254              		.loc 1 142 21
 255 000c 094B     		ldr	r3, .L15
 256              		.loc 1 142 16
 257 000e 1B68     		ldr	r3, [r3]
 258 0010 FB60     		str	r3, [r7, #12]
 143:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     /* Clear PLS[7:5] bits and MSB bit */
 144:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     temp_value &= PWR_CTRL_PLSMSB_MASK;
 259              		.loc 1 144 16
 260 0012 FB68     		ldr	r3, [r7, #12]
 261 0014 23F43873 		bic	r3, r3, #736
 262 0018 FB60     		str	r3, [r7, #12]
 145:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     /* Set PLS[7:5] bits according to level value */
 146:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     temp_value |= level;
 263              		.loc 1 146 16
 264 001a FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s 			page 8


 265 001c 7B68     		ldr	r3, [r7, #4]
 266 001e 1343     		orrs	r3, r3, r2
 267 0020 FB60     		str	r3, [r7, #12]
 147:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     /* Store the new value */
 148:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     PWR->CTRL = temp_value;
 268              		.loc 1 148 8
 269 0022 044A     		ldr	r2, .L15
 270              		.loc 1 148 15
 271 0024 FB68     		ldr	r3, [r7, #12]
 272 0026 1360     		str	r3, [r2]
 149:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** }
 273              		.loc 1 149 1
 274 0028 00BF     		nop
 275 002a 1437     		adds	r7, r7, #20
 276              	.LCFI21:
 277              		.cfi_def_cfa_offset 4
 278 002c BD46     		mov	sp, r7
 279              	.LCFI22:
 280              		.cfi_def_cfa_register 13
 281              		@ sp needed
 282 002e 5DF8047B 		ldr	r7, [sp], #4
 283              	.LCFI23:
 284              		.cfi_restore 7
 285              		.cfi_def_cfa_offset 0
 286 0032 7047     		bx	lr
 287              	.L16:
 288              		.align	2
 289              	.L15:
 290 0034 00700040 		.word	1073770496
 291              		.cfi_endproc
 292              	.LFE135:
 294              		.section	.text.PWR_Wakeup_Pin_Enable,"ax",%progbits
 295              		.align	1
 296              		.global	PWR_Wakeup_Pin_Enable
 297              		.syntax unified
 298              		.thumb
 299              		.thumb_func
 301              	PWR_Wakeup_Pin_Enable:
 302              	.LFB136:
 150:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** 
 151:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** 
 152:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** /**
 153:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\name    PWR_Wakeup_Pin_Enable.
 154:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\fun     Enables the Wakeup Pin functionality.
 155:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\param   pin :
 156:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - WAKEUP_PIN1 PA8
 157:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - WAKEUP_PIN2 PA0
 158:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - WAKEUP_PIN3 PC13
 159:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\param   polarity :
 160:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - PWR_PIN_RISING
 161:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - PWR_PIN_FALLING
 162:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\return  none
 163:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** **/
 164:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** void PWR_Wakeup_Pin_Enable(WAKEUP_PINX pin, uint32_t polarity)
 165:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** {
 303              		.loc 1 165 1
 304              		.cfi_startproc
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s 			page 9


 305              		@ args = 0, pretend = 0, frame = 8
 306              		@ frame_needed = 1, uses_anonymous_args = 0
 307              		@ link register save eliminated.
 308 0000 80B4     		push	{r7}
 309              	.LCFI24:
 310              		.cfi_def_cfa_offset 4
 311              		.cfi_offset 7, -4
 312 0002 83B0     		sub	sp, sp, #12
 313              	.LCFI25:
 314              		.cfi_def_cfa_offset 16
 315 0004 00AF     		add	r7, sp, #0
 316              	.LCFI26:
 317              		.cfi_def_cfa_register 7
 318 0006 0346     		mov	r3, r0
 319 0008 3960     		str	r1, [r7]
 320 000a FB80     		strh	r3, [r7, #6]	@ movhi
 166:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     switch(pin)
 321              		.loc 1 166 5
 322 000c FB88     		ldrh	r3, [r7, #6]
 323 000e B3F5806F 		cmp	r3, #1024
 324 0012 17D0     		beq	.L18
 325 0014 B3F5806F 		cmp	r3, #1024
 326 0018 1BDC     		bgt	.L23
 327 001a B3F5807F 		cmp	r3, #256
 328 001e 03D0     		beq	.L20
 329 0020 B3F5007F 		cmp	r3, #512
 330 0024 07D0     		beq	.L21
 167:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     {
 168:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         case WAKEUP_PIN1:
 169:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****             *(__IO uint32_t*)PWR_CTRLSTS_WKUP1PS_BITBAND = polarity;
 170:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****             *(__IO uint32_t*)PWR_CTRLSTS_WKUP1EN_BITBAND = (uint32_t)ENABLE;
 171:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****             break;
 172:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         case WAKEUP_PIN2:
 173:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****             *(__IO uint32_t*)PWR_CTRLSTS_WKUP2PS_BITBAND = polarity;
 174:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****             *(__IO uint32_t*)PWR_CTRLSTS_WKUP2EN_BITBAND = (uint32_t)ENABLE;
 175:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****             break;
 176:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         case WAKEUP_PIN3:
 177:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****             *(__IO uint32_t*)PWR_CTRLSTS_WKUP3PS_BITBAND = polarity;
 178:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****             *(__IO uint32_t*)PWR_CTRLSTS_WKUP3EN_BITBAND = (uint32_t)ENABLE;
 179:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****             break;
 180:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         default:
 181:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****             break;
 331              		.loc 1 181 13
 332 0026 14E0     		b	.L23
 333              	.L20:
 169:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****             *(__IO uint32_t*)PWR_CTRLSTS_WKUP1EN_BITBAND = (uint32_t)ENABLE;
 334              		.loc 1 169 13
 335 0028 0D4A     		ldr	r2, .L24
 169:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****             *(__IO uint32_t*)PWR_CTRLSTS_WKUP1EN_BITBAND = (uint32_t)ENABLE;
 336              		.loc 1 169 58
 337 002a 3B68     		ldr	r3, [r7]
 338 002c 1360     		str	r3, [r2]
 170:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****             break;
 339              		.loc 1 170 13
 340 002e 0D4B     		ldr	r3, .L24+4
 170:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****             break;
 341              		.loc 1 170 58
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s 			page 10


 342 0030 0122     		movs	r2, #1
 343 0032 1A60     		str	r2, [r3]
 171:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         case WAKEUP_PIN2:
 344              		.loc 1 171 13
 345 0034 0EE0     		b	.L22
 346              	.L21:
 173:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****             *(__IO uint32_t*)PWR_CTRLSTS_WKUP2EN_BITBAND = (uint32_t)ENABLE;
 347              		.loc 1 173 13
 348 0036 0C4A     		ldr	r2, .L24+8
 173:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****             *(__IO uint32_t*)PWR_CTRLSTS_WKUP2EN_BITBAND = (uint32_t)ENABLE;
 349              		.loc 1 173 58
 350 0038 3B68     		ldr	r3, [r7]
 351 003a 1360     		str	r3, [r2]
 174:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****             break;
 352              		.loc 1 174 13
 353 003c 0B4B     		ldr	r3, .L24+12
 174:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****             break;
 354              		.loc 1 174 58
 355 003e 0122     		movs	r2, #1
 356 0040 1A60     		str	r2, [r3]
 175:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         case WAKEUP_PIN3:
 357              		.loc 1 175 13
 358 0042 07E0     		b	.L22
 359              	.L18:
 177:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****             *(__IO uint32_t*)PWR_CTRLSTS_WKUP3EN_BITBAND = (uint32_t)ENABLE;
 360              		.loc 1 177 13
 361 0044 0A4A     		ldr	r2, .L24+16
 177:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****             *(__IO uint32_t*)PWR_CTRLSTS_WKUP3EN_BITBAND = (uint32_t)ENABLE;
 362              		.loc 1 177 58
 363 0046 3B68     		ldr	r3, [r7]
 364 0048 1360     		str	r3, [r2]
 178:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****             break;
 365              		.loc 1 178 13
 366 004a 0A4B     		ldr	r3, .L24+20
 178:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****             break;
 367              		.loc 1 178 58
 368 004c 0122     		movs	r2, #1
 369 004e 1A60     		str	r2, [r3]
 179:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         default:
 370              		.loc 1 179 13
 371 0050 00E0     		b	.L22
 372              	.L23:
 373              		.loc 1 181 13
 374 0052 00BF     		nop
 375              	.L22:
 182:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     }
 183:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** }
 376              		.loc 1 183 1
 377 0054 00BF     		nop
 378 0056 0C37     		adds	r7, r7, #12
 379              	.LCFI27:
 380              		.cfi_def_cfa_offset 4
 381 0058 BD46     		mov	sp, r7
 382              	.LCFI28:
 383              		.cfi_def_cfa_register 13
 384              		@ sp needed
 385 005a 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s 			page 11


 386              	.LCFI29:
 387              		.cfi_restore 7
 388              		.cfi_def_cfa_offset 0
 389 005e 7047     		bx	lr
 390              	.L25:
 391              		.align	2
 392              	.L24:
 393 0060 B0000E42 		.word	1108213936
 394 0064 A0000E42 		.word	1108213920
 395 0068 B4000E42 		.word	1108213940
 396 006c A4000E42 		.word	1108213924
 397 0070 B8000E42 		.word	1108213944
 398 0074 A8000E42 		.word	1108213928
 399              		.cfi_endproc
 400              	.LFE136:
 402              		.section	.text.PWR_Wakeup_Pin_Disable,"ax",%progbits
 403              		.align	1
 404              		.global	PWR_Wakeup_Pin_Disable
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 409              	PWR_Wakeup_Pin_Disable:
 410              	.LFB137:
 184:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** 
 185:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** /**
 186:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\name    PWR_Wakeup_Pin_Disable.
 187:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\fun     Disables the WakeUp Pin functionality.
 188:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\param   pin :
 189:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - WAKEUP_PIN1 PA8
 190:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - WAKEUP_PIN2 PA0
 191:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - WAKEUP_PIN3 PC13
 192:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\return  none
 193:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** **/
 194:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** void PWR_Wakeup_Pin_Disable(WAKEUP_PINX pin)
 195:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** {
 411              		.loc 1 195 1
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 8
 414              		@ frame_needed = 1, uses_anonymous_args = 0
 415              		@ link register save eliminated.
 416 0000 80B4     		push	{r7}
 417              	.LCFI30:
 418              		.cfi_def_cfa_offset 4
 419              		.cfi_offset 7, -4
 420 0002 83B0     		sub	sp, sp, #12
 421              	.LCFI31:
 422              		.cfi_def_cfa_offset 16
 423 0004 00AF     		add	r7, sp, #0
 424              	.LCFI32:
 425              		.cfi_def_cfa_register 7
 426 0006 0346     		mov	r3, r0
 427 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 196:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     switch(pin)
 428              		.loc 1 196 5
 429 000a FB88     		ldrh	r3, [r7, #6]
 430 000c B3F5806F 		cmp	r3, #1024
 431 0010 11D0     		beq	.L27
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s 			page 12


 432 0012 B3F5806F 		cmp	r3, #1024
 433 0016 12DC     		bgt	.L32
 434 0018 B3F5807F 		cmp	r3, #256
 435 001c 03D0     		beq	.L29
 436 001e B3F5007F 		cmp	r3, #512
 437 0022 04D0     		beq	.L30
 197:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     {
 198:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         case WAKEUP_PIN1:
 199:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****             *(__IO uint32_t*)PWR_CTRLSTS_WKUP1EN_BITBAND = (uint32_t)DISABLE;
 200:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****             break;
 201:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         case WAKEUP_PIN2:
 202:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****             *(__IO uint32_t*)PWR_CTRLSTS_WKUP2EN_BITBAND = (uint32_t)DISABLE;
 203:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****             break;
 204:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         case WAKEUP_PIN3:
 205:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****             *(__IO uint32_t*)PWR_CTRLSTS_WKUP3EN_BITBAND = (uint32_t)DISABLE;
 206:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****             break;
 207:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         default:
 208:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****             break;
 438              		.loc 1 208 13
 439 0024 0BE0     		b	.L32
 440              	.L29:
 199:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****             break;
 441              		.loc 1 199 13
 442 0026 094B     		ldr	r3, .L33
 199:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****             break;
 443              		.loc 1 199 58
 444 0028 0022     		movs	r2, #0
 445 002a 1A60     		str	r2, [r3]
 200:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         case WAKEUP_PIN2:
 446              		.loc 1 200 13
 447 002c 08E0     		b	.L31
 448              	.L30:
 202:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****             break;
 449              		.loc 1 202 13
 450 002e 084B     		ldr	r3, .L33+4
 202:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****             break;
 451              		.loc 1 202 58
 452 0030 0022     		movs	r2, #0
 453 0032 1A60     		str	r2, [r3]
 203:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         case WAKEUP_PIN3:
 454              		.loc 1 203 13
 455 0034 04E0     		b	.L31
 456              	.L27:
 205:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****             break;
 457              		.loc 1 205 13
 458 0036 074B     		ldr	r3, .L33+8
 205:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****             break;
 459              		.loc 1 205 58
 460 0038 0022     		movs	r2, #0
 461 003a 1A60     		str	r2, [r3]
 206:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         default:
 462              		.loc 1 206 13
 463 003c 00E0     		b	.L31
 464              	.L32:
 465              		.loc 1 208 13
 466 003e 00BF     		nop
 467              	.L31:
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s 			page 13


 209:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     }
 210:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** }
 468              		.loc 1 210 1
 469 0040 00BF     		nop
 470 0042 0C37     		adds	r7, r7, #12
 471              	.LCFI33:
 472              		.cfi_def_cfa_offset 4
 473 0044 BD46     		mov	sp, r7
 474              	.LCFI34:
 475              		.cfi_def_cfa_register 13
 476              		@ sp needed
 477 0046 5DF8047B 		ldr	r7, [sp], #4
 478              	.LCFI35:
 479              		.cfi_restore 7
 480              		.cfi_def_cfa_offset 0
 481 004a 7047     		bx	lr
 482              	.L34:
 483              		.align	2
 484              	.L33:
 485 004c A0000E42 		.word	1108213920
 486 0050 A4000E42 		.word	1108213924
 487 0054 A8000E42 		.word	1108213928
 488              		.cfi_endproc
 489              	.LFE137:
 491              		.section	.text.PWR_RTC_Wakeup_Enable,"ax",%progbits
 492              		.align	1
 493              		.global	PWR_RTC_Wakeup_Enable
 494              		.syntax unified
 495              		.thumb
 496              		.thumb_func
 498              	PWR_RTC_Wakeup_Enable:
 499              	.LFB138:
 211:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** 
 212:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** /**
 213:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\name    PWR_RTC_Wakeup_Enable.
 214:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\fun     Enables RTC internal wakeup.
 215:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\param   none
 216:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\return  none
 217:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** **/
 218:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** void PWR_RTC_Wakeup_Enable(void)
 219:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** {
 500              		.loc 1 219 1
 501              		.cfi_startproc
 502              		@ args = 0, pretend = 0, frame = 0
 503              		@ frame_needed = 1, uses_anonymous_args = 0
 504              		@ link register save eliminated.
 505 0000 80B4     		push	{r7}
 506              	.LCFI36:
 507              		.cfi_def_cfa_offset 4
 508              		.cfi_offset 7, -4
 509 0002 00AF     		add	r7, sp, #0
 510              	.LCFI37:
 511              		.cfi_def_cfa_register 7
 220:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     *(__IO uint32_t*)PWR_CTRLSTS_WKUPRTCEN_BITBAND = (uint32_t)ENABLE;
 512              		.loc 1 220 5
 513 0004 034B     		ldr	r3, .L36
 514              		.loc 1 220 52
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s 			page 14


 515 0006 0122     		movs	r2, #1
 516 0008 1A60     		str	r2, [r3]
 221:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** }
 517              		.loc 1 221 1
 518 000a 00BF     		nop
 519 000c BD46     		mov	sp, r7
 520              	.LCFI38:
 521              		.cfi_def_cfa_register 13
 522              		@ sp needed
 523 000e 5DF8047B 		ldr	r7, [sp], #4
 524              	.LCFI39:
 525              		.cfi_restore 7
 526              		.cfi_def_cfa_offset 0
 527 0012 7047     		bx	lr
 528              	.L37:
 529              		.align	2
 530              	.L36:
 531 0014 AC000E42 		.word	1108213932
 532              		.cfi_endproc
 533              	.LFE138:
 535              		.section	.text.PWR_RTC_Wakeup_Disable,"ax",%progbits
 536              		.align	1
 537              		.global	PWR_RTC_Wakeup_Disable
 538              		.syntax unified
 539              		.thumb
 540              		.thumb_func
 542              	PWR_RTC_Wakeup_Disable:
 543              	.LFB139:
 222:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** 
 223:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** /**
 224:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\name    PWR_RTC_Wakeup_Disable.
 225:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\fun     Disables RTC internal wakeup.
 226:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\param   none
 227:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\return  none
 228:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** **/
 229:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** void PWR_RTC_Wakeup_Disable(void)
 230:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** {
 544              		.loc 1 230 1
 545              		.cfi_startproc
 546              		@ args = 0, pretend = 0, frame = 0
 547              		@ frame_needed = 1, uses_anonymous_args = 0
 548              		@ link register save eliminated.
 549 0000 80B4     		push	{r7}
 550              	.LCFI40:
 551              		.cfi_def_cfa_offset 4
 552              		.cfi_offset 7, -4
 553 0002 00AF     		add	r7, sp, #0
 554              	.LCFI41:
 555              		.cfi_def_cfa_register 7
 231:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     *(__IO uint32_t*)PWR_CTRLSTS_WKUPRTCEN_BITBAND = (uint32_t)DISABLE;
 556              		.loc 1 231 5
 557 0004 034B     		ldr	r3, .L39
 558              		.loc 1 231 52
 559 0006 0022     		movs	r2, #0
 560 0008 1A60     		str	r2, [r3]
 232:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** }
 561              		.loc 1 232 1
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s 			page 15


 562 000a 00BF     		nop
 563 000c BD46     		mov	sp, r7
 564              	.LCFI42:
 565              		.cfi_def_cfa_register 13
 566              		@ sp needed
 567 000e 5DF8047B 		ldr	r7, [sp], #4
 568              	.LCFI43:
 569              		.cfi_restore 7
 570              		.cfi_def_cfa_offset 0
 571 0012 7047     		bx	lr
 572              	.L40:
 573              		.align	2
 574              	.L39:
 575 0014 AC000E42 		.word	1108213932
 576              		.cfi_endproc
 577              	.LFE139:
 579              		.section	.text.PWR_SLEEP_Mode_Enter,"ax",%progbits
 580              		.align	1
 581              		.global	PWR_SLEEP_Mode_Enter
 582              		.syntax unified
 583              		.thumb
 584              		.thumb_func
 586              	PWR_SLEEP_Mode_Enter:
 587              	.LFB140:
 233:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** 
 234:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** /**
 235:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\name    PWR_SLEEP_Mode_Enter.
 236:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\fun     Enters SLEEP mode.
 237:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\param   status :
 238:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - PWR_SLEEP_ON_EXIT
 239:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - PWR_SLEEP_NOW
 240:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\param   enter_mode :
 241:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - PWR_SLEEP_ENTRY_WFI enter SLEEP mode with WFI instruction
 242:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - PWR_SLEEP_ENTRY_WFE enter SLEEP mode with WFE instruction
 243:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\return  none
 244:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** **/
 245:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** void PWR_SLEEP_Mode_Enter(PWR_SLEEPONEXIT_STATUS status, uint8_t enter_mode)
 246:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** {
 588              		.loc 1 246 1
 589              		.cfi_startproc
 590              		@ args = 0, pretend = 0, frame = 8
 591              		@ frame_needed = 1, uses_anonymous_args = 0
 592              		@ link register save eliminated.
 593 0000 80B4     		push	{r7}
 594              	.LCFI44:
 595              		.cfi_def_cfa_offset 4
 596              		.cfi_offset 7, -4
 597 0002 83B0     		sub	sp, sp, #12
 598              	.LCFI45:
 599              		.cfi_def_cfa_offset 16
 600 0004 00AF     		add	r7, sp, #0
 601              	.LCFI46:
 602              		.cfi_def_cfa_register 7
 603 0006 0346     		mov	r3, r0
 604 0008 0A46     		mov	r2, r1
 605 000a FB71     		strb	r3, [r7, #7]
 606 000c 1346     		mov	r3, r2
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s 			page 16


 607 000e BB71     		strb	r3, [r7, #6]
 247:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     /* CLEAR SLEEPDEEP bit of Cortex System Control Register */
 248:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     SCB->SCR &= (uint32_t) ~((uint32_t)SCB_SCR_SLEEPDEEP);
 608              		.loc 1 248 8
 609 0010 134B     		ldr	r3, .L47
 610 0012 1B69     		ldr	r3, [r3, #16]
 611 0014 124A     		ldr	r2, .L47
 612              		.loc 1 248 14
 613 0016 23F00403 		bic	r3, r3, #4
 614 001a 1361     		str	r3, [r2, #16]
 249:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     
 250:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     /* Select SLEEPONEXIT mode entry */
 251:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     if (status == PWR_SLEEP_ON_EXIT)
 615              		.loc 1 251 8
 616 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 617 001e 012B     		cmp	r3, #1
 618 0020 06D1     		bne	.L42
 252:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     {
 253:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         /* the MCU enters Sleep mode as soon as it exits the lowest priority INTSTS */
 254:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         SCB->SCR |= SCB_SCR_SLEEPONEXIT;
 619              		.loc 1 254 12
 620 0022 0F4B     		ldr	r3, .L47
 621 0024 1B69     		ldr	r3, [r3, #16]
 622 0026 0E4A     		ldr	r2, .L47
 623              		.loc 1 254 18
 624 0028 43F00203 		orr	r3, r3, #2
 625 002c 1361     		str	r3, [r2, #16]
 626 002e 08E0     		b	.L43
 627              	.L42:
 255:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     }
 256:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     else if (status == PWR_SLEEP_NOW)
 628              		.loc 1 256 13
 629 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 630 0032 002B     		cmp	r3, #0
 631 0034 05D1     		bne	.L43
 257:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     {
 258:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         /* Sleep-now */
 259:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         SCB->SCR &= (uint32_t) ~((uint32_t)SCB_SCR_SLEEPONEXIT);
 632              		.loc 1 259 12
 633 0036 0A4B     		ldr	r3, .L47
 634 0038 1B69     		ldr	r3, [r3, #16]
 635 003a 094A     		ldr	r2, .L47
 636              		.loc 1 259 18
 637 003c 23F00203 		bic	r3, r3, #2
 638 0040 1361     		str	r3, [r2, #16]
 639              	.L43:
 260:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     }
 261:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** 
 262:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     /* Select SLEEP mode entry */
 263:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     if (enter_mode == PWR_SLEEP_ENTRY_WFI)
 640              		.loc 1 263 8
 641 0042 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 642 0044 012B     		cmp	r3, #1
 643 0046 01D1     		bne	.L44
 264:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     {
 265:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         /* Request Wait For Interrupt */
 266:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         __WFI();
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s 			page 17


 644              		.loc 1 266 9
 645              		.syntax unified
 646              	@ 266 "../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c" 1
 647 0048 30BF     		wfi
 648              	@ 0 "" 2
 267:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     }
 268:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     else
 269:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     {
 270:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         /* Request Wait For Event */
 271:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         __SEV();
 272:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         __WFE();
 273:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         __WFE();
 274:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     }
 275:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** }
 649              		.loc 1 275 1
 650              		.thumb
 651              		.syntax unified
 652 004a 02E0     		b	.L46
 653              	.L44:
 271:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         __WFE();
 654              		.loc 1 271 9
 655              		.syntax unified
 656              	@ 271 "../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c" 1
 657 004c 40BF     		sev
 658              	@ 0 "" 2
 272:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         __WFE();
 659              		.loc 1 272 9
 660              	@ 272 "../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c" 1
 661 004e 20BF     		wfe
 662              	@ 0 "" 2
 273:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     }
 663              		.loc 1 273 9
 664              	@ 273 "../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c" 1
 665 0050 20BF     		wfe
 666              	@ 0 "" 2
 667              		.thumb
 668              		.syntax unified
 669              	.L46:
 670              		.loc 1 275 1
 671 0052 00BF     		nop
 672 0054 0C37     		adds	r7, r7, #12
 673              	.LCFI47:
 674              		.cfi_def_cfa_offset 4
 675 0056 BD46     		mov	sp, r7
 676              	.LCFI48:
 677              		.cfi_def_cfa_register 13
 678              		@ sp needed
 679 0058 5DF8047B 		ldr	r7, [sp], #4
 680              	.LCFI49:
 681              		.cfi_restore 7
 682              		.cfi_def_cfa_offset 0
 683 005c 7047     		bx	lr
 684              	.L48:
 685 005e 00BF     		.align	2
 686              	.L47:
 687 0060 00ED00E0 		.word	-536810240
 688              		.cfi_endproc
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s 			page 18


 689              	.LFE140:
 691              		.section	.text.PWR_STOP0_Mode_Enter,"ax",%progbits
 692              		.align	1
 693              		.global	PWR_STOP0_Mode_Enter
 694              		.syntax unified
 695              		.thumb
 696              		.thumb_func
 698              	PWR_STOP0_Mode_Enter:
 699              	.LFB141:
 276:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** 
 277:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** /**
 278:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\name    PWR_STOP0_Mode_Enter.
 279:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\fun     Enters STOP0 mode.
 280:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\param   status :
 281:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - PWR_REGULATOR_ON
 282:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - PWR_REGULATOR_LOWPOWER
 283:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\param   enter_mode :
 284:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - PWR_STOP0_ENTRY_WFI (enter STOP0 mode with WFI instruction)
 285:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - PWR_STOP0_ENTRY_WFE (enter STOP0 mode with WFE instruction)
 286:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\return  none
 287:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** **/
 288:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** void PWR_STOP0_Mode_Enter(uint32_t status, uint8_t enter_mode)
 289:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** {
 700              		.loc 1 289 1
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 16
 703              		@ frame_needed = 1, uses_anonymous_args = 0
 704              		@ link register save eliminated.
 705 0000 80B4     		push	{r7}
 706              	.LCFI50:
 707              		.cfi_def_cfa_offset 4
 708              		.cfi_offset 7, -4
 709 0002 85B0     		sub	sp, sp, #20
 710              	.LCFI51:
 711              		.cfi_def_cfa_offset 24
 712 0004 00AF     		add	r7, sp, #0
 713              	.LCFI52:
 714              		.cfi_def_cfa_register 7
 715 0006 7860     		str	r0, [r7, #4]
 716 0008 0B46     		mov	r3, r1
 717 000a FB70     		strb	r3, [r7, #3]
 290:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     uint32_t temp_value = 0;
 718              		.loc 1 290 14
 719 000c 0023     		movs	r3, #0
 720 000e FB60     		str	r3, [r7, #12]
 291:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     /* Select the regulator state in STOP0 mode */
 292:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     temp_value = PWR->CTRL;
 721              		.loc 1 292 21
 722 0010 134B     		ldr	r3, .L52
 723              		.loc 1 292 16
 724 0012 1B68     		ldr	r3, [r3]
 725 0014 FB60     		str	r3, [r7, #12]
 293:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     /* Clear LPS and PDS bits */
 294:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     temp_value &= PWR_CTRL_LPSPDS_MASK;
 726              		.loc 1 294 16
 727 0016 FB68     		ldr	r3, [r7, #12]
 728 0018 23F00303 		bic	r3, r3, #3
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s 			page 19


 729 001c FB60     		str	r3, [r7, #12]
 295:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     /* Set LPS bit according to PWR_Regulator value */
 296:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     temp_value |= status;
 730              		.loc 1 296 16
 731 001e FA68     		ldr	r2, [r7, #12]
 732 0020 7B68     		ldr	r3, [r7, #4]
 733 0022 1343     		orrs	r3, r3, r2
 734 0024 FB60     		str	r3, [r7, #12]
 297:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     /* Store the new value */
 298:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     PWR->CTRL = temp_value;
 735              		.loc 1 298 8
 736 0026 0E4A     		ldr	r2, .L52
 737              		.loc 1 298 15
 738 0028 FB68     		ldr	r3, [r7, #12]
 739 002a 1360     		str	r3, [r2]
 299:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     /* Set SLEEPDEEP bit of Cortex System Control Register */
 300:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     SCB->SCR |= SCB_SCR_SLEEPDEEP;
 740              		.loc 1 300 8
 741 002c 0D4B     		ldr	r3, .L52+4
 742 002e 1B69     		ldr	r3, [r3, #16]
 743 0030 0C4A     		ldr	r2, .L52+4
 744              		.loc 1 300 14
 745 0032 43F00403 		orr	r3, r3, #4
 746 0036 1361     		str	r3, [r2, #16]
 301:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** 
 302:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     /* Select STOP0 mode entry */
 303:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     if (enter_mode == PWR_STOP0_ENTRY_WFI)
 747              		.loc 1 303 8
 748 0038 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 749 003a 012B     		cmp	r3, #1
 750 003c 01D1     		bne	.L50
 304:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     {
 305:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         /* Request Wait For Interrupt */
 306:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         __WFI();
 751              		.loc 1 306 9
 752              		.syntax unified
 753              	@ 306 "../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c" 1
 754 003e 30BF     		wfi
 755              	@ 0 "" 2
 756              		.thumb
 757              		.syntax unified
 758 0040 02E0     		b	.L51
 759              	.L50:
 307:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     }
 308:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     else
 309:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     {
 310:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         /* Request Wait For Event */
 311:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         __SEV();
 760              		.loc 1 311 9
 761              		.syntax unified
 762              	@ 311 "../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c" 1
 763 0042 40BF     		sev
 764              	@ 0 "" 2
 312:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         __WFE();
 765              		.loc 1 312 9
 766              	@ 312 "../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c" 1
 767 0044 20BF     		wfe
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s 			page 20


 768              	@ 0 "" 2
 313:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         __WFE();
 769              		.loc 1 313 9
 770              	@ 313 "../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c" 1
 771 0046 20BF     		wfe
 772              	@ 0 "" 2
 773              		.thumb
 774              		.syntax unified
 775              	.L51:
 314:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     }
 315:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     /* Reset SLEEPDEEP bit of Cortex System Control Register */
 316:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     SCB->SCR &= (uint32_t) ~((uint32_t)SCB_SCR_SLEEPDEEP);
 776              		.loc 1 316 8
 777 0048 064B     		ldr	r3, .L52+4
 778 004a 1B69     		ldr	r3, [r3, #16]
 779 004c 054A     		ldr	r2, .L52+4
 780              		.loc 1 316 14
 781 004e 23F00403 		bic	r3, r3, #4
 782 0052 1361     		str	r3, [r2, #16]
 317:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** }
 783              		.loc 1 317 1
 784 0054 00BF     		nop
 785 0056 1437     		adds	r7, r7, #20
 786              	.LCFI53:
 787              		.cfi_def_cfa_offset 4
 788 0058 BD46     		mov	sp, r7
 789              	.LCFI54:
 790              		.cfi_def_cfa_register 13
 791              		@ sp needed
 792 005a 5DF8047B 		ldr	r7, [sp], #4
 793              	.LCFI55:
 794              		.cfi_restore 7
 795              		.cfi_def_cfa_offset 0
 796 005e 7047     		bx	lr
 797              	.L53:
 798              		.align	2
 799              	.L52:
 800 0060 00700040 		.word	1073770496
 801 0064 00ED00E0 		.word	-536810240
 802              		.cfi_endproc
 803              	.LFE141:
 805              		.section	.text.PWR_STOP2_Mode_Enter,"ax",%progbits
 806              		.align	1
 807              		.global	PWR_STOP2_Mode_Enter
 808              		.syntax unified
 809              		.thumb
 810              		.thumb_func
 812              	PWR_STOP2_Mode_Enter:
 813              	.LFB142:
 318:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** 
 319:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** /**
 320:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\name    PWR_STOP2_Mode_Enter.
 321:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\fun     Enters STOP2 mode.
 322:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\param   enter_mode :
 323:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - PWR_STOP2_ENTRY_WFI (enter STOP2 mode with WFI instruction)
 324:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - PWR_STOP2_ENTRY_WFE (enter STOP2 mode with WFE instruction)
 325:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\return  none
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s 			page 21


 326:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** **/
 327:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** void PWR_STOP2_Mode_Enter(uint8_t enter_mode)
 328:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** {
 814              		.loc 1 328 1
 815              		.cfi_startproc
 816              		@ args = 0, pretend = 0, frame = 16
 817              		@ frame_needed = 1, uses_anonymous_args = 0
 818              		@ link register save eliminated.
 819 0000 80B4     		push	{r7}
 820              	.LCFI56:
 821              		.cfi_def_cfa_offset 4
 822              		.cfi_offset 7, -4
 823 0002 85B0     		sub	sp, sp, #20
 824              	.LCFI57:
 825              		.cfi_def_cfa_offset 24
 826 0004 00AF     		add	r7, sp, #0
 827              	.LCFI58:
 828              		.cfi_def_cfa_register 7
 829 0006 0346     		mov	r3, r0
 830 0008 FB71     		strb	r3, [r7, #7]
 329:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     uint32_t temp_value = 0;
 831              		.loc 1 329 14
 832 000a 0023     		movs	r3, #0
 833 000c FB60     		str	r3, [r7, #12]
 330:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** 
 331:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     /* Select the regulator state in STOP2 mode */
 332:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     temp_value = PWR->CTRL;
 834              		.loc 1 332 21
 835 000e 154B     		ldr	r3, .L57
 836              		.loc 1 332 16
 837 0010 1B68     		ldr	r3, [r3]
 838 0012 FB60     		str	r3, [r7, #12]
 333:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     /* Clear PDS and LPS bits */
 334:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     temp_value &= PWR_CTRL_LPSPDS_MASK;
 839              		.loc 1 334 16
 840 0014 FB68     		ldr	r3, [r7, #12]
 841 0016 23F00303 		bic	r3, r3, #3
 842 001a FB60     		str	r3, [r7, #12]
 335:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     /* Store the new value */
 336:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     PWR->CTRL = temp_value;
 843              		.loc 1 336 8
 844 001c 114A     		ldr	r2, .L57
 845              		.loc 1 336 15
 846 001e FB68     		ldr	r3, [r7, #12]
 847 0020 1360     		str	r3, [r2]
 337:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     /*STOP2 sleep mode control-stop2s*/
 338:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     PWR->CTRL2 |= PWR_STOP2_ENABLE;
 848              		.loc 1 338 8
 849 0022 104B     		ldr	r3, .L57
 850 0024 9B68     		ldr	r3, [r3, #8]
 851 0026 0F4A     		ldr	r2, .L57
 852              		.loc 1 338 16
 853 0028 43F00103 		orr	r3, r3, #1
 854 002c 9360     		str	r3, [r2, #8]
 339:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     /* Set SLEEPDEEP bit of Cortex System Control Register */
 340:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     SCB->SCR |= SCB_SCR_SLEEPDEEP;
 855              		.loc 1 340 8
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s 			page 22


 856 002e 0E4B     		ldr	r3, .L57+4
 857 0030 1B69     		ldr	r3, [r3, #16]
 858 0032 0D4A     		ldr	r2, .L57+4
 859              		.loc 1 340 14
 860 0034 43F00403 		orr	r3, r3, #4
 861 0038 1361     		str	r3, [r2, #16]
 341:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** 
 342:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     /* Select STOP2 mode entry */
 343:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     if (enter_mode == PWR_STOP2_ENTRY_WFI)
 862              		.loc 1 343 8
 863 003a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 864 003c 012B     		cmp	r3, #1
 865 003e 01D1     		bne	.L55
 344:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     {
 345:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         /* Request Wait For Interrupt */
 346:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         __WFI();
 866              		.loc 1 346 9
 867              		.syntax unified
 868              	@ 346 "../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c" 1
 869 0040 30BF     		wfi
 870              	@ 0 "" 2
 871              		.thumb
 872              		.syntax unified
 873 0042 02E0     		b	.L56
 874              	.L55:
 347:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     }
 348:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     else
 349:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     {
 350:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         /* Request Wait For Event */
 351:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         __SEV();
 875              		.loc 1 351 9
 876              		.syntax unified
 877              	@ 351 "../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c" 1
 878 0044 40BF     		sev
 879              	@ 0 "" 2
 352:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         __WFE();
 880              		.loc 1 352 9
 881              	@ 352 "../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c" 1
 882 0046 20BF     		wfe
 883              	@ 0 "" 2
 353:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         __WFE();
 884              		.loc 1 353 9
 885              	@ 353 "../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c" 1
 886 0048 20BF     		wfe
 887              	@ 0 "" 2
 888              		.thumb
 889              		.syntax unified
 890              	.L56:
 354:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     }
 355:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     /* Reset SLEEPDEEP bit of Cortex System Control Register */
 356:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     SCB->SCR &= (uint32_t) ~((uint32_t)SCB_SCR_SLEEPDEEP);
 891              		.loc 1 356 8
 892 004a 074B     		ldr	r3, .L57+4
 893 004c 1B69     		ldr	r3, [r3, #16]
 894 004e 064A     		ldr	r2, .L57+4
 895              		.loc 1 356 14
 896 0050 23F00403 		bic	r3, r3, #4
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s 			page 23


 897 0054 1361     		str	r3, [r2, #16]
 357:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** }
 898              		.loc 1 357 1
 899 0056 00BF     		nop
 900 0058 1437     		adds	r7, r7, #20
 901              	.LCFI59:
 902              		.cfi_def_cfa_offset 4
 903 005a BD46     		mov	sp, r7
 904              	.LCFI60:
 905              		.cfi_def_cfa_register 13
 906              		@ sp needed
 907 005c 5DF8047B 		ldr	r7, [sp], #4
 908              	.LCFI61:
 909              		.cfi_restore 7
 910              		.cfi_def_cfa_offset 0
 911 0060 7047     		bx	lr
 912              	.L58:
 913 0062 00BF     		.align	2
 914              	.L57:
 915 0064 00700040 		.word	1073770496
 916 0068 00ED00E0 		.word	-536810240
 917              		.cfi_endproc
 918              	.LFE142:
 920              		.section	.text.PWR_STANDBY_Mode_Enter,"ax",%progbits
 921              		.align	1
 922              		.global	PWR_STANDBY_Mode_Enter
 923              		.syntax unified
 924              		.thumb
 925              		.thumb_func
 927              	PWR_STANDBY_Mode_Enter:
 928              	.LFB143:
 358:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** 
 359:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** /**
 360:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\name    PWR_STANDBY_Mode_Enter.
 361:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\fun     Enters STANDBY mode.
 362:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\param   enter_mode :
 363:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - PWR_STANDBY_ENTRY_WFI (enter STANDBY mode with WFI instruction)
 364:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - PWR_STANDBY_ENTRY_WFE (enter STANDBY mode with WFE instruction)
 365:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\return  none
 366:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** **/
 367:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** void PWR_STANDBY_Mode_Enter(uint8_t enter_mode)
 368:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** {
 929              		.loc 1 368 1
 930              		.cfi_startproc
 931              		@ args = 0, pretend = 0, frame = 8
 932              		@ frame_needed = 1, uses_anonymous_args = 0
 933              		@ link register save eliminated.
 934 0000 80B4     		push	{r7}
 935              	.LCFI62:
 936              		.cfi_def_cfa_offset 4
 937              		.cfi_offset 7, -4
 938 0002 83B0     		sub	sp, sp, #12
 939              	.LCFI63:
 940              		.cfi_def_cfa_offset 16
 941 0004 00AF     		add	r7, sp, #0
 942              	.LCFI64:
 943              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s 			page 24


 944 0006 0346     		mov	r3, r0
 945 0008 FB71     		strb	r3, [r7, #7]
 369:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     /* Clear Wake-up flag */
 370:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     PWR->CTRL |= PWR_CLEAR_WKUPF_ALL;
 946              		.loc 1 370 8
 947 000a 134B     		ldr	r3, .L63
 948 000c 1B68     		ldr	r3, [r3]
 949 000e 124A     		ldr	r2, .L63
 950              		.loc 1 370 15
 951 0010 43F47053 		orr	r3, r3, #15360
 952 0014 1360     		str	r3, [r2]
 371:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     /* Clear PDS and LPS bits */
 372:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     PWR->CTRL &= PWR_CTRL_LPSPDS_MASK;
 953              		.loc 1 372 8
 954 0016 104B     		ldr	r3, .L63
 955 0018 1B68     		ldr	r3, [r3]
 956 001a 0F4A     		ldr	r2, .L63
 957              		.loc 1 372 15
 958 001c 23F00303 		bic	r3, r3, #3
 959 0020 1360     		str	r3, [r2]
 373:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     /* Select STANDBY mode */
 374:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     PWR->CTRL |= PWR_CTRL_PDS;
 960              		.loc 1 374 8
 961 0022 0D4B     		ldr	r3, .L63
 962 0024 1B68     		ldr	r3, [r3]
 963 0026 0C4A     		ldr	r2, .L63
 964              		.loc 1 374 15
 965 0028 43F00203 		orr	r3, r3, #2
 966 002c 1360     		str	r3, [r2]
 375:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     /* Set SLEEPDEEP bit of Cortex System Control Register */
 376:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     SCB->SCR |= SCB_SCR_SLEEPDEEP;
 967              		.loc 1 376 8
 968 002e 0B4B     		ldr	r3, .L63+4
 969 0030 1B69     		ldr	r3, [r3, #16]
 970 0032 0A4A     		ldr	r2, .L63+4
 971              		.loc 1 376 14
 972 0034 43F00403 		orr	r3, r3, #4
 973 0038 1361     		str	r3, [r2, #16]
 377:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     /* This option is used to ensure that store operations are completed */
 378:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** #if defined(__CC_ARM)
 379:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     __force_stores();
 380:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** #endif
 381:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     /* Select STANDBY mode entry */
 382:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     if (enter_mode == PWR_STANDBY_ENTRY_WFI)
 974              		.loc 1 382 8
 975 003a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 976 003c 012B     		cmp	r3, #1
 977 003e 01D1     		bne	.L60
 383:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     {
 384:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         /* Request Wait For Interrupt */
 385:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         __WFI();
 978              		.loc 1 385 9
 979              		.syntax unified
 980              	@ 385 "../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c" 1
 981 0040 30BF     		wfi
 982              	@ 0 "" 2
 386:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     }
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s 			page 25


 387:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     else
 388:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     {
 389:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         /* Request Wait For Event */
 390:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         __SEV();
 391:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         __WFE();
 392:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         __WFE();
 393:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     }
 394:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** }
 983              		.loc 1 394 1
 984              		.thumb
 985              		.syntax unified
 986 0042 02E0     		b	.L62
 987              	.L60:
 390:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         __WFE();
 988              		.loc 1 390 9
 989              		.syntax unified
 990              	@ 390 "../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c" 1
 991 0044 40BF     		sev
 992              	@ 0 "" 2
 391:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         __WFE();
 993              		.loc 1 391 9
 994              	@ 391 "../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c" 1
 995 0046 20BF     		wfe
 996              	@ 0 "" 2
 392:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     }
 997              		.loc 1 392 9
 998              	@ 392 "../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c" 1
 999 0048 20BF     		wfe
 1000              	@ 0 "" 2
 1001              		.thumb
 1002              		.syntax unified
 1003              	.L62:
 1004              		.loc 1 394 1
 1005 004a 00BF     		nop
 1006 004c 0C37     		adds	r7, r7, #12
 1007              	.LCFI65:
 1008              		.cfi_def_cfa_offset 4
 1009 004e BD46     		mov	sp, r7
 1010              	.LCFI66:
 1011              		.cfi_def_cfa_register 13
 1012              		@ sp needed
 1013 0050 5DF8047B 		ldr	r7, [sp], #4
 1014              	.LCFI67:
 1015              		.cfi_restore 7
 1016              		.cfi_def_cfa_offset 0
 1017 0054 7047     		bx	lr
 1018              	.L64:
 1019 0056 00BF     		.align	2
 1020              	.L63:
 1021 0058 00700040 		.word	1073770496
 1022 005c 00ED00E0 		.word	-536810240
 1023              		.cfi_endproc
 1024              	.LFE143:
 1026              		.section	.text.PWR_Flag_Status_Get,"ax",%progbits
 1027              		.align	1
 1028              		.global	PWR_Flag_Status_Get
 1029              		.syntax unified
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s 			page 26


 1030              		.thumb
 1031              		.thumb_func
 1033              	PWR_Flag_Status_Get:
 1034              	.LFB144:
 395:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** 
 396:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** /**
 397:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\name    PWR_Flag_Status_Get.
 398:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\fun     Checks whether the specified PWR flag is set or not.
 399:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\param   flag :
 400:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - PWR_WKUP_FLAG_PA8
 401:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - PWR_WKUP_FLAG_PA0
 402:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - PWR_WKUP_FLAG_PC13
 403:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - PWR_WKUP_FLAG_RTC
 404:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - PWR_STBY_FLAG
 405:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - PWR_PVD_OUTPUT_FLAG
 406:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\return  SET or RESET.
 407:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** **/
 408:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** FlagStatus PWR_Flag_Status_Get(uint32_t flag)
 409:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** {
 1035              		.loc 1 409 1
 1036              		.cfi_startproc
 1037              		@ args = 0, pretend = 0, frame = 8
 1038              		@ frame_needed = 1, uses_anonymous_args = 0
 1039              		@ link register save eliminated.
 1040 0000 80B4     		push	{r7}
 1041              	.LCFI68:
 1042              		.cfi_def_cfa_offset 4
 1043              		.cfi_offset 7, -4
 1044 0002 83B0     		sub	sp, sp, #12
 1045              	.LCFI69:
 1046              		.cfi_def_cfa_offset 16
 1047 0004 00AF     		add	r7, sp, #0
 1048              	.LCFI70:
 1049              		.cfi_def_cfa_register 7
 1050 0006 7860     		str	r0, [r7, #4]
 410:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     /* Check the status of the PWR flag */
 411:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     if ((PWR->CTRLSTS & flag) == (uint32_t)RESET)
 1051              		.loc 1 411 13
 1052 0008 074B     		ldr	r3, .L68
 1053 000a 5A68     		ldr	r2, [r3, #4]
 1054              		.loc 1 411 23
 1055 000c 7B68     		ldr	r3, [r7, #4]
 1056 000e 1340     		ands	r3, r3, r2
 1057              		.loc 1 411 8
 1058 0010 002B     		cmp	r3, #0
 1059 0012 01D1     		bne	.L66
 412:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     {
 413:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         /* PWR Flag is reset */
 414:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         return RESET;
 1060              		.loc 1 414 16
 1061 0014 0023     		movs	r3, #0
 1062 0016 00E0     		b	.L67
 1063              	.L66:
 415:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     }
 416:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     else
 417:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     {
 418:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         /* PWR Flag is set */
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s 			page 27


 419:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         return SET;
 1064              		.loc 1 419 16
 1065 0018 0123     		movs	r3, #1
 1066              	.L67:
 420:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     }
 421:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** }
 1067              		.loc 1 421 1
 1068 001a 1846     		mov	r0, r3
 1069 001c 0C37     		adds	r7, r7, #12
 1070              	.LCFI71:
 1071              		.cfi_def_cfa_offset 4
 1072 001e BD46     		mov	sp, r7
 1073              	.LCFI72:
 1074              		.cfi_def_cfa_register 13
 1075              		@ sp needed
 1076 0020 5DF8047B 		ldr	r7, [sp], #4
 1077              	.LCFI73:
 1078              		.cfi_restore 7
 1079              		.cfi_def_cfa_offset 0
 1080 0024 7047     		bx	lr
 1081              	.L69:
 1082 0026 00BF     		.align	2
 1083              	.L68:
 1084 0028 00700040 		.word	1073770496
 1085              		.cfi_endproc
 1086              	.LFE144:
 1088              		.section	.text.PWR_Flag_Status_Clear,"ax",%progbits
 1089              		.align	1
 1090              		.global	PWR_Flag_Status_Clear
 1091              		.syntax unified
 1092              		.thumb
 1093              		.thumb_func
 1095              	PWR_Flag_Status_Clear:
 1096              	.LFB145:
 422:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** 
 423:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** /**
 424:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\name    PWR_Flag_Status_Clear.
 425:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\fun     Clears the PWR's pending flags.
 426:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\param   flag :
 427:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - PWR_WKUP_FLAG_PA8
 428:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - PWR_WKUP_FLAG_PA0
 429:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - PWR_WKUP_FLAG_PC13
 430:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - PWR_WKUP_FLAG_RTC
 431:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\          - PWR_STBY_FLAG
 432:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** *\*\return  none
 433:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** **/
 434:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** void PWR_Flag_Status_Clear(uint32_t flag)
 435:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** {
 1097              		.loc 1 435 1
 1098              		.cfi_startproc
 1099              		@ args = 0, pretend = 0, frame = 8
 1100              		@ frame_needed = 1, uses_anonymous_args = 0
 1101              		@ link register save eliminated.
 1102 0000 80B4     		push	{r7}
 1103              	.LCFI74:
 1104              		.cfi_def_cfa_offset 4
 1105              		.cfi_offset 7, -4
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s 			page 28


 1106 0002 83B0     		sub	sp, sp, #12
 1107              	.LCFI75:
 1108              		.cfi_def_cfa_offset 16
 1109 0004 00AF     		add	r7, sp, #0
 1110              	.LCFI76:
 1111              		.cfi_def_cfa_register 7
 1112 0006 7860     		str	r0, [r7, #4]
 436:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     if(flag == PWR_STBY_FLAG)
 1113              		.loc 1 436 7
 1114 0008 7B68     		ldr	r3, [r7, #4]
 1115 000a 022B     		cmp	r3, #2
 1116 000c 07D1     		bne	.L71
 437:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     {
 438:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         PWR->CTRL |= flag << PWR_BIT_SHIFT_2;
 1117              		.loc 1 438 12
 1118 000e 0A4B     		ldr	r3, .L74
 1119 0010 1A68     		ldr	r2, [r3]
 1120              		.loc 1 438 27
 1121 0012 7B68     		ldr	r3, [r7, #4]
 1122 0014 9B00     		lsls	r3, r3, #2
 1123              		.loc 1 438 12
 1124 0016 0849     		ldr	r1, .L74
 1125              		.loc 1 438 19
 1126 0018 1343     		orrs	r3, r3, r2
 1127 001a 0B60     		str	r3, [r1]
 439:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     }
 440:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     else
 441:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     {
 442:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****         PWR->CTRL |= flag << PWR_BIT_SHIFT_7;
 443:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     }
 444:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c **** }
 1128              		.loc 1 444 1
 1129 001c 06E0     		b	.L73
 1130              	.L71:
 442:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     }
 1131              		.loc 1 442 12
 1132 001e 064B     		ldr	r3, .L74
 1133 0020 1A68     		ldr	r2, [r3]
 442:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     }
 1134              		.loc 1 442 27
 1135 0022 7B68     		ldr	r3, [r7, #4]
 1136 0024 DB01     		lsls	r3, r3, #7
 442:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     }
 1137              		.loc 1 442 12
 1138 0026 0449     		ldr	r1, .L74
 442:../firmware/n32g430_std_periph_driver/src/n32g430_pwr.c ****     }
 1139              		.loc 1 442 19
 1140 0028 1343     		orrs	r3, r3, r2
 1141 002a 0B60     		str	r3, [r1]
 1142              	.L73:
 1143              		.loc 1 444 1
 1144 002c 00BF     		nop
 1145 002e 0C37     		adds	r7, r7, #12
 1146              	.LCFI77:
 1147              		.cfi_def_cfa_offset 4
 1148 0030 BD46     		mov	sp, r7
 1149              	.LCFI78:
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s 			page 29


 1150              		.cfi_def_cfa_register 13
 1151              		@ sp needed
 1152 0032 5DF8047B 		ldr	r7, [sp], #4
 1153              	.LCFI79:
 1154              		.cfi_restore 7
 1155              		.cfi_def_cfa_offset 0
 1156 0036 7047     		bx	lr
 1157              	.L75:
 1158              		.align	2
 1159              	.L74:
 1160 0038 00700040 		.word	1073770496
 1161              		.cfi_endproc
 1162              	.LFE145:
 1164              		.text
 1165              	.Letext0:
 1166              		.file 2 "d:\\program files (x86)\\arm gnu toolchain arm-none-eabi\\12.3 rel1\\arm-none-eabi\\inclu
 1167              		.file 3 "d:\\program files (x86)\\arm gnu toolchain arm-none-eabi\\12.3 rel1\\arm-none-eabi\\inclu
 1168              		.file 4 "../firmware/CMSIS/core/core_cm4.h"
 1169              		.file 5 "../firmware/CMSIS/device/n32g430.h"
 1170              		.file 6 "../firmware/n32g430_std_periph_driver/inc/n32g430_pwr.h"
 1171              		.file 7 "../firmware/n32g430_std_periph_driver/inc/n32g430_rcc.h"
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s 			page 30


DEFINED SYMBOLS
                            *ABS*:00000000 n32g430_pwr.c
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:21     .text.PWR_Reset:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:27     .text.PWR_Reset:00000000 PWR_Reset
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:51     .text.PWR_RTC_Backup_Access_Enable:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:57     .text.PWR_RTC_Backup_Access_Enable:00000000 PWR_RTC_Backup_Access_Enable
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:90     .text.PWR_RTC_Backup_Access_Enable:00000014 $d
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:95     .text.PWR_RTC_Backup_Access_Disable:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:101    .text.PWR_RTC_Backup_Access_Disable:00000000 PWR_RTC_Backup_Access_Disable
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:134    .text.PWR_RTC_Backup_Access_Disable:00000014 $d
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:139    .text.PWR_PVD_Enable:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:145    .text.PWR_PVD_Enable:00000000 PWR_PVD_Enable
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:178    .text.PWR_PVD_Enable:00000014 $d
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:183    .text.PWR_PVD_Disable:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:189    .text.PWR_PVD_Disable:00000000 PWR_PVD_Disable
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:222    .text.PWR_PVD_Disable:00000014 $d
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:227    .text.PWR_PVD_Level_Config:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:233    .text.PWR_PVD_Level_Config:00000000 PWR_PVD_Level_Config
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:290    .text.PWR_PVD_Level_Config:00000034 $d
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:295    .text.PWR_Wakeup_Pin_Enable:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:301    .text.PWR_Wakeup_Pin_Enable:00000000 PWR_Wakeup_Pin_Enable
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:393    .text.PWR_Wakeup_Pin_Enable:00000060 $d
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:403    .text.PWR_Wakeup_Pin_Disable:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:409    .text.PWR_Wakeup_Pin_Disable:00000000 PWR_Wakeup_Pin_Disable
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:485    .text.PWR_Wakeup_Pin_Disable:0000004c $d
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:492    .text.PWR_RTC_Wakeup_Enable:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:498    .text.PWR_RTC_Wakeup_Enable:00000000 PWR_RTC_Wakeup_Enable
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:531    .text.PWR_RTC_Wakeup_Enable:00000014 $d
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:536    .text.PWR_RTC_Wakeup_Disable:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:542    .text.PWR_RTC_Wakeup_Disable:00000000 PWR_RTC_Wakeup_Disable
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:575    .text.PWR_RTC_Wakeup_Disable:00000014 $d
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:580    .text.PWR_SLEEP_Mode_Enter:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:586    .text.PWR_SLEEP_Mode_Enter:00000000 PWR_SLEEP_Mode_Enter
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:687    .text.PWR_SLEEP_Mode_Enter:00000060 $d
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:692    .text.PWR_STOP0_Mode_Enter:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:698    .text.PWR_STOP0_Mode_Enter:00000000 PWR_STOP0_Mode_Enter
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:800    .text.PWR_STOP0_Mode_Enter:00000060 $d
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:806    .text.PWR_STOP2_Mode_Enter:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:812    .text.PWR_STOP2_Mode_Enter:00000000 PWR_STOP2_Mode_Enter
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:915    .text.PWR_STOP2_Mode_Enter:00000064 $d
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:921    .text.PWR_STANDBY_Mode_Enter:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:927    .text.PWR_STANDBY_Mode_Enter:00000000 PWR_STANDBY_Mode_Enter
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:1021   .text.PWR_STANDBY_Mode_Enter:00000058 $d
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:1027   .text.PWR_Flag_Status_Get:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:1033   .text.PWR_Flag_Status_Get:00000000 PWR_Flag_Status_Get
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:1084   .text.PWR_Flag_Status_Get:00000028 $d
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:1089   .text.PWR_Flag_Status_Clear:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:1095   .text.PWR_Flag_Status_Clear:00000000 PWR_Flag_Status_Clear
C:\Users\ZShuai\AppData\Local\Temp\ccPwEwsh.s:1160   .text.PWR_Flag_Status_Clear:00000038 $d

UNDEFINED SYMBOLS
RCC_APB1_Peripheral_Reset
