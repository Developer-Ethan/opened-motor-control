ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"bsp_config.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "../User/BSP/bsp_config.c"
  20              		.section	.text.__NVIC_SetPriority,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	__NVIC_SetPriority:
  27              	.LFB111:
  28              		.file 2 "../firmware/CMSIS/core/core_cm4.h"
   1:../firmware/CMSIS/core/core_cm4.h **** /**************************************************************************//**
   2:../firmware/CMSIS/core/core_cm4.h ****  * @file     core_cm4.h
   3:../firmware/CMSIS/core/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:../firmware/CMSIS/core/core_cm4.h ****  * @version  V5.0.8
   5:../firmware/CMSIS/core/core_cm4.h ****  * @date     04. June 2018
   6:../firmware/CMSIS/core/core_cm4.h ****  ******************************************************************************/
   7:../firmware/CMSIS/core/core_cm4.h **** /*
   8:../firmware/CMSIS/core/core_cm4.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:../firmware/CMSIS/core/core_cm4.h ****  *
  10:../firmware/CMSIS/core/core_cm4.h ****  * SPDX-License-Identifier: Apache-2.0
  11:../firmware/CMSIS/core/core_cm4.h ****  *
  12:../firmware/CMSIS/core/core_cm4.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:../firmware/CMSIS/core/core_cm4.h ****  * not use this file except in compliance with the License.
  14:../firmware/CMSIS/core/core_cm4.h ****  * You may obtain a copy of the License at
  15:../firmware/CMSIS/core/core_cm4.h ****  *
  16:../firmware/CMSIS/core/core_cm4.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:../firmware/CMSIS/core/core_cm4.h ****  *
  18:../firmware/CMSIS/core/core_cm4.h ****  * Unless required by applicable law or agreed to in writing, software
  19:../firmware/CMSIS/core/core_cm4.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:../firmware/CMSIS/core/core_cm4.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:../firmware/CMSIS/core/core_cm4.h ****  * See the License for the specific language governing permissions and
  22:../firmware/CMSIS/core/core_cm4.h ****  * limitations under the License.
  23:../firmware/CMSIS/core/core_cm4.h ****  */
  24:../firmware/CMSIS/core/core_cm4.h **** 
  25:../firmware/CMSIS/core/core_cm4.h **** #if   defined ( __ICCARM__ )
  26:../firmware/CMSIS/core/core_cm4.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:../firmware/CMSIS/core/core_cm4.h **** #elif defined (__clang__)
  28:../firmware/CMSIS/core/core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  29:../firmware/CMSIS/core/core_cm4.h **** #endif
  30:../firmware/CMSIS/core/core_cm4.h **** 
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 2


  31:../firmware/CMSIS/core/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:../firmware/CMSIS/core/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:../firmware/CMSIS/core/core_cm4.h **** 
  34:../firmware/CMSIS/core/core_cm4.h **** #include <stdint.h>
  35:../firmware/CMSIS/core/core_cm4.h **** 
  36:../firmware/CMSIS/core/core_cm4.h **** #ifdef __cplusplus
  37:../firmware/CMSIS/core/core_cm4.h ****  extern "C" {
  38:../firmware/CMSIS/core/core_cm4.h **** #endif
  39:../firmware/CMSIS/core/core_cm4.h **** 
  40:../firmware/CMSIS/core/core_cm4.h **** /**
  41:../firmware/CMSIS/core/core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:../firmware/CMSIS/core/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:../firmware/CMSIS/core/core_cm4.h **** 
  44:../firmware/CMSIS/core/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:../firmware/CMSIS/core/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  46:../firmware/CMSIS/core/core_cm4.h **** 
  47:../firmware/CMSIS/core/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:../firmware/CMSIS/core/core_cm4.h ****      Unions are used for effective representation of core registers.
  49:../firmware/CMSIS/core/core_cm4.h **** 
  50:../firmware/CMSIS/core/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:../firmware/CMSIS/core/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  52:../firmware/CMSIS/core/core_cm4.h ****  */
  53:../firmware/CMSIS/core/core_cm4.h **** 
  54:../firmware/CMSIS/core/core_cm4.h **** 
  55:../firmware/CMSIS/core/core_cm4.h **** /*******************************************************************************
  56:../firmware/CMSIS/core/core_cm4.h ****  *                 CMSIS definitions
  57:../firmware/CMSIS/core/core_cm4.h ****  ******************************************************************************/
  58:../firmware/CMSIS/core/core_cm4.h **** /**
  59:../firmware/CMSIS/core/core_cm4.h ****   \ingroup Cortex_M4
  60:../firmware/CMSIS/core/core_cm4.h ****   @{
  61:../firmware/CMSIS/core/core_cm4.h ****  */
  62:../firmware/CMSIS/core/core_cm4.h **** 
  63:../firmware/CMSIS/core/core_cm4.h **** #include "cmsis_version.h"
  64:../firmware/CMSIS/core/core_cm4.h **** 
  65:../firmware/CMSIS/core/core_cm4.h **** /* CMSIS CM4 definitions */
  66:../firmware/CMSIS/core/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:../firmware/CMSIS/core/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:../firmware/CMSIS/core/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  69:../firmware/CMSIS/core/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:../firmware/CMSIS/core/core_cm4.h **** 
  71:../firmware/CMSIS/core/core_cm4.h **** #define __CORTEX_M                (4U)                                   /*!< Cortex-M Core */
  72:../firmware/CMSIS/core/core_cm4.h **** 
  73:../firmware/CMSIS/core/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:../firmware/CMSIS/core/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:../firmware/CMSIS/core/core_cm4.h **** */
  76:../firmware/CMSIS/core/core_cm4.h **** #if defined ( __CC_ARM )
  77:../firmware/CMSIS/core/core_cm4.h ****   #if defined __TARGET_FPU_VFP
  78:../firmware/CMSIS/core/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:../firmware/CMSIS/core/core_cm4.h ****       #define __FPU_USED       1U
  80:../firmware/CMSIS/core/core_cm4.h ****     #else
  81:../firmware/CMSIS/core/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:../firmware/CMSIS/core/core_cm4.h ****       #define __FPU_USED       0U
  83:../firmware/CMSIS/core/core_cm4.h ****     #endif
  84:../firmware/CMSIS/core/core_cm4.h ****   #else
  85:../firmware/CMSIS/core/core_cm4.h ****     #define __FPU_USED         0U
  86:../firmware/CMSIS/core/core_cm4.h ****   #endif
  87:../firmware/CMSIS/core/core_cm4.h **** 
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 3


  88:../firmware/CMSIS/core/core_cm4.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:../firmware/CMSIS/core/core_cm4.h ****   #if defined __ARM_PCS_VFP
  90:../firmware/CMSIS/core/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:../firmware/CMSIS/core/core_cm4.h ****       #define __FPU_USED       1U
  92:../firmware/CMSIS/core/core_cm4.h ****     #else
  93:../firmware/CMSIS/core/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:../firmware/CMSIS/core/core_cm4.h ****       #define __FPU_USED       0U
  95:../firmware/CMSIS/core/core_cm4.h ****     #endif
  96:../firmware/CMSIS/core/core_cm4.h ****   #else
  97:../firmware/CMSIS/core/core_cm4.h ****     #define __FPU_USED         0U
  98:../firmware/CMSIS/core/core_cm4.h ****   #endif
  99:../firmware/CMSIS/core/core_cm4.h **** 
 100:../firmware/CMSIS/core/core_cm4.h **** #elif defined ( __GNUC__ )
 101:../firmware/CMSIS/core/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:../firmware/CMSIS/core/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:../firmware/CMSIS/core/core_cm4.h ****       #define __FPU_USED       1U
 104:../firmware/CMSIS/core/core_cm4.h ****     #else
 105:../firmware/CMSIS/core/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:../firmware/CMSIS/core/core_cm4.h ****       #define __FPU_USED       0U
 107:../firmware/CMSIS/core/core_cm4.h ****     #endif
 108:../firmware/CMSIS/core/core_cm4.h ****   #else
 109:../firmware/CMSIS/core/core_cm4.h ****     #define __FPU_USED         0U
 110:../firmware/CMSIS/core/core_cm4.h ****   #endif
 111:../firmware/CMSIS/core/core_cm4.h **** 
 112:../firmware/CMSIS/core/core_cm4.h **** #elif defined ( __ICCARM__ )
 113:../firmware/CMSIS/core/core_cm4.h ****   #if defined __ARMVFP__
 114:../firmware/CMSIS/core/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:../firmware/CMSIS/core/core_cm4.h ****       #define __FPU_USED       1U
 116:../firmware/CMSIS/core/core_cm4.h ****     #else
 117:../firmware/CMSIS/core/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:../firmware/CMSIS/core/core_cm4.h ****       #define __FPU_USED       0U
 119:../firmware/CMSIS/core/core_cm4.h ****     #endif
 120:../firmware/CMSIS/core/core_cm4.h ****   #else
 121:../firmware/CMSIS/core/core_cm4.h ****     #define __FPU_USED         0U
 122:../firmware/CMSIS/core/core_cm4.h ****   #endif
 123:../firmware/CMSIS/core/core_cm4.h **** 
 124:../firmware/CMSIS/core/core_cm4.h **** #elif defined ( __TI_ARM__ )
 125:../firmware/CMSIS/core/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 126:../firmware/CMSIS/core/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:../firmware/CMSIS/core/core_cm4.h ****       #define __FPU_USED       1U
 128:../firmware/CMSIS/core/core_cm4.h ****     #else
 129:../firmware/CMSIS/core/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:../firmware/CMSIS/core/core_cm4.h ****       #define __FPU_USED       0U
 131:../firmware/CMSIS/core/core_cm4.h ****     #endif
 132:../firmware/CMSIS/core/core_cm4.h ****   #else
 133:../firmware/CMSIS/core/core_cm4.h ****     #define __FPU_USED         0U
 134:../firmware/CMSIS/core/core_cm4.h ****   #endif
 135:../firmware/CMSIS/core/core_cm4.h **** 
 136:../firmware/CMSIS/core/core_cm4.h **** #elif defined ( __TASKING__ )
 137:../firmware/CMSIS/core/core_cm4.h ****   #if defined __FPU_VFP__
 138:../firmware/CMSIS/core/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:../firmware/CMSIS/core/core_cm4.h ****       #define __FPU_USED       1U
 140:../firmware/CMSIS/core/core_cm4.h ****     #else
 141:../firmware/CMSIS/core/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:../firmware/CMSIS/core/core_cm4.h ****       #define __FPU_USED       0U
 143:../firmware/CMSIS/core/core_cm4.h ****     #endif
 144:../firmware/CMSIS/core/core_cm4.h ****   #else
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 4


 145:../firmware/CMSIS/core/core_cm4.h ****     #define __FPU_USED         0U
 146:../firmware/CMSIS/core/core_cm4.h ****   #endif
 147:../firmware/CMSIS/core/core_cm4.h **** 
 148:../firmware/CMSIS/core/core_cm4.h **** #elif defined ( __CSMC__ )
 149:../firmware/CMSIS/core/core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 150:../firmware/CMSIS/core/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:../firmware/CMSIS/core/core_cm4.h ****       #define __FPU_USED       1U
 152:../firmware/CMSIS/core/core_cm4.h ****     #else
 153:../firmware/CMSIS/core/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:../firmware/CMSIS/core/core_cm4.h ****       #define __FPU_USED       0U
 155:../firmware/CMSIS/core/core_cm4.h ****     #endif
 156:../firmware/CMSIS/core/core_cm4.h ****   #else
 157:../firmware/CMSIS/core/core_cm4.h ****     #define __FPU_USED         0U
 158:../firmware/CMSIS/core/core_cm4.h ****   #endif
 159:../firmware/CMSIS/core/core_cm4.h **** 
 160:../firmware/CMSIS/core/core_cm4.h **** #endif
 161:../firmware/CMSIS/core/core_cm4.h **** 
 162:../firmware/CMSIS/core/core_cm4.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:../firmware/CMSIS/core/core_cm4.h **** 
 164:../firmware/CMSIS/core/core_cm4.h **** 
 165:../firmware/CMSIS/core/core_cm4.h **** #ifdef __cplusplus
 166:../firmware/CMSIS/core/core_cm4.h **** }
 167:../firmware/CMSIS/core/core_cm4.h **** #endif
 168:../firmware/CMSIS/core/core_cm4.h **** 
 169:../firmware/CMSIS/core/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 170:../firmware/CMSIS/core/core_cm4.h **** 
 171:../firmware/CMSIS/core/core_cm4.h **** #ifndef __CMSIS_GENERIC
 172:../firmware/CMSIS/core/core_cm4.h **** 
 173:../firmware/CMSIS/core/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 174:../firmware/CMSIS/core/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 175:../firmware/CMSIS/core/core_cm4.h **** 
 176:../firmware/CMSIS/core/core_cm4.h **** #ifdef __cplusplus
 177:../firmware/CMSIS/core/core_cm4.h ****  extern "C" {
 178:../firmware/CMSIS/core/core_cm4.h **** #endif
 179:../firmware/CMSIS/core/core_cm4.h **** 
 180:../firmware/CMSIS/core/core_cm4.h **** /* check device defines and use defaults */
 181:../firmware/CMSIS/core/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 182:../firmware/CMSIS/core/core_cm4.h ****   #ifndef __CM4_REV
 183:../firmware/CMSIS/core/core_cm4.h ****     #define __CM4_REV               0x0000U
 184:../firmware/CMSIS/core/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 185:../firmware/CMSIS/core/core_cm4.h ****   #endif
 186:../firmware/CMSIS/core/core_cm4.h **** 
 187:../firmware/CMSIS/core/core_cm4.h ****   #ifndef __FPU_PRESENT
 188:../firmware/CMSIS/core/core_cm4.h ****     #define __FPU_PRESENT             0U
 189:../firmware/CMSIS/core/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:../firmware/CMSIS/core/core_cm4.h ****   #endif
 191:../firmware/CMSIS/core/core_cm4.h **** 
 192:../firmware/CMSIS/core/core_cm4.h ****   #ifndef __MPU_PRESENT
 193:../firmware/CMSIS/core/core_cm4.h ****     #define __MPU_PRESENT             0U
 194:../firmware/CMSIS/core/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:../firmware/CMSIS/core/core_cm4.h ****   #endif
 196:../firmware/CMSIS/core/core_cm4.h **** 
 197:../firmware/CMSIS/core/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 198:../firmware/CMSIS/core/core_cm4.h ****     #define __NVIC_PRIO_BITS          3U
 199:../firmware/CMSIS/core/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 200:../firmware/CMSIS/core/core_cm4.h ****   #endif
 201:../firmware/CMSIS/core/core_cm4.h **** 
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 5


 202:../firmware/CMSIS/core/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 203:../firmware/CMSIS/core/core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 204:../firmware/CMSIS/core/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 205:../firmware/CMSIS/core/core_cm4.h ****   #endif
 206:../firmware/CMSIS/core/core_cm4.h **** #endif
 207:../firmware/CMSIS/core/core_cm4.h **** 
 208:../firmware/CMSIS/core/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 209:../firmware/CMSIS/core/core_cm4.h **** /**
 210:../firmware/CMSIS/core/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 211:../firmware/CMSIS/core/core_cm4.h **** 
 212:../firmware/CMSIS/core/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 213:../firmware/CMSIS/core/core_cm4.h ****     \li to specify the access to peripheral variables.
 214:../firmware/CMSIS/core/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 215:../firmware/CMSIS/core/core_cm4.h **** */
 216:../firmware/CMSIS/core/core_cm4.h **** #ifdef __cplusplus
 217:../firmware/CMSIS/core/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 218:../firmware/CMSIS/core/core_cm4.h **** #else
 219:../firmware/CMSIS/core/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 220:../firmware/CMSIS/core/core_cm4.h **** #endif
 221:../firmware/CMSIS/core/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 222:../firmware/CMSIS/core/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 223:../firmware/CMSIS/core/core_cm4.h **** 
 224:../firmware/CMSIS/core/core_cm4.h **** /* following defines should be used for structure members */
 225:../firmware/CMSIS/core/core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 226:../firmware/CMSIS/core/core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 227:../firmware/CMSIS/core/core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 228:../firmware/CMSIS/core/core_cm4.h **** 
 229:../firmware/CMSIS/core/core_cm4.h **** /*@} end of group Cortex_M4 */
 230:../firmware/CMSIS/core/core_cm4.h **** 
 231:../firmware/CMSIS/core/core_cm4.h **** 
 232:../firmware/CMSIS/core/core_cm4.h **** 
 233:../firmware/CMSIS/core/core_cm4.h **** /*******************************************************************************
 234:../firmware/CMSIS/core/core_cm4.h ****  *                 Register Abstraction
 235:../firmware/CMSIS/core/core_cm4.h ****   Core Register contain:
 236:../firmware/CMSIS/core/core_cm4.h ****   - Core Register
 237:../firmware/CMSIS/core/core_cm4.h ****   - Core NVIC Register
 238:../firmware/CMSIS/core/core_cm4.h ****   - Core SCB Register
 239:../firmware/CMSIS/core/core_cm4.h ****   - Core SysTick Register
 240:../firmware/CMSIS/core/core_cm4.h ****   - Core Debug Register
 241:../firmware/CMSIS/core/core_cm4.h ****   - Core MPU Register
 242:../firmware/CMSIS/core/core_cm4.h ****   - Core FPU Register
 243:../firmware/CMSIS/core/core_cm4.h ****  ******************************************************************************/
 244:../firmware/CMSIS/core/core_cm4.h **** /**
 245:../firmware/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 246:../firmware/CMSIS/core/core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 247:../firmware/CMSIS/core/core_cm4.h **** */
 248:../firmware/CMSIS/core/core_cm4.h **** 
 249:../firmware/CMSIS/core/core_cm4.h **** /**
 250:../firmware/CMSIS/core/core_cm4.h ****   \ingroup    CMSIS_core_register
 251:../firmware/CMSIS/core/core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 252:../firmware/CMSIS/core/core_cm4.h ****   \brief      Core Register type definitions.
 253:../firmware/CMSIS/core/core_cm4.h ****   @{
 254:../firmware/CMSIS/core/core_cm4.h ****  */
 255:../firmware/CMSIS/core/core_cm4.h **** 
 256:../firmware/CMSIS/core/core_cm4.h **** /**
 257:../firmware/CMSIS/core/core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 258:../firmware/CMSIS/core/core_cm4.h ****  */
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 6


 259:../firmware/CMSIS/core/core_cm4.h **** typedef union
 260:../firmware/CMSIS/core/core_cm4.h **** {
 261:../firmware/CMSIS/core/core_cm4.h ****   struct
 262:../firmware/CMSIS/core/core_cm4.h ****   {
 263:../firmware/CMSIS/core/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 264:../firmware/CMSIS/core/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 265:../firmware/CMSIS/core/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 266:../firmware/CMSIS/core/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 267:../firmware/CMSIS/core/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 268:../firmware/CMSIS/core/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 269:../firmware/CMSIS/core/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 270:../firmware/CMSIS/core/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 271:../firmware/CMSIS/core/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 272:../firmware/CMSIS/core/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 273:../firmware/CMSIS/core/core_cm4.h **** } APSR_Type;
 274:../firmware/CMSIS/core/core_cm4.h **** 
 275:../firmware/CMSIS/core/core_cm4.h **** /* APSR Register Definitions */
 276:../firmware/CMSIS/core/core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 277:../firmware/CMSIS/core/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 278:../firmware/CMSIS/core/core_cm4.h **** 
 279:../firmware/CMSIS/core/core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 280:../firmware/CMSIS/core/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 281:../firmware/CMSIS/core/core_cm4.h **** 
 282:../firmware/CMSIS/core/core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 283:../firmware/CMSIS/core/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 284:../firmware/CMSIS/core/core_cm4.h **** 
 285:../firmware/CMSIS/core/core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 286:../firmware/CMSIS/core/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 287:../firmware/CMSIS/core/core_cm4.h **** 
 288:../firmware/CMSIS/core/core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 289:../firmware/CMSIS/core/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 290:../firmware/CMSIS/core/core_cm4.h **** 
 291:../firmware/CMSIS/core/core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 292:../firmware/CMSIS/core/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 293:../firmware/CMSIS/core/core_cm4.h **** 
 294:../firmware/CMSIS/core/core_cm4.h **** 
 295:../firmware/CMSIS/core/core_cm4.h **** /**
 296:../firmware/CMSIS/core/core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 297:../firmware/CMSIS/core/core_cm4.h ****  */
 298:../firmware/CMSIS/core/core_cm4.h **** typedef union
 299:../firmware/CMSIS/core/core_cm4.h **** {
 300:../firmware/CMSIS/core/core_cm4.h ****   struct
 301:../firmware/CMSIS/core/core_cm4.h ****   {
 302:../firmware/CMSIS/core/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 303:../firmware/CMSIS/core/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 304:../firmware/CMSIS/core/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 305:../firmware/CMSIS/core/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 306:../firmware/CMSIS/core/core_cm4.h **** } IPSR_Type;
 307:../firmware/CMSIS/core/core_cm4.h **** 
 308:../firmware/CMSIS/core/core_cm4.h **** /* IPSR Register Definitions */
 309:../firmware/CMSIS/core/core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 310:../firmware/CMSIS/core/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 311:../firmware/CMSIS/core/core_cm4.h **** 
 312:../firmware/CMSIS/core/core_cm4.h **** 
 313:../firmware/CMSIS/core/core_cm4.h **** /**
 314:../firmware/CMSIS/core/core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 315:../firmware/CMSIS/core/core_cm4.h ****  */
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 7


 316:../firmware/CMSIS/core/core_cm4.h **** typedef union
 317:../firmware/CMSIS/core/core_cm4.h **** {
 318:../firmware/CMSIS/core/core_cm4.h ****   struct
 319:../firmware/CMSIS/core/core_cm4.h ****   {
 320:../firmware/CMSIS/core/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 321:../firmware/CMSIS/core/core_cm4.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 322:../firmware/CMSIS/core/core_cm4.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 323:../firmware/CMSIS/core/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 324:../firmware/CMSIS/core/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 325:../firmware/CMSIS/core/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 326:../firmware/CMSIS/core/core_cm4.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 327:../firmware/CMSIS/core/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 328:../firmware/CMSIS/core/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 329:../firmware/CMSIS/core/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 330:../firmware/CMSIS/core/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 331:../firmware/CMSIS/core/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 332:../firmware/CMSIS/core/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 333:../firmware/CMSIS/core/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 334:../firmware/CMSIS/core/core_cm4.h **** } xPSR_Type;
 335:../firmware/CMSIS/core/core_cm4.h **** 
 336:../firmware/CMSIS/core/core_cm4.h **** /* xPSR Register Definitions */
 337:../firmware/CMSIS/core/core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 338:../firmware/CMSIS/core/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 339:../firmware/CMSIS/core/core_cm4.h **** 
 340:../firmware/CMSIS/core/core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 341:../firmware/CMSIS/core/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 342:../firmware/CMSIS/core/core_cm4.h **** 
 343:../firmware/CMSIS/core/core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 344:../firmware/CMSIS/core/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 345:../firmware/CMSIS/core/core_cm4.h **** 
 346:../firmware/CMSIS/core/core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 347:../firmware/CMSIS/core/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 348:../firmware/CMSIS/core/core_cm4.h **** 
 349:../firmware/CMSIS/core/core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 350:../firmware/CMSIS/core/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 351:../firmware/CMSIS/core/core_cm4.h **** 
 352:../firmware/CMSIS/core/core_cm4.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 353:../firmware/CMSIS/core/core_cm4.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 354:../firmware/CMSIS/core/core_cm4.h **** 
 355:../firmware/CMSIS/core/core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 356:../firmware/CMSIS/core/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 357:../firmware/CMSIS/core/core_cm4.h **** 
 358:../firmware/CMSIS/core/core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 359:../firmware/CMSIS/core/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 360:../firmware/CMSIS/core/core_cm4.h **** 
 361:../firmware/CMSIS/core/core_cm4.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 362:../firmware/CMSIS/core/core_cm4.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 363:../firmware/CMSIS/core/core_cm4.h **** 
 364:../firmware/CMSIS/core/core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 365:../firmware/CMSIS/core/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 366:../firmware/CMSIS/core/core_cm4.h **** 
 367:../firmware/CMSIS/core/core_cm4.h **** 
 368:../firmware/CMSIS/core/core_cm4.h **** /**
 369:../firmware/CMSIS/core/core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 370:../firmware/CMSIS/core/core_cm4.h ****  */
 371:../firmware/CMSIS/core/core_cm4.h **** typedef union
 372:../firmware/CMSIS/core/core_cm4.h **** {
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 8


 373:../firmware/CMSIS/core/core_cm4.h ****   struct
 374:../firmware/CMSIS/core/core_cm4.h ****   {
 375:../firmware/CMSIS/core/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 376:../firmware/CMSIS/core/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 377:../firmware/CMSIS/core/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 378:../firmware/CMSIS/core/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 379:../firmware/CMSIS/core/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 380:../firmware/CMSIS/core/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 381:../firmware/CMSIS/core/core_cm4.h **** } CONTROL_Type;
 382:../firmware/CMSIS/core/core_cm4.h **** 
 383:../firmware/CMSIS/core/core_cm4.h **** /* CONTROL Register Definitions */
 384:../firmware/CMSIS/core/core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 385:../firmware/CMSIS/core/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 386:../firmware/CMSIS/core/core_cm4.h **** 
 387:../firmware/CMSIS/core/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 388:../firmware/CMSIS/core/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 389:../firmware/CMSIS/core/core_cm4.h **** 
 390:../firmware/CMSIS/core/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 391:../firmware/CMSIS/core/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 392:../firmware/CMSIS/core/core_cm4.h **** 
 393:../firmware/CMSIS/core/core_cm4.h **** /*@} end of group CMSIS_CORE */
 394:../firmware/CMSIS/core/core_cm4.h **** 
 395:../firmware/CMSIS/core/core_cm4.h **** 
 396:../firmware/CMSIS/core/core_cm4.h **** /**
 397:../firmware/CMSIS/core/core_cm4.h ****   \ingroup    CMSIS_core_register
 398:../firmware/CMSIS/core/core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 399:../firmware/CMSIS/core/core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 400:../firmware/CMSIS/core/core_cm4.h ****   @{
 401:../firmware/CMSIS/core/core_cm4.h ****  */
 402:../firmware/CMSIS/core/core_cm4.h **** 
 403:../firmware/CMSIS/core/core_cm4.h **** /**
 404:../firmware/CMSIS/core/core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 405:../firmware/CMSIS/core/core_cm4.h ****  */
 406:../firmware/CMSIS/core/core_cm4.h **** typedef struct
 407:../firmware/CMSIS/core/core_cm4.h **** {
 408:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 409:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED0[24U];
 410:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 411:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RSERVED1[24U];
 412:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 413:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED2[24U];
 414:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 415:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED3[24U];
 416:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 417:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED4[56U];
 418:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 419:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED5[644U];
 420:../firmware/CMSIS/core/core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 421:../firmware/CMSIS/core/core_cm4.h **** }  NVIC_Type;
 422:../firmware/CMSIS/core/core_cm4.h **** 
 423:../firmware/CMSIS/core/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 424:../firmware/CMSIS/core/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 425:../firmware/CMSIS/core/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 426:../firmware/CMSIS/core/core_cm4.h **** 
 427:../firmware/CMSIS/core/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 428:../firmware/CMSIS/core/core_cm4.h **** 
 429:../firmware/CMSIS/core/core_cm4.h **** 
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 9


 430:../firmware/CMSIS/core/core_cm4.h **** /**
 431:../firmware/CMSIS/core/core_cm4.h ****   \ingroup  CMSIS_core_register
 432:../firmware/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 433:../firmware/CMSIS/core/core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 434:../firmware/CMSIS/core/core_cm4.h ****   @{
 435:../firmware/CMSIS/core/core_cm4.h ****  */
 436:../firmware/CMSIS/core/core_cm4.h **** 
 437:../firmware/CMSIS/core/core_cm4.h **** /**
 438:../firmware/CMSIS/core/core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 439:../firmware/CMSIS/core/core_cm4.h ****  */
 440:../firmware/CMSIS/core/core_cm4.h **** typedef struct
 441:../firmware/CMSIS/core/core_cm4.h **** {
 442:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 443:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 444:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 445:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 446:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 447:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 448:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 449:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 450:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 451:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 452:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 453:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 454:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 455:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 456:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 457:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 458:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 459:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 460:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 461:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED0[5U];
 462:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 463:../firmware/CMSIS/core/core_cm4.h **** } SCB_Type;
 464:../firmware/CMSIS/core/core_cm4.h **** 
 465:../firmware/CMSIS/core/core_cm4.h **** /* SCB CPUID Register Definitions */
 466:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 467:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 468:../firmware/CMSIS/core/core_cm4.h **** 
 469:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 470:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 471:../firmware/CMSIS/core/core_cm4.h **** 
 472:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 473:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 474:../firmware/CMSIS/core/core_cm4.h **** 
 475:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 476:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 477:../firmware/CMSIS/core/core_cm4.h **** 
 478:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 479:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 480:../firmware/CMSIS/core/core_cm4.h **** 
 481:../firmware/CMSIS/core/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 482:../firmware/CMSIS/core/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 483:../firmware/CMSIS/core/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 484:../firmware/CMSIS/core/core_cm4.h **** 
 485:../firmware/CMSIS/core/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 486:../firmware/CMSIS/core/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 10


 487:../firmware/CMSIS/core/core_cm4.h **** 
 488:../firmware/CMSIS/core/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 489:../firmware/CMSIS/core/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 490:../firmware/CMSIS/core/core_cm4.h **** 
 491:../firmware/CMSIS/core/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 492:../firmware/CMSIS/core/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 493:../firmware/CMSIS/core/core_cm4.h **** 
 494:../firmware/CMSIS/core/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 495:../firmware/CMSIS/core/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 496:../firmware/CMSIS/core/core_cm4.h **** 
 497:../firmware/CMSIS/core/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 498:../firmware/CMSIS/core/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 499:../firmware/CMSIS/core/core_cm4.h **** 
 500:../firmware/CMSIS/core/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 501:../firmware/CMSIS/core/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 502:../firmware/CMSIS/core/core_cm4.h **** 
 503:../firmware/CMSIS/core/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 504:../firmware/CMSIS/core/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 505:../firmware/CMSIS/core/core_cm4.h **** 
 506:../firmware/CMSIS/core/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 507:../firmware/CMSIS/core/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 508:../firmware/CMSIS/core/core_cm4.h **** 
 509:../firmware/CMSIS/core/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 510:../firmware/CMSIS/core/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 511:../firmware/CMSIS/core/core_cm4.h **** 
 512:../firmware/CMSIS/core/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 513:../firmware/CMSIS/core/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 514:../firmware/CMSIS/core/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 515:../firmware/CMSIS/core/core_cm4.h **** 
 516:../firmware/CMSIS/core/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 517:../firmware/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 518:../firmware/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 519:../firmware/CMSIS/core/core_cm4.h **** 
 520:../firmware/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 521:../firmware/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 522:../firmware/CMSIS/core/core_cm4.h **** 
 523:../firmware/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 524:../firmware/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 525:../firmware/CMSIS/core/core_cm4.h **** 
 526:../firmware/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 527:../firmware/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 528:../firmware/CMSIS/core/core_cm4.h **** 
 529:../firmware/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 530:../firmware/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 531:../firmware/CMSIS/core/core_cm4.h **** 
 532:../firmware/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 533:../firmware/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 534:../firmware/CMSIS/core/core_cm4.h **** 
 535:../firmware/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 536:../firmware/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 537:../firmware/CMSIS/core/core_cm4.h **** 
 538:../firmware/CMSIS/core/core_cm4.h **** /* SCB System Control Register Definitions */
 539:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 540:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 541:../firmware/CMSIS/core/core_cm4.h **** 
 542:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 543:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 11


 544:../firmware/CMSIS/core/core_cm4.h **** 
 545:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 546:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 547:../firmware/CMSIS/core/core_cm4.h **** 
 548:../firmware/CMSIS/core/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 549:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 550:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 551:../firmware/CMSIS/core/core_cm4.h **** 
 552:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 553:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 554:../firmware/CMSIS/core/core_cm4.h **** 
 555:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 556:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 557:../firmware/CMSIS/core/core_cm4.h **** 
 558:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 559:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 560:../firmware/CMSIS/core/core_cm4.h **** 
 561:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 562:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 563:../firmware/CMSIS/core/core_cm4.h **** 
 564:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 565:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 566:../firmware/CMSIS/core/core_cm4.h **** 
 567:../firmware/CMSIS/core/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 568:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 569:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 570:../firmware/CMSIS/core/core_cm4.h **** 
 571:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 572:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 573:../firmware/CMSIS/core/core_cm4.h **** 
 574:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 575:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 576:../firmware/CMSIS/core/core_cm4.h **** 
 577:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 578:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 579:../firmware/CMSIS/core/core_cm4.h **** 
 580:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 581:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 582:../firmware/CMSIS/core/core_cm4.h **** 
 583:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 584:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 585:../firmware/CMSIS/core/core_cm4.h **** 
 586:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 587:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 588:../firmware/CMSIS/core/core_cm4.h **** 
 589:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 590:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 591:../firmware/CMSIS/core/core_cm4.h **** 
 592:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 593:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 594:../firmware/CMSIS/core/core_cm4.h **** 
 595:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 596:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 597:../firmware/CMSIS/core/core_cm4.h **** 
 598:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 599:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 600:../firmware/CMSIS/core/core_cm4.h **** 
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 12


 601:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 602:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 603:../firmware/CMSIS/core/core_cm4.h **** 
 604:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 605:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 606:../firmware/CMSIS/core/core_cm4.h **** 
 607:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 608:../firmware/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 609:../firmware/CMSIS/core/core_cm4.h **** 
 610:../firmware/CMSIS/core/core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 611:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 612:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 613:../firmware/CMSIS/core/core_cm4.h **** 
 614:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 615:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 616:../firmware/CMSIS/core/core_cm4.h **** 
 617:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 618:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 619:../firmware/CMSIS/core/core_cm4.h **** 
 620:../firmware/CMSIS/core/core_cm4.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 621:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 622:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 623:../firmware/CMSIS/core/core_cm4.h **** 
 624:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 625:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 626:../firmware/CMSIS/core/core_cm4.h **** 
 627:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 628:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 629:../firmware/CMSIS/core/core_cm4.h **** 
 630:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 631:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 632:../firmware/CMSIS/core/core_cm4.h **** 
 633:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 634:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 635:../firmware/CMSIS/core/core_cm4.h **** 
 636:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 637:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 638:../firmware/CMSIS/core/core_cm4.h **** 
 639:../firmware/CMSIS/core/core_cm4.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 640:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 641:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 642:../firmware/CMSIS/core/core_cm4.h **** 
 643:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 644:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 645:../firmware/CMSIS/core/core_cm4.h **** 
 646:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 647:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 648:../firmware/CMSIS/core/core_cm4.h **** 
 649:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 650:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 651:../firmware/CMSIS/core/core_cm4.h **** 
 652:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 653:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 654:../firmware/CMSIS/core/core_cm4.h **** 
 655:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 656:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 657:../firmware/CMSIS/core/core_cm4.h **** 
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 13


 658:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 659:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 660:../firmware/CMSIS/core/core_cm4.h **** 
 661:../firmware/CMSIS/core/core_cm4.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 662:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 663:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 664:../firmware/CMSIS/core/core_cm4.h **** 
 665:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 666:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 667:../firmware/CMSIS/core/core_cm4.h **** 
 668:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 669:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 670:../firmware/CMSIS/core/core_cm4.h **** 
 671:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 672:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 673:../firmware/CMSIS/core/core_cm4.h **** 
 674:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 675:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 676:../firmware/CMSIS/core/core_cm4.h **** 
 677:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 678:../firmware/CMSIS/core/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 679:../firmware/CMSIS/core/core_cm4.h **** 
 680:../firmware/CMSIS/core/core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 681:../firmware/CMSIS/core/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 682:../firmware/CMSIS/core/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 683:../firmware/CMSIS/core/core_cm4.h **** 
 684:../firmware/CMSIS/core/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 685:../firmware/CMSIS/core/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 686:../firmware/CMSIS/core/core_cm4.h **** 
 687:../firmware/CMSIS/core/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 688:../firmware/CMSIS/core/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 689:../firmware/CMSIS/core/core_cm4.h **** 
 690:../firmware/CMSIS/core/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 691:../firmware/CMSIS/core/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 692:../firmware/CMSIS/core/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 693:../firmware/CMSIS/core/core_cm4.h **** 
 694:../firmware/CMSIS/core/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 695:../firmware/CMSIS/core/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 696:../firmware/CMSIS/core/core_cm4.h **** 
 697:../firmware/CMSIS/core/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 698:../firmware/CMSIS/core/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 699:../firmware/CMSIS/core/core_cm4.h **** 
 700:../firmware/CMSIS/core/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 701:../firmware/CMSIS/core/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 702:../firmware/CMSIS/core/core_cm4.h **** 
 703:../firmware/CMSIS/core/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 704:../firmware/CMSIS/core/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 705:../firmware/CMSIS/core/core_cm4.h **** 
 706:../firmware/CMSIS/core/core_cm4.h **** /*@} end of group CMSIS_SCB */
 707:../firmware/CMSIS/core/core_cm4.h **** 
 708:../firmware/CMSIS/core/core_cm4.h **** 
 709:../firmware/CMSIS/core/core_cm4.h **** /**
 710:../firmware/CMSIS/core/core_cm4.h ****   \ingroup  CMSIS_core_register
 711:../firmware/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 712:../firmware/CMSIS/core/core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 713:../firmware/CMSIS/core/core_cm4.h ****   @{
 714:../firmware/CMSIS/core/core_cm4.h ****  */
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 14


 715:../firmware/CMSIS/core/core_cm4.h **** 
 716:../firmware/CMSIS/core/core_cm4.h **** /**
 717:../firmware/CMSIS/core/core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 718:../firmware/CMSIS/core/core_cm4.h ****  */
 719:../firmware/CMSIS/core/core_cm4.h **** typedef struct
 720:../firmware/CMSIS/core/core_cm4.h **** {
 721:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED0[1U];
 722:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 723:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 724:../firmware/CMSIS/core/core_cm4.h **** } SCnSCB_Type;
 725:../firmware/CMSIS/core/core_cm4.h **** 
 726:../firmware/CMSIS/core/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 727:../firmware/CMSIS/core/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 728:../firmware/CMSIS/core/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 729:../firmware/CMSIS/core/core_cm4.h **** 
 730:../firmware/CMSIS/core/core_cm4.h **** /* Auxiliary Control Register Definitions */
 731:../firmware/CMSIS/core/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 732:../firmware/CMSIS/core/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 733:../firmware/CMSIS/core/core_cm4.h **** 
 734:../firmware/CMSIS/core/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 735:../firmware/CMSIS/core/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 736:../firmware/CMSIS/core/core_cm4.h **** 
 737:../firmware/CMSIS/core/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 738:../firmware/CMSIS/core/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 739:../firmware/CMSIS/core/core_cm4.h **** 
 740:../firmware/CMSIS/core/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 741:../firmware/CMSIS/core/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 742:../firmware/CMSIS/core/core_cm4.h **** 
 743:../firmware/CMSIS/core/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 744:../firmware/CMSIS/core/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 745:../firmware/CMSIS/core/core_cm4.h **** 
 746:../firmware/CMSIS/core/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 747:../firmware/CMSIS/core/core_cm4.h **** 
 748:../firmware/CMSIS/core/core_cm4.h **** 
 749:../firmware/CMSIS/core/core_cm4.h **** /**
 750:../firmware/CMSIS/core/core_cm4.h ****   \ingroup  CMSIS_core_register
 751:../firmware/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 752:../firmware/CMSIS/core/core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 753:../firmware/CMSIS/core/core_cm4.h ****   @{
 754:../firmware/CMSIS/core/core_cm4.h ****  */
 755:../firmware/CMSIS/core/core_cm4.h **** 
 756:../firmware/CMSIS/core/core_cm4.h **** /**
 757:../firmware/CMSIS/core/core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 758:../firmware/CMSIS/core/core_cm4.h ****  */
 759:../firmware/CMSIS/core/core_cm4.h **** typedef struct
 760:../firmware/CMSIS/core/core_cm4.h **** {
 761:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 762:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 763:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 764:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 765:../firmware/CMSIS/core/core_cm4.h **** } SysTick_Type;
 766:../firmware/CMSIS/core/core_cm4.h **** 
 767:../firmware/CMSIS/core/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 768:../firmware/CMSIS/core/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 769:../firmware/CMSIS/core/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 770:../firmware/CMSIS/core/core_cm4.h **** 
 771:../firmware/CMSIS/core/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 15


 772:../firmware/CMSIS/core/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 773:../firmware/CMSIS/core/core_cm4.h **** 
 774:../firmware/CMSIS/core/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 775:../firmware/CMSIS/core/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 776:../firmware/CMSIS/core/core_cm4.h **** 
 777:../firmware/CMSIS/core/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 778:../firmware/CMSIS/core/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 779:../firmware/CMSIS/core/core_cm4.h **** 
 780:../firmware/CMSIS/core/core_cm4.h **** /* SysTick Reload Register Definitions */
 781:../firmware/CMSIS/core/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 782:../firmware/CMSIS/core/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 783:../firmware/CMSIS/core/core_cm4.h **** 
 784:../firmware/CMSIS/core/core_cm4.h **** /* SysTick Current Register Definitions */
 785:../firmware/CMSIS/core/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 786:../firmware/CMSIS/core/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 787:../firmware/CMSIS/core/core_cm4.h **** 
 788:../firmware/CMSIS/core/core_cm4.h **** /* SysTick Calibration Register Definitions */
 789:../firmware/CMSIS/core/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 790:../firmware/CMSIS/core/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 791:../firmware/CMSIS/core/core_cm4.h **** 
 792:../firmware/CMSIS/core/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 793:../firmware/CMSIS/core/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 794:../firmware/CMSIS/core/core_cm4.h **** 
 795:../firmware/CMSIS/core/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 796:../firmware/CMSIS/core/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 797:../firmware/CMSIS/core/core_cm4.h **** 
 798:../firmware/CMSIS/core/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 799:../firmware/CMSIS/core/core_cm4.h **** 
 800:../firmware/CMSIS/core/core_cm4.h **** 
 801:../firmware/CMSIS/core/core_cm4.h **** /**
 802:../firmware/CMSIS/core/core_cm4.h ****   \ingroup  CMSIS_core_register
 803:../firmware/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 804:../firmware/CMSIS/core/core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 805:../firmware/CMSIS/core/core_cm4.h ****   @{
 806:../firmware/CMSIS/core/core_cm4.h ****  */
 807:../firmware/CMSIS/core/core_cm4.h **** 
 808:../firmware/CMSIS/core/core_cm4.h **** /**
 809:../firmware/CMSIS/core/core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 810:../firmware/CMSIS/core/core_cm4.h ****  */
 811:../firmware/CMSIS/core/core_cm4.h **** typedef struct
 812:../firmware/CMSIS/core/core_cm4.h **** {
 813:../firmware/CMSIS/core/core_cm4.h ****   __OM  union
 814:../firmware/CMSIS/core/core_cm4.h ****   {
 815:../firmware/CMSIS/core/core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 816:../firmware/CMSIS/core/core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 817:../firmware/CMSIS/core/core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 818:../firmware/CMSIS/core/core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 819:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED0[864U];
 820:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 821:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED1[15U];
 822:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 823:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED2[15U];
 824:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 825:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED3[29U];
 826:../firmware/CMSIS/core/core_cm4.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 827:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 828:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 16


 829:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED4[43U];
 830:../firmware/CMSIS/core/core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 831:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 832:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED5[6U];
 833:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 834:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 835:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 836:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 837:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 838:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 839:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 840:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 841:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 842:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 843:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 844:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 845:../firmware/CMSIS/core/core_cm4.h **** } ITM_Type;
 846:../firmware/CMSIS/core/core_cm4.h **** 
 847:../firmware/CMSIS/core/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 848:../firmware/CMSIS/core/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 849:../firmware/CMSIS/core/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 850:../firmware/CMSIS/core/core_cm4.h **** 
 851:../firmware/CMSIS/core/core_cm4.h **** /* ITM Trace Control Register Definitions */
 852:../firmware/CMSIS/core/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 853:../firmware/CMSIS/core/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 854:../firmware/CMSIS/core/core_cm4.h **** 
 855:../firmware/CMSIS/core/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 856:../firmware/CMSIS/core/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 857:../firmware/CMSIS/core/core_cm4.h **** 
 858:../firmware/CMSIS/core/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 859:../firmware/CMSIS/core/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 860:../firmware/CMSIS/core/core_cm4.h **** 
 861:../firmware/CMSIS/core/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 862:../firmware/CMSIS/core/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 863:../firmware/CMSIS/core/core_cm4.h **** 
 864:../firmware/CMSIS/core/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 865:../firmware/CMSIS/core/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 866:../firmware/CMSIS/core/core_cm4.h **** 
 867:../firmware/CMSIS/core/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 868:../firmware/CMSIS/core/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 869:../firmware/CMSIS/core/core_cm4.h **** 
 870:../firmware/CMSIS/core/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 871:../firmware/CMSIS/core/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 872:../firmware/CMSIS/core/core_cm4.h **** 
 873:../firmware/CMSIS/core/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 874:../firmware/CMSIS/core/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 875:../firmware/CMSIS/core/core_cm4.h **** 
 876:../firmware/CMSIS/core/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 877:../firmware/CMSIS/core/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 878:../firmware/CMSIS/core/core_cm4.h **** 
 879:../firmware/CMSIS/core/core_cm4.h **** /* ITM Integration Write Register Definitions */
 880:../firmware/CMSIS/core/core_cm4.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 881:../firmware/CMSIS/core/core_cm4.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 882:../firmware/CMSIS/core/core_cm4.h **** 
 883:../firmware/CMSIS/core/core_cm4.h **** /* ITM Integration Read Register Definitions */
 884:../firmware/CMSIS/core/core_cm4.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 885:../firmware/CMSIS/core/core_cm4.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 17


 886:../firmware/CMSIS/core/core_cm4.h **** 
 887:../firmware/CMSIS/core/core_cm4.h **** /* ITM Integration Mode Control Register Definitions */
 888:../firmware/CMSIS/core/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 889:../firmware/CMSIS/core/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 890:../firmware/CMSIS/core/core_cm4.h **** 
 891:../firmware/CMSIS/core/core_cm4.h **** /* ITM Lock Status Register Definitions */
 892:../firmware/CMSIS/core/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 893:../firmware/CMSIS/core/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 894:../firmware/CMSIS/core/core_cm4.h **** 
 895:../firmware/CMSIS/core/core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 896:../firmware/CMSIS/core/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 897:../firmware/CMSIS/core/core_cm4.h **** 
 898:../firmware/CMSIS/core/core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 899:../firmware/CMSIS/core/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 900:../firmware/CMSIS/core/core_cm4.h **** 
 901:../firmware/CMSIS/core/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 902:../firmware/CMSIS/core/core_cm4.h **** 
 903:../firmware/CMSIS/core/core_cm4.h **** 
 904:../firmware/CMSIS/core/core_cm4.h **** /**
 905:../firmware/CMSIS/core/core_cm4.h ****   \ingroup  CMSIS_core_register
 906:../firmware/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 907:../firmware/CMSIS/core/core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 908:../firmware/CMSIS/core/core_cm4.h ****   @{
 909:../firmware/CMSIS/core/core_cm4.h ****  */
 910:../firmware/CMSIS/core/core_cm4.h **** 
 911:../firmware/CMSIS/core/core_cm4.h **** /**
 912:../firmware/CMSIS/core/core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 913:../firmware/CMSIS/core/core_cm4.h ****  */
 914:../firmware/CMSIS/core/core_cm4.h **** typedef struct
 915:../firmware/CMSIS/core/core_cm4.h **** {
 916:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 917:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 918:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 919:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 920:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 921:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 922:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 923:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 924:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 925:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 926:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 927:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED0[1U];
 928:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 929:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 930:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 931:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED1[1U];
 932:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 933:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 934:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 935:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED2[1U];
 936:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 937:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 938:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 939:../firmware/CMSIS/core/core_cm4.h **** } DWT_Type;
 940:../firmware/CMSIS/core/core_cm4.h **** 
 941:../firmware/CMSIS/core/core_cm4.h **** /* DWT Control Register Definitions */
 942:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 18


 943:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 944:../firmware/CMSIS/core/core_cm4.h **** 
 945:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 946:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 947:../firmware/CMSIS/core/core_cm4.h **** 
 948:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 949:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 950:../firmware/CMSIS/core/core_cm4.h **** 
 951:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 952:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 953:../firmware/CMSIS/core/core_cm4.h **** 
 954:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 955:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 956:../firmware/CMSIS/core/core_cm4.h **** 
 957:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 958:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 959:../firmware/CMSIS/core/core_cm4.h **** 
 960:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 961:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 962:../firmware/CMSIS/core/core_cm4.h **** 
 963:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 964:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 965:../firmware/CMSIS/core/core_cm4.h **** 
 966:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 967:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 968:../firmware/CMSIS/core/core_cm4.h **** 
 969:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 970:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 971:../firmware/CMSIS/core/core_cm4.h **** 
 972:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 973:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 974:../firmware/CMSIS/core/core_cm4.h **** 
 975:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 976:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 977:../firmware/CMSIS/core/core_cm4.h **** 
 978:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 979:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 980:../firmware/CMSIS/core/core_cm4.h **** 
 981:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 982:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 983:../firmware/CMSIS/core/core_cm4.h **** 
 984:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 985:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 986:../firmware/CMSIS/core/core_cm4.h **** 
 987:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 988:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 989:../firmware/CMSIS/core/core_cm4.h **** 
 990:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 991:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 992:../firmware/CMSIS/core/core_cm4.h **** 
 993:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 994:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 995:../firmware/CMSIS/core/core_cm4.h **** 
 996:../firmware/CMSIS/core/core_cm4.h **** /* DWT CPI Count Register Definitions */
 997:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 998:../firmware/CMSIS/core/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 999:../firmware/CMSIS/core/core_cm4.h **** 
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 19


1000:../firmware/CMSIS/core/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
1001:../firmware/CMSIS/core/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
1002:../firmware/CMSIS/core/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
1003:../firmware/CMSIS/core/core_cm4.h **** 
1004:../firmware/CMSIS/core/core_cm4.h **** /* DWT Sleep Count Register Definitions */
1005:../firmware/CMSIS/core/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
1006:../firmware/CMSIS/core/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
1007:../firmware/CMSIS/core/core_cm4.h **** 
1008:../firmware/CMSIS/core/core_cm4.h **** /* DWT LSU Count Register Definitions */
1009:../firmware/CMSIS/core/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
1010:../firmware/CMSIS/core/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1011:../firmware/CMSIS/core/core_cm4.h **** 
1012:../firmware/CMSIS/core/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
1013:../firmware/CMSIS/core/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1014:../firmware/CMSIS/core/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1015:../firmware/CMSIS/core/core_cm4.h **** 
1016:../firmware/CMSIS/core/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1017:../firmware/CMSIS/core/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1018:../firmware/CMSIS/core/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1019:../firmware/CMSIS/core/core_cm4.h **** 
1020:../firmware/CMSIS/core/core_cm4.h **** /* DWT Comparator Function Register Definitions */
1021:../firmware/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1022:../firmware/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1023:../firmware/CMSIS/core/core_cm4.h **** 
1024:../firmware/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1025:../firmware/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1026:../firmware/CMSIS/core/core_cm4.h **** 
1027:../firmware/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1028:../firmware/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1029:../firmware/CMSIS/core/core_cm4.h **** 
1030:../firmware/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1031:../firmware/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1032:../firmware/CMSIS/core/core_cm4.h **** 
1033:../firmware/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1034:../firmware/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1035:../firmware/CMSIS/core/core_cm4.h **** 
1036:../firmware/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1037:../firmware/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1038:../firmware/CMSIS/core/core_cm4.h **** 
1039:../firmware/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1040:../firmware/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1041:../firmware/CMSIS/core/core_cm4.h **** 
1042:../firmware/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1043:../firmware/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1044:../firmware/CMSIS/core/core_cm4.h **** 
1045:../firmware/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1046:../firmware/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1047:../firmware/CMSIS/core/core_cm4.h **** 
1048:../firmware/CMSIS/core/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1049:../firmware/CMSIS/core/core_cm4.h **** 
1050:../firmware/CMSIS/core/core_cm4.h **** 
1051:../firmware/CMSIS/core/core_cm4.h **** /**
1052:../firmware/CMSIS/core/core_cm4.h ****   \ingroup  CMSIS_core_register
1053:../firmware/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1054:../firmware/CMSIS/core/core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1055:../firmware/CMSIS/core/core_cm4.h ****   @{
1056:../firmware/CMSIS/core/core_cm4.h ****  */
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 20


1057:../firmware/CMSIS/core/core_cm4.h **** 
1058:../firmware/CMSIS/core/core_cm4.h **** /**
1059:../firmware/CMSIS/core/core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1060:../firmware/CMSIS/core/core_cm4.h ****  */
1061:../firmware/CMSIS/core/core_cm4.h **** typedef struct
1062:../firmware/CMSIS/core/core_cm4.h **** {
1063:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1064:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1065:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED0[2U];
1066:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1067:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED1[55U];
1068:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1069:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED2[131U];
1070:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1071:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1072:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1073:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED3[759U];
1074:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1075:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1076:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1077:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED4[1U];
1078:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1079:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1080:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1081:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED5[39U];
1082:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1083:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1084:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED7[8U];
1085:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1086:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1087:../firmware/CMSIS/core/core_cm4.h **** } TPI_Type;
1088:../firmware/CMSIS/core/core_cm4.h **** 
1089:../firmware/CMSIS/core/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1090:../firmware/CMSIS/core/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1091:../firmware/CMSIS/core/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1092:../firmware/CMSIS/core/core_cm4.h **** 
1093:../firmware/CMSIS/core/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1094:../firmware/CMSIS/core/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1095:../firmware/CMSIS/core/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1096:../firmware/CMSIS/core/core_cm4.h **** 
1097:../firmware/CMSIS/core/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1098:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1099:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1100:../firmware/CMSIS/core/core_cm4.h **** 
1101:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1102:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1103:../firmware/CMSIS/core/core_cm4.h **** 
1104:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1105:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1106:../firmware/CMSIS/core/core_cm4.h **** 
1107:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1108:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1109:../firmware/CMSIS/core/core_cm4.h **** 
1110:../firmware/CMSIS/core/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1111:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1112:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1113:../firmware/CMSIS/core/core_cm4.h **** 
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 21


1114:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1115:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1116:../firmware/CMSIS/core/core_cm4.h **** 
1117:../firmware/CMSIS/core/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1118:../firmware/CMSIS/core/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1119:../firmware/CMSIS/core/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1120:../firmware/CMSIS/core/core_cm4.h **** 
1121:../firmware/CMSIS/core/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1122:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1123:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1124:../firmware/CMSIS/core/core_cm4.h **** 
1125:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1126:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1127:../firmware/CMSIS/core/core_cm4.h **** 
1128:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1129:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1130:../firmware/CMSIS/core/core_cm4.h **** 
1131:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1132:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1133:../firmware/CMSIS/core/core_cm4.h **** 
1134:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1135:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1136:../firmware/CMSIS/core/core_cm4.h **** 
1137:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1138:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1139:../firmware/CMSIS/core/core_cm4.h **** 
1140:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1141:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1142:../firmware/CMSIS/core/core_cm4.h **** 
1143:../firmware/CMSIS/core/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1144:../firmware/CMSIS/core/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1145:../firmware/CMSIS/core/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1146:../firmware/CMSIS/core/core_cm4.h **** 
1147:../firmware/CMSIS/core/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1148:../firmware/CMSIS/core/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1149:../firmware/CMSIS/core/core_cm4.h **** 
1150:../firmware/CMSIS/core/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1151:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1152:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1153:../firmware/CMSIS/core/core_cm4.h **** 
1154:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1155:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1156:../firmware/CMSIS/core/core_cm4.h **** 
1157:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1158:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1159:../firmware/CMSIS/core/core_cm4.h **** 
1160:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1161:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1162:../firmware/CMSIS/core/core_cm4.h **** 
1163:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1164:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1165:../firmware/CMSIS/core/core_cm4.h **** 
1166:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1167:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1168:../firmware/CMSIS/core/core_cm4.h **** 
1169:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1170:../firmware/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 22


1171:../firmware/CMSIS/core/core_cm4.h **** 
1172:../firmware/CMSIS/core/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1173:../firmware/CMSIS/core/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1174:../firmware/CMSIS/core/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1175:../firmware/CMSIS/core/core_cm4.h **** 
1176:../firmware/CMSIS/core/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1177:../firmware/CMSIS/core/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1178:../firmware/CMSIS/core/core_cm4.h **** 
1179:../firmware/CMSIS/core/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1180:../firmware/CMSIS/core/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1181:../firmware/CMSIS/core/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1182:../firmware/CMSIS/core/core_cm4.h **** 
1183:../firmware/CMSIS/core/core_cm4.h **** /* TPI DEVID Register Definitions */
1184:../firmware/CMSIS/core/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1185:../firmware/CMSIS/core/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1186:../firmware/CMSIS/core/core_cm4.h **** 
1187:../firmware/CMSIS/core/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1188:../firmware/CMSIS/core/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1189:../firmware/CMSIS/core/core_cm4.h **** 
1190:../firmware/CMSIS/core/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1191:../firmware/CMSIS/core/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1192:../firmware/CMSIS/core/core_cm4.h **** 
1193:../firmware/CMSIS/core/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1194:../firmware/CMSIS/core/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1195:../firmware/CMSIS/core/core_cm4.h **** 
1196:../firmware/CMSIS/core/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1197:../firmware/CMSIS/core/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1198:../firmware/CMSIS/core/core_cm4.h **** 
1199:../firmware/CMSIS/core/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1200:../firmware/CMSIS/core/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1201:../firmware/CMSIS/core/core_cm4.h **** 
1202:../firmware/CMSIS/core/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1203:../firmware/CMSIS/core/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1204:../firmware/CMSIS/core/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1205:../firmware/CMSIS/core/core_cm4.h **** 
1206:../firmware/CMSIS/core/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1207:../firmware/CMSIS/core/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1208:../firmware/CMSIS/core/core_cm4.h **** 
1209:../firmware/CMSIS/core/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1210:../firmware/CMSIS/core/core_cm4.h **** 
1211:../firmware/CMSIS/core/core_cm4.h **** 
1212:../firmware/CMSIS/core/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1213:../firmware/CMSIS/core/core_cm4.h **** /**
1214:../firmware/CMSIS/core/core_cm4.h ****   \ingroup  CMSIS_core_register
1215:../firmware/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1216:../firmware/CMSIS/core/core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1217:../firmware/CMSIS/core/core_cm4.h ****   @{
1218:../firmware/CMSIS/core/core_cm4.h ****  */
1219:../firmware/CMSIS/core/core_cm4.h **** 
1220:../firmware/CMSIS/core/core_cm4.h **** /**
1221:../firmware/CMSIS/core/core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1222:../firmware/CMSIS/core/core_cm4.h ****  */
1223:../firmware/CMSIS/core/core_cm4.h **** typedef struct
1224:../firmware/CMSIS/core/core_cm4.h **** {
1225:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1226:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1227:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 23


1228:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1229:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1230:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1231:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1232:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1233:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1234:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1235:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1236:../firmware/CMSIS/core/core_cm4.h **** } MPU_Type;
1237:../firmware/CMSIS/core/core_cm4.h **** 
1238:../firmware/CMSIS/core/core_cm4.h **** #define MPU_TYPE_RALIASES                  4U
1239:../firmware/CMSIS/core/core_cm4.h **** 
1240:../firmware/CMSIS/core/core_cm4.h **** /* MPU Type Register Definitions */
1241:../firmware/CMSIS/core/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1242:../firmware/CMSIS/core/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1243:../firmware/CMSIS/core/core_cm4.h **** 
1244:../firmware/CMSIS/core/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1245:../firmware/CMSIS/core/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1246:../firmware/CMSIS/core/core_cm4.h **** 
1247:../firmware/CMSIS/core/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1248:../firmware/CMSIS/core/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1249:../firmware/CMSIS/core/core_cm4.h **** 
1250:../firmware/CMSIS/core/core_cm4.h **** /* MPU Control Register Definitions */
1251:../firmware/CMSIS/core/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1252:../firmware/CMSIS/core/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1253:../firmware/CMSIS/core/core_cm4.h **** 
1254:../firmware/CMSIS/core/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1255:../firmware/CMSIS/core/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1256:../firmware/CMSIS/core/core_cm4.h **** 
1257:../firmware/CMSIS/core/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1258:../firmware/CMSIS/core/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1259:../firmware/CMSIS/core/core_cm4.h **** 
1260:../firmware/CMSIS/core/core_cm4.h **** /* MPU Region Number Register Definitions */
1261:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1262:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1263:../firmware/CMSIS/core/core_cm4.h **** 
1264:../firmware/CMSIS/core/core_cm4.h **** /* MPU Region Base Address Register Definitions */
1265:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1266:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1267:../firmware/CMSIS/core/core_cm4.h **** 
1268:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1269:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1270:../firmware/CMSIS/core/core_cm4.h **** 
1271:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1272:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1273:../firmware/CMSIS/core/core_cm4.h **** 
1274:../firmware/CMSIS/core/core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1275:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1276:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1277:../firmware/CMSIS/core/core_cm4.h **** 
1278:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1279:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1280:../firmware/CMSIS/core/core_cm4.h **** 
1281:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1282:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1283:../firmware/CMSIS/core/core_cm4.h **** 
1284:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 24


1285:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1286:../firmware/CMSIS/core/core_cm4.h **** 
1287:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1288:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1289:../firmware/CMSIS/core/core_cm4.h **** 
1290:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1291:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1292:../firmware/CMSIS/core/core_cm4.h **** 
1293:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1294:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1295:../firmware/CMSIS/core/core_cm4.h **** 
1296:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1297:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1298:../firmware/CMSIS/core/core_cm4.h **** 
1299:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1300:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1301:../firmware/CMSIS/core/core_cm4.h **** 
1302:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1303:../firmware/CMSIS/core/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1304:../firmware/CMSIS/core/core_cm4.h **** 
1305:../firmware/CMSIS/core/core_cm4.h **** /*@} end of group CMSIS_MPU */
1306:../firmware/CMSIS/core/core_cm4.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1307:../firmware/CMSIS/core/core_cm4.h **** 
1308:../firmware/CMSIS/core/core_cm4.h **** 
1309:../firmware/CMSIS/core/core_cm4.h **** /**
1310:../firmware/CMSIS/core/core_cm4.h ****   \ingroup  CMSIS_core_register
1311:../firmware/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1312:../firmware/CMSIS/core/core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1313:../firmware/CMSIS/core/core_cm4.h ****   @{
1314:../firmware/CMSIS/core/core_cm4.h ****  */
1315:../firmware/CMSIS/core/core_cm4.h **** 
1316:../firmware/CMSIS/core/core_cm4.h **** /**
1317:../firmware/CMSIS/core/core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1318:../firmware/CMSIS/core/core_cm4.h ****  */
1319:../firmware/CMSIS/core/core_cm4.h **** typedef struct
1320:../firmware/CMSIS/core/core_cm4.h **** {
1321:../firmware/CMSIS/core/core_cm4.h ****         uint32_t RESERVED0[1U];
1322:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1323:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1324:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1325:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1326:../firmware/CMSIS/core/core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1327:../firmware/CMSIS/core/core_cm4.h **** } FPU_Type;
1328:../firmware/CMSIS/core/core_cm4.h **** 
1329:../firmware/CMSIS/core/core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1330:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1331:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1332:../firmware/CMSIS/core/core_cm4.h **** 
1333:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1334:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1335:../firmware/CMSIS/core/core_cm4.h **** 
1336:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1337:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1338:../firmware/CMSIS/core/core_cm4.h **** 
1339:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1340:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1341:../firmware/CMSIS/core/core_cm4.h **** 
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 25


1342:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1343:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1344:../firmware/CMSIS/core/core_cm4.h **** 
1345:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1346:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1347:../firmware/CMSIS/core/core_cm4.h **** 
1348:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1349:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1350:../firmware/CMSIS/core/core_cm4.h **** 
1351:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1352:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1353:../firmware/CMSIS/core/core_cm4.h **** 
1354:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1355:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1356:../firmware/CMSIS/core/core_cm4.h **** 
1357:../firmware/CMSIS/core/core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1358:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1359:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1360:../firmware/CMSIS/core/core_cm4.h **** 
1361:../firmware/CMSIS/core/core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1362:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1363:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1364:../firmware/CMSIS/core/core_cm4.h **** 
1365:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1366:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1367:../firmware/CMSIS/core/core_cm4.h **** 
1368:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1369:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1370:../firmware/CMSIS/core/core_cm4.h **** 
1371:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1372:../firmware/CMSIS/core/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1373:../firmware/CMSIS/core/core_cm4.h **** 
1374:../firmware/CMSIS/core/core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1375:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1376:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1377:../firmware/CMSIS/core/core_cm4.h **** 
1378:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1379:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1380:../firmware/CMSIS/core/core_cm4.h **** 
1381:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1382:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1383:../firmware/CMSIS/core/core_cm4.h **** 
1384:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1385:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1386:../firmware/CMSIS/core/core_cm4.h **** 
1387:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1388:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1389:../firmware/CMSIS/core/core_cm4.h **** 
1390:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1391:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1392:../firmware/CMSIS/core/core_cm4.h **** 
1393:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1394:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1395:../firmware/CMSIS/core/core_cm4.h **** 
1396:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1397:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1398:../firmware/CMSIS/core/core_cm4.h **** 
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 26


1399:../firmware/CMSIS/core/core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1400:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1401:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1402:../firmware/CMSIS/core/core_cm4.h **** 
1403:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1404:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1405:../firmware/CMSIS/core/core_cm4.h **** 
1406:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1407:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1408:../firmware/CMSIS/core/core_cm4.h **** 
1409:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1410:../firmware/CMSIS/core/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1411:../firmware/CMSIS/core/core_cm4.h **** 
1412:../firmware/CMSIS/core/core_cm4.h **** /*@} end of group CMSIS_FPU */
1413:../firmware/CMSIS/core/core_cm4.h **** 
1414:../firmware/CMSIS/core/core_cm4.h **** 
1415:../firmware/CMSIS/core/core_cm4.h **** /**
1416:../firmware/CMSIS/core/core_cm4.h ****   \ingroup  CMSIS_core_register
1417:../firmware/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1418:../firmware/CMSIS/core/core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1419:../firmware/CMSIS/core/core_cm4.h ****   @{
1420:../firmware/CMSIS/core/core_cm4.h ****  */
1421:../firmware/CMSIS/core/core_cm4.h **** 
1422:../firmware/CMSIS/core/core_cm4.h **** /**
1423:../firmware/CMSIS/core/core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1424:../firmware/CMSIS/core/core_cm4.h ****  */
1425:../firmware/CMSIS/core/core_cm4.h **** typedef struct
1426:../firmware/CMSIS/core/core_cm4.h **** {
1427:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1428:../firmware/CMSIS/core/core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1429:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1430:../firmware/CMSIS/core/core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1431:../firmware/CMSIS/core/core_cm4.h **** } CoreDebug_Type;
1432:../firmware/CMSIS/core/core_cm4.h **** 
1433:../firmware/CMSIS/core/core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1434:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1435:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1436:../firmware/CMSIS/core/core_cm4.h **** 
1437:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1438:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1439:../firmware/CMSIS/core/core_cm4.h **** 
1440:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1441:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1442:../firmware/CMSIS/core/core_cm4.h **** 
1443:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1444:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1445:../firmware/CMSIS/core/core_cm4.h **** 
1446:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1447:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1448:../firmware/CMSIS/core/core_cm4.h **** 
1449:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1450:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1451:../firmware/CMSIS/core/core_cm4.h **** 
1452:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1453:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1454:../firmware/CMSIS/core/core_cm4.h **** 
1455:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 27


1456:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1457:../firmware/CMSIS/core/core_cm4.h **** 
1458:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1459:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1460:../firmware/CMSIS/core/core_cm4.h **** 
1461:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1462:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1463:../firmware/CMSIS/core/core_cm4.h **** 
1464:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1465:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1466:../firmware/CMSIS/core/core_cm4.h **** 
1467:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1468:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1469:../firmware/CMSIS/core/core_cm4.h **** 
1470:../firmware/CMSIS/core/core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1471:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1472:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1473:../firmware/CMSIS/core/core_cm4.h **** 
1474:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1475:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1476:../firmware/CMSIS/core/core_cm4.h **** 
1477:../firmware/CMSIS/core/core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1478:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1479:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1480:../firmware/CMSIS/core/core_cm4.h **** 
1481:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1482:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1483:../firmware/CMSIS/core/core_cm4.h **** 
1484:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1485:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1486:../firmware/CMSIS/core/core_cm4.h **** 
1487:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1488:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1489:../firmware/CMSIS/core/core_cm4.h **** 
1490:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1491:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1492:../firmware/CMSIS/core/core_cm4.h **** 
1493:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1494:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1495:../firmware/CMSIS/core/core_cm4.h **** 
1496:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1497:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1498:../firmware/CMSIS/core/core_cm4.h **** 
1499:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1500:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1501:../firmware/CMSIS/core/core_cm4.h **** 
1502:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1503:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1504:../firmware/CMSIS/core/core_cm4.h **** 
1505:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1506:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1507:../firmware/CMSIS/core/core_cm4.h **** 
1508:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1509:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1510:../firmware/CMSIS/core/core_cm4.h **** 
1511:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1512:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 28


1513:../firmware/CMSIS/core/core_cm4.h **** 
1514:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1515:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1516:../firmware/CMSIS/core/core_cm4.h **** 
1517:../firmware/CMSIS/core/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1518:../firmware/CMSIS/core/core_cm4.h **** 
1519:../firmware/CMSIS/core/core_cm4.h **** 
1520:../firmware/CMSIS/core/core_cm4.h **** /**
1521:../firmware/CMSIS/core/core_cm4.h ****   \ingroup    CMSIS_core_register
1522:../firmware/CMSIS/core/core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1523:../firmware/CMSIS/core/core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1524:../firmware/CMSIS/core/core_cm4.h ****   @{
1525:../firmware/CMSIS/core/core_cm4.h ****  */
1526:../firmware/CMSIS/core/core_cm4.h **** 
1527:../firmware/CMSIS/core/core_cm4.h **** /**
1528:../firmware/CMSIS/core/core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1529:../firmware/CMSIS/core/core_cm4.h ****   \param[in] field  Name of the register bit field.
1530:../firmware/CMSIS/core/core_cm4.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1531:../firmware/CMSIS/core/core_cm4.h ****   \return           Masked and shifted value.
1532:../firmware/CMSIS/core/core_cm4.h **** */
1533:../firmware/CMSIS/core/core_cm4.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1534:../firmware/CMSIS/core/core_cm4.h **** 
1535:../firmware/CMSIS/core/core_cm4.h **** /**
1536:../firmware/CMSIS/core/core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1537:../firmware/CMSIS/core/core_cm4.h ****   \param[in] field  Name of the register bit field.
1538:../firmware/CMSIS/core/core_cm4.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1539:../firmware/CMSIS/core/core_cm4.h ****   \return           Masked and shifted bit field value.
1540:../firmware/CMSIS/core/core_cm4.h **** */
1541:../firmware/CMSIS/core/core_cm4.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1542:../firmware/CMSIS/core/core_cm4.h **** 
1543:../firmware/CMSIS/core/core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1544:../firmware/CMSIS/core/core_cm4.h **** 
1545:../firmware/CMSIS/core/core_cm4.h **** 
1546:../firmware/CMSIS/core/core_cm4.h **** /**
1547:../firmware/CMSIS/core/core_cm4.h ****   \ingroup    CMSIS_core_register
1548:../firmware/CMSIS/core/core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1549:../firmware/CMSIS/core/core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1550:../firmware/CMSIS/core/core_cm4.h ****   @{
1551:../firmware/CMSIS/core/core_cm4.h ****  */
1552:../firmware/CMSIS/core/core_cm4.h **** 
1553:../firmware/CMSIS/core/core_cm4.h **** /* Memory mapping of Core Hardware */
1554:../firmware/CMSIS/core/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1555:../firmware/CMSIS/core/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1556:../firmware/CMSIS/core/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1557:../firmware/CMSIS/core/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1558:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1559:../firmware/CMSIS/core/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1560:../firmware/CMSIS/core/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1561:../firmware/CMSIS/core/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1562:../firmware/CMSIS/core/core_cm4.h **** 
1563:../firmware/CMSIS/core/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1564:../firmware/CMSIS/core/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1565:../firmware/CMSIS/core/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1566:../firmware/CMSIS/core/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1567:../firmware/CMSIS/core/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1568:../firmware/CMSIS/core/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1569:../firmware/CMSIS/core/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 29


1570:../firmware/CMSIS/core/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1571:../firmware/CMSIS/core/core_cm4.h **** 
1572:../firmware/CMSIS/core/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1573:../firmware/CMSIS/core/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1574:../firmware/CMSIS/core/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1575:../firmware/CMSIS/core/core_cm4.h **** #endif
1576:../firmware/CMSIS/core/core_cm4.h **** 
1577:../firmware/CMSIS/core/core_cm4.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1578:../firmware/CMSIS/core/core_cm4.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1579:../firmware/CMSIS/core/core_cm4.h **** 
1580:../firmware/CMSIS/core/core_cm4.h **** /*@} */
1581:../firmware/CMSIS/core/core_cm4.h **** 
1582:../firmware/CMSIS/core/core_cm4.h **** 
1583:../firmware/CMSIS/core/core_cm4.h **** 
1584:../firmware/CMSIS/core/core_cm4.h **** /*******************************************************************************
1585:../firmware/CMSIS/core/core_cm4.h ****  *                Hardware Abstraction Layer
1586:../firmware/CMSIS/core/core_cm4.h ****   Core Function Interface contains:
1587:../firmware/CMSIS/core/core_cm4.h ****   - Core NVIC Functions
1588:../firmware/CMSIS/core/core_cm4.h ****   - Core SysTick Functions
1589:../firmware/CMSIS/core/core_cm4.h ****   - Core Debug Functions
1590:../firmware/CMSIS/core/core_cm4.h ****   - Core Register Access Functions
1591:../firmware/CMSIS/core/core_cm4.h ****  ******************************************************************************/
1592:../firmware/CMSIS/core/core_cm4.h **** /**
1593:../firmware/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1594:../firmware/CMSIS/core/core_cm4.h **** */
1595:../firmware/CMSIS/core/core_cm4.h **** 
1596:../firmware/CMSIS/core/core_cm4.h **** 
1597:../firmware/CMSIS/core/core_cm4.h **** 
1598:../firmware/CMSIS/core/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1599:../firmware/CMSIS/core/core_cm4.h **** /**
1600:../firmware/CMSIS/core/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1601:../firmware/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1602:../firmware/CMSIS/core/core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1603:../firmware/CMSIS/core/core_cm4.h ****   @{
1604:../firmware/CMSIS/core/core_cm4.h ****  */
1605:../firmware/CMSIS/core/core_cm4.h **** 
1606:../firmware/CMSIS/core/core_cm4.h **** #ifdef CMSIS_NVIC_VIRTUAL
1607:../firmware/CMSIS/core/core_cm4.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1608:../firmware/CMSIS/core/core_cm4.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1609:../firmware/CMSIS/core/core_cm4.h ****   #endif
1610:../firmware/CMSIS/core/core_cm4.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1611:../firmware/CMSIS/core/core_cm4.h **** #else
1612:../firmware/CMSIS/core/core_cm4.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1613:../firmware/CMSIS/core/core_cm4.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1614:../firmware/CMSIS/core/core_cm4.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1615:../firmware/CMSIS/core/core_cm4.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1616:../firmware/CMSIS/core/core_cm4.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1617:../firmware/CMSIS/core/core_cm4.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1618:../firmware/CMSIS/core/core_cm4.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1619:../firmware/CMSIS/core/core_cm4.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1620:../firmware/CMSIS/core/core_cm4.h ****   #define NVIC_GetActive              __NVIC_GetActive
1621:../firmware/CMSIS/core/core_cm4.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1622:../firmware/CMSIS/core/core_cm4.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1623:../firmware/CMSIS/core/core_cm4.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1624:../firmware/CMSIS/core/core_cm4.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1625:../firmware/CMSIS/core/core_cm4.h **** 
1626:../firmware/CMSIS/core/core_cm4.h **** #ifdef CMSIS_VECTAB_VIRTUAL
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 30


1627:../firmware/CMSIS/core/core_cm4.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1628:../firmware/CMSIS/core/core_cm4.h ****    #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1629:../firmware/CMSIS/core/core_cm4.h ****   #endif
1630:../firmware/CMSIS/core/core_cm4.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1631:../firmware/CMSIS/core/core_cm4.h **** #else
1632:../firmware/CMSIS/core/core_cm4.h ****   #define NVIC_SetVector              __NVIC_SetVector
1633:../firmware/CMSIS/core/core_cm4.h ****   #define NVIC_GetVector              __NVIC_GetVector
1634:../firmware/CMSIS/core/core_cm4.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1635:../firmware/CMSIS/core/core_cm4.h **** 
1636:../firmware/CMSIS/core/core_cm4.h **** #define NVIC_USER_IRQ_OFFSET          16
1637:../firmware/CMSIS/core/core_cm4.h **** 
1638:../firmware/CMSIS/core/core_cm4.h **** 
1639:../firmware/CMSIS/core/core_cm4.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1640:../firmware/CMSIS/core/core_cm4.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1641:../firmware/CMSIS/core/core_cm4.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1642:../firmware/CMSIS/core/core_cm4.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1643:../firmware/CMSIS/core/core_cm4.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1644:../firmware/CMSIS/core/core_cm4.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1645:../firmware/CMSIS/core/core_cm4.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1646:../firmware/CMSIS/core/core_cm4.h **** 
1647:../firmware/CMSIS/core/core_cm4.h **** 
1648:../firmware/CMSIS/core/core_cm4.h **** /**
1649:../firmware/CMSIS/core/core_cm4.h ****   \brief   Set Priority Grouping
1650:../firmware/CMSIS/core/core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1651:../firmware/CMSIS/core/core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1652:../firmware/CMSIS/core/core_cm4.h ****            Only values from 0..7 are used.
1653:../firmware/CMSIS/core/core_cm4.h ****            In case of a conflict between priority grouping and available
1654:../firmware/CMSIS/core/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1655:../firmware/CMSIS/core/core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1656:../firmware/CMSIS/core/core_cm4.h ****  */
1657:../firmware/CMSIS/core/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1658:../firmware/CMSIS/core/core_cm4.h **** {
1659:../firmware/CMSIS/core/core_cm4.h ****   uint32_t reg_value;
1660:../firmware/CMSIS/core/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1661:../firmware/CMSIS/core/core_cm4.h **** 
1662:../firmware/CMSIS/core/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1663:../firmware/CMSIS/core/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1664:../firmware/CMSIS/core/core_cm4.h ****   reg_value  =  (reg_value                                   |
1665:../firmware/CMSIS/core/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1666:../firmware/CMSIS/core/core_cm4.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1667:../firmware/CMSIS/core/core_cm4.h ****   SCB->AIRCR =  reg_value;
1668:../firmware/CMSIS/core/core_cm4.h **** }
1669:../firmware/CMSIS/core/core_cm4.h **** 
1670:../firmware/CMSIS/core/core_cm4.h **** 
1671:../firmware/CMSIS/core/core_cm4.h **** /**
1672:../firmware/CMSIS/core/core_cm4.h ****   \brief   Get Priority Grouping
1673:../firmware/CMSIS/core/core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1674:../firmware/CMSIS/core/core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1675:../firmware/CMSIS/core/core_cm4.h ****  */
1676:../firmware/CMSIS/core/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1677:../firmware/CMSIS/core/core_cm4.h **** {
1678:../firmware/CMSIS/core/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1679:../firmware/CMSIS/core/core_cm4.h **** }
1680:../firmware/CMSIS/core/core_cm4.h **** 
1681:../firmware/CMSIS/core/core_cm4.h **** 
1682:../firmware/CMSIS/core/core_cm4.h **** /**
1683:../firmware/CMSIS/core/core_cm4.h ****   \brief   Enable Interrupt
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 31


1684:../firmware/CMSIS/core/core_cm4.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1685:../firmware/CMSIS/core/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1686:../firmware/CMSIS/core/core_cm4.h ****   \note    IRQn must not be negative.
1687:../firmware/CMSIS/core/core_cm4.h ****  */
1688:../firmware/CMSIS/core/core_cm4.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1689:../firmware/CMSIS/core/core_cm4.h **** {
1690:../firmware/CMSIS/core/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1691:../firmware/CMSIS/core/core_cm4.h ****   {
1692:../firmware/CMSIS/core/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1693:../firmware/CMSIS/core/core_cm4.h ****   }
1694:../firmware/CMSIS/core/core_cm4.h **** }
1695:../firmware/CMSIS/core/core_cm4.h **** 
1696:../firmware/CMSIS/core/core_cm4.h **** 
1697:../firmware/CMSIS/core/core_cm4.h **** /**
1698:../firmware/CMSIS/core/core_cm4.h ****   \brief   Get Interrupt Enable status
1699:../firmware/CMSIS/core/core_cm4.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1700:../firmware/CMSIS/core/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1701:../firmware/CMSIS/core/core_cm4.h ****   \return             0  Interrupt is not enabled.
1702:../firmware/CMSIS/core/core_cm4.h ****   \return             1  Interrupt is enabled.
1703:../firmware/CMSIS/core/core_cm4.h ****   \note    IRQn must not be negative.
1704:../firmware/CMSIS/core/core_cm4.h ****  */
1705:../firmware/CMSIS/core/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1706:../firmware/CMSIS/core/core_cm4.h **** {
1707:../firmware/CMSIS/core/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1708:../firmware/CMSIS/core/core_cm4.h ****   {
1709:../firmware/CMSIS/core/core_cm4.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1710:../firmware/CMSIS/core/core_cm4.h ****   }
1711:../firmware/CMSIS/core/core_cm4.h ****   else
1712:../firmware/CMSIS/core/core_cm4.h ****   {
1713:../firmware/CMSIS/core/core_cm4.h ****     return(0U);
1714:../firmware/CMSIS/core/core_cm4.h ****   }
1715:../firmware/CMSIS/core/core_cm4.h **** }
1716:../firmware/CMSIS/core/core_cm4.h **** 
1717:../firmware/CMSIS/core/core_cm4.h **** 
1718:../firmware/CMSIS/core/core_cm4.h **** /**
1719:../firmware/CMSIS/core/core_cm4.h ****   \brief   Disable Interrupt
1720:../firmware/CMSIS/core/core_cm4.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1721:../firmware/CMSIS/core/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1722:../firmware/CMSIS/core/core_cm4.h ****   \note    IRQn must not be negative.
1723:../firmware/CMSIS/core/core_cm4.h ****  */
1724:../firmware/CMSIS/core/core_cm4.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1725:../firmware/CMSIS/core/core_cm4.h **** {
1726:../firmware/CMSIS/core/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1727:../firmware/CMSIS/core/core_cm4.h ****   {
1728:../firmware/CMSIS/core/core_cm4.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1729:../firmware/CMSIS/core/core_cm4.h ****     __DSB();
1730:../firmware/CMSIS/core/core_cm4.h ****     __ISB();
1731:../firmware/CMSIS/core/core_cm4.h ****   }
1732:../firmware/CMSIS/core/core_cm4.h **** }
1733:../firmware/CMSIS/core/core_cm4.h **** 
1734:../firmware/CMSIS/core/core_cm4.h **** 
1735:../firmware/CMSIS/core/core_cm4.h **** /**
1736:../firmware/CMSIS/core/core_cm4.h ****   \brief   Get Pending Interrupt
1737:../firmware/CMSIS/core/core_cm4.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1738:../firmware/CMSIS/core/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1739:../firmware/CMSIS/core/core_cm4.h ****   \return             0  Interrupt status is not pending.
1740:../firmware/CMSIS/core/core_cm4.h ****   \return             1  Interrupt status is pending.
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 32


1741:../firmware/CMSIS/core/core_cm4.h ****   \note    IRQn must not be negative.
1742:../firmware/CMSIS/core/core_cm4.h ****  */
1743:../firmware/CMSIS/core/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1744:../firmware/CMSIS/core/core_cm4.h **** {
1745:../firmware/CMSIS/core/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1746:../firmware/CMSIS/core/core_cm4.h ****   {
1747:../firmware/CMSIS/core/core_cm4.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1748:../firmware/CMSIS/core/core_cm4.h ****   }
1749:../firmware/CMSIS/core/core_cm4.h ****   else
1750:../firmware/CMSIS/core/core_cm4.h ****   {
1751:../firmware/CMSIS/core/core_cm4.h ****     return(0U);
1752:../firmware/CMSIS/core/core_cm4.h ****   }
1753:../firmware/CMSIS/core/core_cm4.h **** }
1754:../firmware/CMSIS/core/core_cm4.h **** 
1755:../firmware/CMSIS/core/core_cm4.h **** 
1756:../firmware/CMSIS/core/core_cm4.h **** /**
1757:../firmware/CMSIS/core/core_cm4.h ****   \brief   Set Pending Interrupt
1758:../firmware/CMSIS/core/core_cm4.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1759:../firmware/CMSIS/core/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1760:../firmware/CMSIS/core/core_cm4.h ****   \note    IRQn must not be negative.
1761:../firmware/CMSIS/core/core_cm4.h ****  */
1762:../firmware/CMSIS/core/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1763:../firmware/CMSIS/core/core_cm4.h **** {
1764:../firmware/CMSIS/core/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1765:../firmware/CMSIS/core/core_cm4.h ****   {
1766:../firmware/CMSIS/core/core_cm4.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1767:../firmware/CMSIS/core/core_cm4.h ****   }
1768:../firmware/CMSIS/core/core_cm4.h **** }
1769:../firmware/CMSIS/core/core_cm4.h **** 
1770:../firmware/CMSIS/core/core_cm4.h **** 
1771:../firmware/CMSIS/core/core_cm4.h **** /**
1772:../firmware/CMSIS/core/core_cm4.h ****   \brief   Clear Pending Interrupt
1773:../firmware/CMSIS/core/core_cm4.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1774:../firmware/CMSIS/core/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1775:../firmware/CMSIS/core/core_cm4.h ****   \note    IRQn must not be negative.
1776:../firmware/CMSIS/core/core_cm4.h ****  */
1777:../firmware/CMSIS/core/core_cm4.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1778:../firmware/CMSIS/core/core_cm4.h **** {
1779:../firmware/CMSIS/core/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1780:../firmware/CMSIS/core/core_cm4.h ****   {
1781:../firmware/CMSIS/core/core_cm4.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1782:../firmware/CMSIS/core/core_cm4.h ****   }
1783:../firmware/CMSIS/core/core_cm4.h **** }
1784:../firmware/CMSIS/core/core_cm4.h **** 
1785:../firmware/CMSIS/core/core_cm4.h **** 
1786:../firmware/CMSIS/core/core_cm4.h **** /**
1787:../firmware/CMSIS/core/core_cm4.h ****   \brief   Get Active Interrupt
1788:../firmware/CMSIS/core/core_cm4.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1789:../firmware/CMSIS/core/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1790:../firmware/CMSIS/core/core_cm4.h ****   \return             0  Interrupt status is not active.
1791:../firmware/CMSIS/core/core_cm4.h ****   \return             1  Interrupt status is active.
1792:../firmware/CMSIS/core/core_cm4.h ****   \note    IRQn must not be negative.
1793:../firmware/CMSIS/core/core_cm4.h ****  */
1794:../firmware/CMSIS/core/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
1795:../firmware/CMSIS/core/core_cm4.h **** {
1796:../firmware/CMSIS/core/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1797:../firmware/CMSIS/core/core_cm4.h ****   {
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 33


1798:../firmware/CMSIS/core/core_cm4.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1799:../firmware/CMSIS/core/core_cm4.h ****   }
1800:../firmware/CMSIS/core/core_cm4.h ****   else
1801:../firmware/CMSIS/core/core_cm4.h ****   {
1802:../firmware/CMSIS/core/core_cm4.h ****     return(0U);
1803:../firmware/CMSIS/core/core_cm4.h ****   }
1804:../firmware/CMSIS/core/core_cm4.h **** }
1805:../firmware/CMSIS/core/core_cm4.h **** 
1806:../firmware/CMSIS/core/core_cm4.h **** 
1807:../firmware/CMSIS/core/core_cm4.h **** /**
1808:../firmware/CMSIS/core/core_cm4.h ****   \brief   Set Interrupt Priority
1809:../firmware/CMSIS/core/core_cm4.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
1810:../firmware/CMSIS/core/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1811:../firmware/CMSIS/core/core_cm4.h ****            or negative to specify a processor exception.
1812:../firmware/CMSIS/core/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1813:../firmware/CMSIS/core/core_cm4.h ****   \param [in]  priority  Priority to set.
1814:../firmware/CMSIS/core/core_cm4.h ****   \note    The priority cannot be set for every processor exception.
1815:../firmware/CMSIS/core/core_cm4.h ****  */
1816:../firmware/CMSIS/core/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1817:../firmware/CMSIS/core/core_cm4.h **** {
  29              		.loc 2 1817 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 80B4     		push	{r7}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 7, -4
  38 0002 83B0     		sub	sp, sp, #12
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 16
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 0346     		mov	r3, r0
  45 0008 3960     		str	r1, [r7]
  46 000a FB71     		strb	r3, [r7, #7]
1818:../firmware/CMSIS/core/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
  47              		.loc 2 1818 6
  48 000c 97F90730 		ldrsb	r3, [r7, #7]
  49 0010 002B     		cmp	r3, #0
  50 0012 0ADB     		blt	.L2
1819:../firmware/CMSIS/core/core_cm4.h ****   {
1820:../firmware/CMSIS/core/core_cm4.h ****     NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
  51              		.loc 2 1820 48
  52 0014 3B68     		ldr	r3, [r7]
  53 0016 DAB2     		uxtb	r2, r3
  54              		.loc 2 1820 9
  55 0018 0C49     		ldr	r1, .L5
  56              		.loc 2 1820 15
  57 001a 97F90730 		ldrsb	r3, [r7, #7]
  58              		.loc 2 1820 48
  59 001e 1201     		lsls	r2, r2, #4
  60 0020 D2B2     		uxtb	r2, r2
  61              		.loc 2 1820 46
  62 0022 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 34


  63 0024 83F80023 		strb	r2, [r3, #768]
1821:../firmware/CMSIS/core/core_cm4.h ****   }
1822:../firmware/CMSIS/core/core_cm4.h ****   else
1823:../firmware/CMSIS/core/core_cm4.h ****   {
1824:../firmware/CMSIS/core/core_cm4.h ****     SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1825:../firmware/CMSIS/core/core_cm4.h ****   }
1826:../firmware/CMSIS/core/core_cm4.h **** }
  64              		.loc 2 1826 1
  65 0028 0AE0     		b	.L4
  66              	.L2:
1824:../firmware/CMSIS/core/core_cm4.h ****   }
  67              		.loc 2 1824 48
  68 002a 3B68     		ldr	r3, [r7]
  69 002c DAB2     		uxtb	r2, r3
1824:../firmware/CMSIS/core/core_cm4.h ****   }
  70              		.loc 2 1824 8
  71 002e 0849     		ldr	r1, .L5+4
1824:../firmware/CMSIS/core/core_cm4.h ****   }
  72              		.loc 2 1824 32
  73 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  74 0032 03F00F03 		and	r3, r3, #15
1824:../firmware/CMSIS/core/core_cm4.h ****   }
  75              		.loc 2 1824 40
  76 0036 043B     		subs	r3, r3, #4
1824:../firmware/CMSIS/core/core_cm4.h ****   }
  77              		.loc 2 1824 48
  78 0038 1201     		lsls	r2, r2, #4
  79 003a D2B2     		uxtb	r2, r2
1824:../firmware/CMSIS/core/core_cm4.h ****   }
  80              		.loc 2 1824 46
  81 003c 0B44     		add	r3, r3, r1
  82 003e 1A76     		strb	r2, [r3, #24]
  83              	.L4:
  84              		.loc 2 1826 1
  85 0040 00BF     		nop
  86 0042 0C37     		adds	r7, r7, #12
  87              	.LCFI3:
  88              		.cfi_def_cfa_offset 4
  89 0044 BD46     		mov	sp, r7
  90              	.LCFI4:
  91              		.cfi_def_cfa_register 13
  92              		@ sp needed
  93 0046 5DF8047B 		ldr	r7, [sp], #4
  94              	.LCFI5:
  95              		.cfi_restore 7
  96              		.cfi_def_cfa_offset 0
  97 004a 7047     		bx	lr
  98              	.L6:
  99              		.align	2
 100              	.L5:
 101 004c 00E100E0 		.word	-536813312
 102 0050 00ED00E0 		.word	-536810240
 103              		.cfi_endproc
 104              	.LFE111:
 106              		.section	.text.__NVIC_SystemReset,"ax",%progbits
 107              		.align	1
 108              		.syntax unified
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 35


 109              		.thumb
 110              		.thumb_func
 112              	__NVIC_SystemReset:
 113              	.LFB117:
1827:../firmware/CMSIS/core/core_cm4.h **** 
1828:../firmware/CMSIS/core/core_cm4.h **** 
1829:../firmware/CMSIS/core/core_cm4.h **** /**
1830:../firmware/CMSIS/core/core_cm4.h ****   \brief   Get Interrupt Priority
1831:../firmware/CMSIS/core/core_cm4.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
1832:../firmware/CMSIS/core/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1833:../firmware/CMSIS/core/core_cm4.h ****            or negative to specify a processor exception.
1834:../firmware/CMSIS/core/core_cm4.h ****   \param [in]   IRQn  Interrupt number.
1835:../firmware/CMSIS/core/core_cm4.h ****   \return             Interrupt Priority.
1836:../firmware/CMSIS/core/core_cm4.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1837:../firmware/CMSIS/core/core_cm4.h ****  */
1838:../firmware/CMSIS/core/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
1839:../firmware/CMSIS/core/core_cm4.h **** {
1840:../firmware/CMSIS/core/core_cm4.h **** 
1841:../firmware/CMSIS/core/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1842:../firmware/CMSIS/core/core_cm4.h ****   {
1843:../firmware/CMSIS/core/core_cm4.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS)));
1844:../firmware/CMSIS/core/core_cm4.h ****   }
1845:../firmware/CMSIS/core/core_cm4.h ****   else
1846:../firmware/CMSIS/core/core_cm4.h ****   {
1847:../firmware/CMSIS/core/core_cm4.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
1848:../firmware/CMSIS/core/core_cm4.h ****   }
1849:../firmware/CMSIS/core/core_cm4.h **** }
1850:../firmware/CMSIS/core/core_cm4.h **** 
1851:../firmware/CMSIS/core/core_cm4.h **** 
1852:../firmware/CMSIS/core/core_cm4.h **** /**
1853:../firmware/CMSIS/core/core_cm4.h ****   \brief   Encode Priority
1854:../firmware/CMSIS/core/core_cm4.h ****   \details Encodes the priority for an interrupt with the given priority group,
1855:../firmware/CMSIS/core/core_cm4.h ****            preemptive priority value, and subpriority value.
1856:../firmware/CMSIS/core/core_cm4.h ****            In case of a conflict between priority grouping and available
1857:../firmware/CMSIS/core/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1858:../firmware/CMSIS/core/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1859:../firmware/CMSIS/core/core_cm4.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1860:../firmware/CMSIS/core/core_cm4.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1861:../firmware/CMSIS/core/core_cm4.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1862:../firmware/CMSIS/core/core_cm4.h ****  */
1863:../firmware/CMSIS/core/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1864:../firmware/CMSIS/core/core_cm4.h **** {
1865:../firmware/CMSIS/core/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1866:../firmware/CMSIS/core/core_cm4.h ****   uint32_t PreemptPriorityBits;
1867:../firmware/CMSIS/core/core_cm4.h ****   uint32_t SubPriorityBits;
1868:../firmware/CMSIS/core/core_cm4.h **** 
1869:../firmware/CMSIS/core/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1870:../firmware/CMSIS/core/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1871:../firmware/CMSIS/core/core_cm4.h **** 
1872:../firmware/CMSIS/core/core_cm4.h ****   return (
1873:../firmware/CMSIS/core/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
1874:../firmware/CMSIS/core/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
1875:../firmware/CMSIS/core/core_cm4.h ****          );
1876:../firmware/CMSIS/core/core_cm4.h **** }
1877:../firmware/CMSIS/core/core_cm4.h **** 
1878:../firmware/CMSIS/core/core_cm4.h **** 
1879:../firmware/CMSIS/core/core_cm4.h **** /**
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 36


1880:../firmware/CMSIS/core/core_cm4.h ****   \brief   Decode Priority
1881:../firmware/CMSIS/core/core_cm4.h ****   \details Decodes an interrupt priority value with a given priority group to
1882:../firmware/CMSIS/core/core_cm4.h ****            preemptive priority value and subpriority value.
1883:../firmware/CMSIS/core/core_cm4.h ****            In case of a conflict between priority grouping and available
1884:../firmware/CMSIS/core/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1885:../firmware/CMSIS/core/core_cm4.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
1886:../firmware/CMSIS/core/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1887:../firmware/CMSIS/core/core_cm4.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1888:../firmware/CMSIS/core/core_cm4.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
1889:../firmware/CMSIS/core/core_cm4.h ****  */
1890:../firmware/CMSIS/core/core_cm4.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
1891:../firmware/CMSIS/core/core_cm4.h **** {
1892:../firmware/CMSIS/core/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1893:../firmware/CMSIS/core/core_cm4.h ****   uint32_t PreemptPriorityBits;
1894:../firmware/CMSIS/core/core_cm4.h ****   uint32_t SubPriorityBits;
1895:../firmware/CMSIS/core/core_cm4.h **** 
1896:../firmware/CMSIS/core/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1897:../firmware/CMSIS/core/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1898:../firmware/CMSIS/core/core_cm4.h **** 
1899:../firmware/CMSIS/core/core_cm4.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
1900:../firmware/CMSIS/core/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
1901:../firmware/CMSIS/core/core_cm4.h **** }
1902:../firmware/CMSIS/core/core_cm4.h **** 
1903:../firmware/CMSIS/core/core_cm4.h **** 
1904:../firmware/CMSIS/core/core_cm4.h **** /**
1905:../firmware/CMSIS/core/core_cm4.h ****   \brief   Set Interrupt Vector
1906:../firmware/CMSIS/core/core_cm4.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
1907:../firmware/CMSIS/core/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1908:../firmware/CMSIS/core/core_cm4.h ****            or negative to specify a processor exception.
1909:../firmware/CMSIS/core/core_cm4.h ****            VTOR must been relocated to SRAM before.
1910:../firmware/CMSIS/core/core_cm4.h ****   \param [in]   IRQn      Interrupt number
1911:../firmware/CMSIS/core/core_cm4.h ****   \param [in]   vector    Address of interrupt handler function
1912:../firmware/CMSIS/core/core_cm4.h ****  */
1913:../firmware/CMSIS/core/core_cm4.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
1914:../firmware/CMSIS/core/core_cm4.h **** {
1915:../firmware/CMSIS/core/core_cm4.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
1916:../firmware/CMSIS/core/core_cm4.h ****   vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET] = vector;
1917:../firmware/CMSIS/core/core_cm4.h **** }
1918:../firmware/CMSIS/core/core_cm4.h **** 
1919:../firmware/CMSIS/core/core_cm4.h **** 
1920:../firmware/CMSIS/core/core_cm4.h **** /**
1921:../firmware/CMSIS/core/core_cm4.h ****   \brief   Get Interrupt Vector
1922:../firmware/CMSIS/core/core_cm4.h ****   \details Reads an interrupt vector from interrupt vector table.
1923:../firmware/CMSIS/core/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1924:../firmware/CMSIS/core/core_cm4.h ****            or negative to specify a processor exception.
1925:../firmware/CMSIS/core/core_cm4.h ****   \param [in]   IRQn      Interrupt number.
1926:../firmware/CMSIS/core/core_cm4.h ****   \return                 Address of interrupt handler function
1927:../firmware/CMSIS/core/core_cm4.h ****  */
1928:../firmware/CMSIS/core/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
1929:../firmware/CMSIS/core/core_cm4.h **** {
1930:../firmware/CMSIS/core/core_cm4.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
1931:../firmware/CMSIS/core/core_cm4.h ****   return vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET];
1932:../firmware/CMSIS/core/core_cm4.h **** }
1933:../firmware/CMSIS/core/core_cm4.h **** 
1934:../firmware/CMSIS/core/core_cm4.h **** 
1935:../firmware/CMSIS/core/core_cm4.h **** /**
1936:../firmware/CMSIS/core/core_cm4.h ****   \brief   System Reset
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 37


1937:../firmware/CMSIS/core/core_cm4.h ****   \details Initiates a system reset request to reset the MCU.
1938:../firmware/CMSIS/core/core_cm4.h ****  */
1939:../firmware/CMSIS/core/core_cm4.h **** __NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
1940:../firmware/CMSIS/core/core_cm4.h **** {
 114              		.loc 2 1940 1
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 1, uses_anonymous_args = 0
 118              		@ link register save eliminated.
 119 0000 80B4     		push	{r7}
 120              	.LCFI6:
 121              		.cfi_def_cfa_offset 4
 122              		.cfi_offset 7, -4
 123 0002 00AF     		add	r7, sp, #0
 124              	.LCFI7:
 125              		.cfi_def_cfa_register 7
 126              	.LBB10:
 127              	.LBB11:
 128              		.file 3 "../firmware/CMSIS/core/cmsis_gcc.h"
   1:../firmware/CMSIS/core/cmsis_gcc.h **** /**************************************************************************//**
   2:../firmware/CMSIS/core/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:../firmware/CMSIS/core/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:../firmware/CMSIS/core/cmsis_gcc.h ****  * @version  V5.0.4
   5:../firmware/CMSIS/core/cmsis_gcc.h ****  * @date     09. April 2018
   6:../firmware/CMSIS/core/cmsis_gcc.h ****  ******************************************************************************/
   7:../firmware/CMSIS/core/cmsis_gcc.h **** /*
   8:../firmware/CMSIS/core/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:../firmware/CMSIS/core/cmsis_gcc.h ****  *
  10:../firmware/CMSIS/core/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:../firmware/CMSIS/core/cmsis_gcc.h ****  *
  12:../firmware/CMSIS/core/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:../firmware/CMSIS/core/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:../firmware/CMSIS/core/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:../firmware/CMSIS/core/cmsis_gcc.h ****  *
  16:../firmware/CMSIS/core/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:../firmware/CMSIS/core/cmsis_gcc.h ****  *
  18:../firmware/CMSIS/core/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:../firmware/CMSIS/core/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:../firmware/CMSIS/core/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:../firmware/CMSIS/core/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:../firmware/CMSIS/core/cmsis_gcc.h ****  * limitations under the License.
  23:../firmware/CMSIS/core/cmsis_gcc.h ****  */
  24:../firmware/CMSIS/core/cmsis_gcc.h **** 
  25:../firmware/CMSIS/core/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:../firmware/CMSIS/core/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:../firmware/CMSIS/core/cmsis_gcc.h **** 
  28:../firmware/CMSIS/core/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:../firmware/CMSIS/core/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:../firmware/CMSIS/core/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:../firmware/CMSIS/core/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:../firmware/CMSIS/core/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:../firmware/CMSIS/core/cmsis_gcc.h **** 
  34:../firmware/CMSIS/core/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:../firmware/CMSIS/core/cmsis_gcc.h **** #ifndef __has_builtin
  36:../firmware/CMSIS/core/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
  38:../firmware/CMSIS/core/cmsis_gcc.h **** 
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 38


  39:../firmware/CMSIS/core/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:../firmware/CMSIS/core/cmsis_gcc.h **** #ifndef   __ASM
  41:../firmware/CMSIS/core/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
  43:../firmware/CMSIS/core/cmsis_gcc.h **** #ifndef   __INLINE
  44:../firmware/CMSIS/core/cmsis_gcc.h ****   #define __INLINE                               inline
  45:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
  46:../firmware/CMSIS/core/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:../firmware/CMSIS/core/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
  49:../firmware/CMSIS/core/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:../firmware/CMSIS/core/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:../firmware/CMSIS/core/cmsis_gcc.h **** #endif                                           
  52:../firmware/CMSIS/core/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:../firmware/CMSIS/core/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
  55:../firmware/CMSIS/core/cmsis_gcc.h **** #ifndef   __USED
  56:../firmware/CMSIS/core/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
  58:../firmware/CMSIS/core/cmsis_gcc.h **** #ifndef   __WEAK
  59:../firmware/CMSIS/core/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
  61:../firmware/CMSIS/core/cmsis_gcc.h **** #ifndef   __PACKED
  62:../firmware/CMSIS/core/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
  64:../firmware/CMSIS/core/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:../firmware/CMSIS/core/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
  67:../firmware/CMSIS/core/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:../firmware/CMSIS/core/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
  70:../firmware/CMSIS/core/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:../firmware/CMSIS/core/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:../firmware/CMSIS/core/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:../firmware/CMSIS/core/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:../firmware/CMSIS/core/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:../firmware/CMSIS/core/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:../firmware/CMSIS/core/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
  78:../firmware/CMSIS/core/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:../firmware/CMSIS/core/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:../firmware/CMSIS/core/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:../firmware/CMSIS/core/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:../firmware/CMSIS/core/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:../firmware/CMSIS/core/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:../firmware/CMSIS/core/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
  86:../firmware/CMSIS/core/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:../firmware/CMSIS/core/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:../firmware/CMSIS/core/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:../firmware/CMSIS/core/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:../firmware/CMSIS/core/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:../firmware/CMSIS/core/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:../firmware/CMSIS/core/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
  94:../firmware/CMSIS/core/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:../firmware/CMSIS/core/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 39


  96:../firmware/CMSIS/core/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:../firmware/CMSIS/core/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:../firmware/CMSIS/core/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:../firmware/CMSIS/core/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:../firmware/CMSIS/core/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
 102:../firmware/CMSIS/core/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:../firmware/CMSIS/core/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:../firmware/CMSIS/core/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:../firmware/CMSIS/core/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:../firmware/CMSIS/core/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:../firmware/CMSIS/core/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:../firmware/CMSIS/core/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
 110:../firmware/CMSIS/core/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:../firmware/CMSIS/core/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
 113:../firmware/CMSIS/core/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:../firmware/CMSIS/core/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
 116:../firmware/CMSIS/core/cmsis_gcc.h **** 
 117:../firmware/CMSIS/core/cmsis_gcc.h **** 
 118:../firmware/CMSIS/core/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:../firmware/CMSIS/core/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:../firmware/CMSIS/core/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:../firmware/CMSIS/core/cmsis_gcc.h ****   @{
 122:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 123:../firmware/CMSIS/core/cmsis_gcc.h **** 
 124:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 125:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:../firmware/CMSIS/core/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 129:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:../firmware/CMSIS/core/cmsis_gcc.h **** {
 131:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:../firmware/CMSIS/core/cmsis_gcc.h **** }
 133:../firmware/CMSIS/core/cmsis_gcc.h **** 
 134:../firmware/CMSIS/core/cmsis_gcc.h **** 
 135:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 136:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:../firmware/CMSIS/core/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 140:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:../firmware/CMSIS/core/cmsis_gcc.h **** {
 142:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:../firmware/CMSIS/core/cmsis_gcc.h **** }
 144:../firmware/CMSIS/core/cmsis_gcc.h **** 
 145:../firmware/CMSIS/core/cmsis_gcc.h **** 
 146:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 147:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Get Control Register
 148:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:../firmware/CMSIS/core/cmsis_gcc.h ****   \return               Control Register value
 150:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 151:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:../firmware/CMSIS/core/cmsis_gcc.h **** {
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 40


 153:../firmware/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 154:../firmware/CMSIS/core/cmsis_gcc.h **** 
 155:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:../firmware/CMSIS/core/cmsis_gcc.h ****   return(result);
 157:../firmware/CMSIS/core/cmsis_gcc.h **** }
 158:../firmware/CMSIS/core/cmsis_gcc.h **** 
 159:../firmware/CMSIS/core/cmsis_gcc.h **** 
 160:../firmware/CMSIS/core/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 162:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:../firmware/CMSIS/core/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 166:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:../firmware/CMSIS/core/cmsis_gcc.h **** {
 168:../firmware/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 169:../firmware/CMSIS/core/cmsis_gcc.h **** 
 170:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:../firmware/CMSIS/core/cmsis_gcc.h ****   return(result);
 172:../firmware/CMSIS/core/cmsis_gcc.h **** }
 173:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
 174:../firmware/CMSIS/core/cmsis_gcc.h **** 
 175:../firmware/CMSIS/core/cmsis_gcc.h **** 
 176:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 177:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Set Control Register
 178:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:../firmware/CMSIS/core/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 181:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:../firmware/CMSIS/core/cmsis_gcc.h **** {
 183:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:../firmware/CMSIS/core/cmsis_gcc.h **** }
 185:../firmware/CMSIS/core/cmsis_gcc.h **** 
 186:../firmware/CMSIS/core/cmsis_gcc.h **** 
 187:../firmware/CMSIS/core/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 189:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:../firmware/CMSIS/core/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 193:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:../firmware/CMSIS/core/cmsis_gcc.h **** {
 195:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:../firmware/CMSIS/core/cmsis_gcc.h **** }
 197:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
 198:../firmware/CMSIS/core/cmsis_gcc.h **** 
 199:../firmware/CMSIS/core/cmsis_gcc.h **** 
 200:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 201:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:../firmware/CMSIS/core/cmsis_gcc.h ****   \return               IPSR Register value
 204:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 205:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:../firmware/CMSIS/core/cmsis_gcc.h **** {
 207:../firmware/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 208:../firmware/CMSIS/core/cmsis_gcc.h **** 
 209:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 41


 210:../firmware/CMSIS/core/cmsis_gcc.h ****   return(result);
 211:../firmware/CMSIS/core/cmsis_gcc.h **** }
 212:../firmware/CMSIS/core/cmsis_gcc.h **** 
 213:../firmware/CMSIS/core/cmsis_gcc.h **** 
 214:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 215:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Get APSR Register
 216:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:../firmware/CMSIS/core/cmsis_gcc.h ****   \return               APSR Register value
 218:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 219:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:../firmware/CMSIS/core/cmsis_gcc.h **** {
 221:../firmware/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 222:../firmware/CMSIS/core/cmsis_gcc.h **** 
 223:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:../firmware/CMSIS/core/cmsis_gcc.h ****   return(result);
 225:../firmware/CMSIS/core/cmsis_gcc.h **** }
 226:../firmware/CMSIS/core/cmsis_gcc.h **** 
 227:../firmware/CMSIS/core/cmsis_gcc.h **** 
 228:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 229:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:../firmware/CMSIS/core/cmsis_gcc.h ****   \return               xPSR Register value
 232:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 233:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:../firmware/CMSIS/core/cmsis_gcc.h **** {
 235:../firmware/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 236:../firmware/CMSIS/core/cmsis_gcc.h **** 
 237:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:../firmware/CMSIS/core/cmsis_gcc.h ****   return(result);
 239:../firmware/CMSIS/core/cmsis_gcc.h **** }
 240:../firmware/CMSIS/core/cmsis_gcc.h **** 
 241:../firmware/CMSIS/core/cmsis_gcc.h **** 
 242:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 243:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:../firmware/CMSIS/core/cmsis_gcc.h ****   \return               PSP Register value
 246:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 247:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:../firmware/CMSIS/core/cmsis_gcc.h **** {
 249:../firmware/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 250:../firmware/CMSIS/core/cmsis_gcc.h **** 
 251:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:../firmware/CMSIS/core/cmsis_gcc.h ****   return(result);
 253:../firmware/CMSIS/core/cmsis_gcc.h **** }
 254:../firmware/CMSIS/core/cmsis_gcc.h **** 
 255:../firmware/CMSIS/core/cmsis_gcc.h **** 
 256:../firmware/CMSIS/core/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 258:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:../firmware/CMSIS/core/cmsis_gcc.h ****   \return               PSP Register value
 261:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 262:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:../firmware/CMSIS/core/cmsis_gcc.h **** {
 264:../firmware/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 265:../firmware/CMSIS/core/cmsis_gcc.h **** 
 266:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 42


 267:../firmware/CMSIS/core/cmsis_gcc.h ****   return(result);
 268:../firmware/CMSIS/core/cmsis_gcc.h **** }
 269:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
 270:../firmware/CMSIS/core/cmsis_gcc.h **** 
 271:../firmware/CMSIS/core/cmsis_gcc.h **** 
 272:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 273:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:../firmware/CMSIS/core/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 277:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:../firmware/CMSIS/core/cmsis_gcc.h **** {
 279:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:../firmware/CMSIS/core/cmsis_gcc.h **** }
 281:../firmware/CMSIS/core/cmsis_gcc.h **** 
 282:../firmware/CMSIS/core/cmsis_gcc.h **** 
 283:../firmware/CMSIS/core/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 285:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:../firmware/CMSIS/core/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 289:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:../firmware/CMSIS/core/cmsis_gcc.h **** {
 291:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:../firmware/CMSIS/core/cmsis_gcc.h **** }
 293:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
 294:../firmware/CMSIS/core/cmsis_gcc.h **** 
 295:../firmware/CMSIS/core/cmsis_gcc.h **** 
 296:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 297:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:../firmware/CMSIS/core/cmsis_gcc.h ****   \return               MSP Register value
 300:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 301:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:../firmware/CMSIS/core/cmsis_gcc.h **** {
 303:../firmware/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 304:../firmware/CMSIS/core/cmsis_gcc.h **** 
 305:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:../firmware/CMSIS/core/cmsis_gcc.h ****   return(result);
 307:../firmware/CMSIS/core/cmsis_gcc.h **** }
 308:../firmware/CMSIS/core/cmsis_gcc.h **** 
 309:../firmware/CMSIS/core/cmsis_gcc.h **** 
 310:../firmware/CMSIS/core/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 312:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:../firmware/CMSIS/core/cmsis_gcc.h ****   \return               MSP Register value
 315:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 316:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:../firmware/CMSIS/core/cmsis_gcc.h **** {
 318:../firmware/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 319:../firmware/CMSIS/core/cmsis_gcc.h **** 
 320:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:../firmware/CMSIS/core/cmsis_gcc.h ****   return(result);
 322:../firmware/CMSIS/core/cmsis_gcc.h **** }
 323:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 43


 324:../firmware/CMSIS/core/cmsis_gcc.h **** 
 325:../firmware/CMSIS/core/cmsis_gcc.h **** 
 326:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 327:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:../firmware/CMSIS/core/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 331:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:../firmware/CMSIS/core/cmsis_gcc.h **** {
 333:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:../firmware/CMSIS/core/cmsis_gcc.h **** }
 335:../firmware/CMSIS/core/cmsis_gcc.h **** 
 336:../firmware/CMSIS/core/cmsis_gcc.h **** 
 337:../firmware/CMSIS/core/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 339:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:../firmware/CMSIS/core/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 343:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:../firmware/CMSIS/core/cmsis_gcc.h **** {
 345:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:../firmware/CMSIS/core/cmsis_gcc.h **** }
 347:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
 348:../firmware/CMSIS/core/cmsis_gcc.h **** 
 349:../firmware/CMSIS/core/cmsis_gcc.h **** 
 350:../firmware/CMSIS/core/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 352:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:../firmware/CMSIS/core/cmsis_gcc.h ****   \return               SP Register value
 355:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 356:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:../firmware/CMSIS/core/cmsis_gcc.h **** {
 358:../firmware/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 359:../firmware/CMSIS/core/cmsis_gcc.h **** 
 360:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:../firmware/CMSIS/core/cmsis_gcc.h ****   return(result);
 362:../firmware/CMSIS/core/cmsis_gcc.h **** }
 363:../firmware/CMSIS/core/cmsis_gcc.h **** 
 364:../firmware/CMSIS/core/cmsis_gcc.h **** 
 365:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 366:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:../firmware/CMSIS/core/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 370:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:../firmware/CMSIS/core/cmsis_gcc.h **** {
 372:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:../firmware/CMSIS/core/cmsis_gcc.h **** }
 374:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
 375:../firmware/CMSIS/core/cmsis_gcc.h **** 
 376:../firmware/CMSIS/core/cmsis_gcc.h **** 
 377:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 378:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:../firmware/CMSIS/core/cmsis_gcc.h ****   \return               Priority Mask value
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 44


 381:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 382:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:../firmware/CMSIS/core/cmsis_gcc.h **** {
 384:../firmware/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 385:../firmware/CMSIS/core/cmsis_gcc.h **** 
 386:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:../firmware/CMSIS/core/cmsis_gcc.h ****   return(result);
 388:../firmware/CMSIS/core/cmsis_gcc.h **** }
 389:../firmware/CMSIS/core/cmsis_gcc.h **** 
 390:../firmware/CMSIS/core/cmsis_gcc.h **** 
 391:../firmware/CMSIS/core/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 393:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:../firmware/CMSIS/core/cmsis_gcc.h ****   \return               Priority Mask value
 396:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 397:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:../firmware/CMSIS/core/cmsis_gcc.h **** {
 399:../firmware/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 400:../firmware/CMSIS/core/cmsis_gcc.h **** 
 401:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:../firmware/CMSIS/core/cmsis_gcc.h ****   return(result);
 403:../firmware/CMSIS/core/cmsis_gcc.h **** }
 404:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
 405:../firmware/CMSIS/core/cmsis_gcc.h **** 
 406:../firmware/CMSIS/core/cmsis_gcc.h **** 
 407:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 408:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:../firmware/CMSIS/core/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 412:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:../firmware/CMSIS/core/cmsis_gcc.h **** {
 414:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:../firmware/CMSIS/core/cmsis_gcc.h **** }
 416:../firmware/CMSIS/core/cmsis_gcc.h **** 
 417:../firmware/CMSIS/core/cmsis_gcc.h **** 
 418:../firmware/CMSIS/core/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 420:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:../firmware/CMSIS/core/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 424:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:../firmware/CMSIS/core/cmsis_gcc.h **** {
 426:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:../firmware/CMSIS/core/cmsis_gcc.h **** }
 428:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
 429:../firmware/CMSIS/core/cmsis_gcc.h **** 
 430:../firmware/CMSIS/core/cmsis_gcc.h **** 
 431:../firmware/CMSIS/core/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:../firmware/CMSIS/core/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:../firmware/CMSIS/core/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 435:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Enable FIQ
 436:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:../firmware/CMSIS/core/cmsis_gcc.h ****            Can only be executed in Privileged modes.
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 45


 438:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 439:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:../firmware/CMSIS/core/cmsis_gcc.h **** {
 441:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:../firmware/CMSIS/core/cmsis_gcc.h **** }
 443:../firmware/CMSIS/core/cmsis_gcc.h **** 
 444:../firmware/CMSIS/core/cmsis_gcc.h **** 
 445:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 446:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Disable FIQ
 447:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:../firmware/CMSIS/core/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 450:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:../firmware/CMSIS/core/cmsis_gcc.h **** {
 452:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:../firmware/CMSIS/core/cmsis_gcc.h **** }
 454:../firmware/CMSIS/core/cmsis_gcc.h **** 
 455:../firmware/CMSIS/core/cmsis_gcc.h **** 
 456:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 457:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Get Base Priority
 458:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:../firmware/CMSIS/core/cmsis_gcc.h ****   \return               Base Priority register value
 460:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 461:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:../firmware/CMSIS/core/cmsis_gcc.h **** {
 463:../firmware/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 464:../firmware/CMSIS/core/cmsis_gcc.h **** 
 465:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:../firmware/CMSIS/core/cmsis_gcc.h ****   return(result);
 467:../firmware/CMSIS/core/cmsis_gcc.h **** }
 468:../firmware/CMSIS/core/cmsis_gcc.h **** 
 469:../firmware/CMSIS/core/cmsis_gcc.h **** 
 470:../firmware/CMSIS/core/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 472:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:../firmware/CMSIS/core/cmsis_gcc.h ****   \return               Base Priority register value
 475:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 476:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:../firmware/CMSIS/core/cmsis_gcc.h **** {
 478:../firmware/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 479:../firmware/CMSIS/core/cmsis_gcc.h **** 
 480:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:../firmware/CMSIS/core/cmsis_gcc.h ****   return(result);
 482:../firmware/CMSIS/core/cmsis_gcc.h **** }
 483:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
 484:../firmware/CMSIS/core/cmsis_gcc.h **** 
 485:../firmware/CMSIS/core/cmsis_gcc.h **** 
 486:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 487:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Set Base Priority
 488:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:../firmware/CMSIS/core/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 491:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:../firmware/CMSIS/core/cmsis_gcc.h **** {
 493:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:../firmware/CMSIS/core/cmsis_gcc.h **** }
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 46


 495:../firmware/CMSIS/core/cmsis_gcc.h **** 
 496:../firmware/CMSIS/core/cmsis_gcc.h **** 
 497:../firmware/CMSIS/core/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 499:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:../firmware/CMSIS/core/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 503:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:../firmware/CMSIS/core/cmsis_gcc.h **** {
 505:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:../firmware/CMSIS/core/cmsis_gcc.h **** }
 507:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
 508:../firmware/CMSIS/core/cmsis_gcc.h **** 
 509:../firmware/CMSIS/core/cmsis_gcc.h **** 
 510:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 511:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:../firmware/CMSIS/core/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:../firmware/CMSIS/core/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 516:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:../firmware/CMSIS/core/cmsis_gcc.h **** {
 518:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:../firmware/CMSIS/core/cmsis_gcc.h **** }
 520:../firmware/CMSIS/core/cmsis_gcc.h **** 
 521:../firmware/CMSIS/core/cmsis_gcc.h **** 
 522:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 523:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:../firmware/CMSIS/core/cmsis_gcc.h ****   \return               Fault Mask register value
 526:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 527:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:../firmware/CMSIS/core/cmsis_gcc.h **** {
 529:../firmware/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 530:../firmware/CMSIS/core/cmsis_gcc.h **** 
 531:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:../firmware/CMSIS/core/cmsis_gcc.h ****   return(result);
 533:../firmware/CMSIS/core/cmsis_gcc.h **** }
 534:../firmware/CMSIS/core/cmsis_gcc.h **** 
 535:../firmware/CMSIS/core/cmsis_gcc.h **** 
 536:../firmware/CMSIS/core/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 538:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:../firmware/CMSIS/core/cmsis_gcc.h ****   \return               Fault Mask register value
 541:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 542:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:../firmware/CMSIS/core/cmsis_gcc.h **** {
 544:../firmware/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 545:../firmware/CMSIS/core/cmsis_gcc.h **** 
 546:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:../firmware/CMSIS/core/cmsis_gcc.h ****   return(result);
 548:../firmware/CMSIS/core/cmsis_gcc.h **** }
 549:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
 550:../firmware/CMSIS/core/cmsis_gcc.h **** 
 551:../firmware/CMSIS/core/cmsis_gcc.h **** 
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 47


 552:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 553:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:../firmware/CMSIS/core/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 557:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:../firmware/CMSIS/core/cmsis_gcc.h **** {
 559:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:../firmware/CMSIS/core/cmsis_gcc.h **** }
 561:../firmware/CMSIS/core/cmsis_gcc.h **** 
 562:../firmware/CMSIS/core/cmsis_gcc.h **** 
 563:../firmware/CMSIS/core/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 565:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:../firmware/CMSIS/core/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 569:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:../firmware/CMSIS/core/cmsis_gcc.h **** {
 571:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:../firmware/CMSIS/core/cmsis_gcc.h **** }
 573:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
 574:../firmware/CMSIS/core/cmsis_gcc.h **** 
 575:../firmware/CMSIS/core/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:../firmware/CMSIS/core/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:../firmware/CMSIS/core/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:../firmware/CMSIS/core/cmsis_gcc.h **** 
 579:../firmware/CMSIS/core/cmsis_gcc.h **** 
 580:../firmware/CMSIS/core/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:../firmware/CMSIS/core/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:../firmware/CMSIS/core/cmsis_gcc.h **** 
 583:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 584:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:../firmware/CMSIS/core/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:../firmware/CMSIS/core/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:../firmware/CMSIS/core/cmsis_gcc.h ****   mode.
 588:../firmware/CMSIS/core/cmsis_gcc.h ****   
 589:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:../firmware/CMSIS/core/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 592:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:../firmware/CMSIS/core/cmsis_gcc.h **** {
 594:../firmware/CMSIS/core/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:../firmware/CMSIS/core/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:../firmware/CMSIS/core/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:../firmware/CMSIS/core/cmsis_gcc.h ****   return 0U;
 598:../firmware/CMSIS/core/cmsis_gcc.h **** #else
 599:../firmware/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 600:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:../firmware/CMSIS/core/cmsis_gcc.h ****   return result;
 602:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
 603:../firmware/CMSIS/core/cmsis_gcc.h **** }
 604:../firmware/CMSIS/core/cmsis_gcc.h **** 
 605:../firmware/CMSIS/core/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 607:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:../firmware/CMSIS/core/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 48


 609:../firmware/CMSIS/core/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:../firmware/CMSIS/core/cmsis_gcc.h **** 
 611:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:../firmware/CMSIS/core/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 614:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:../firmware/CMSIS/core/cmsis_gcc.h **** {
 616:../firmware/CMSIS/core/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:../firmware/CMSIS/core/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:../firmware/CMSIS/core/cmsis_gcc.h ****   return 0U;
 619:../firmware/CMSIS/core/cmsis_gcc.h **** #else
 620:../firmware/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 621:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:../firmware/CMSIS/core/cmsis_gcc.h ****   return result;
 623:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
 624:../firmware/CMSIS/core/cmsis_gcc.h **** }
 625:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
 626:../firmware/CMSIS/core/cmsis_gcc.h **** 
 627:../firmware/CMSIS/core/cmsis_gcc.h **** 
 628:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 629:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:../firmware/CMSIS/core/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:../firmware/CMSIS/core/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:../firmware/CMSIS/core/cmsis_gcc.h ****   mode.
 633:../firmware/CMSIS/core/cmsis_gcc.h ****   
 634:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:../firmware/CMSIS/core/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 637:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:../firmware/CMSIS/core/cmsis_gcc.h **** {
 639:../firmware/CMSIS/core/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:../firmware/CMSIS/core/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:../firmware/CMSIS/core/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:../firmware/CMSIS/core/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:../firmware/CMSIS/core/cmsis_gcc.h **** #else
 644:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
 646:../firmware/CMSIS/core/cmsis_gcc.h **** }
 647:../firmware/CMSIS/core/cmsis_gcc.h **** 
 648:../firmware/CMSIS/core/cmsis_gcc.h **** 
 649:../firmware/CMSIS/core/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 651:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:../firmware/CMSIS/core/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:../firmware/CMSIS/core/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:../firmware/CMSIS/core/cmsis_gcc.h **** 
 655:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:../firmware/CMSIS/core/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 658:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:../firmware/CMSIS/core/cmsis_gcc.h **** {
 660:../firmware/CMSIS/core/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:../firmware/CMSIS/core/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:../firmware/CMSIS/core/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:../firmware/CMSIS/core/cmsis_gcc.h **** #else
 664:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 49


 666:../firmware/CMSIS/core/cmsis_gcc.h **** }
 667:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
 668:../firmware/CMSIS/core/cmsis_gcc.h **** 
 669:../firmware/CMSIS/core/cmsis_gcc.h **** 
 670:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 671:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:../firmware/CMSIS/core/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:../firmware/CMSIS/core/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:../firmware/CMSIS/core/cmsis_gcc.h ****   mode.
 675:../firmware/CMSIS/core/cmsis_gcc.h **** 
 676:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:../firmware/CMSIS/core/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 679:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:../firmware/CMSIS/core/cmsis_gcc.h **** {
 681:../firmware/CMSIS/core/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:../firmware/CMSIS/core/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:../firmware/CMSIS/core/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:../firmware/CMSIS/core/cmsis_gcc.h ****   return 0U;
 685:../firmware/CMSIS/core/cmsis_gcc.h **** #else
 686:../firmware/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 687:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:../firmware/CMSIS/core/cmsis_gcc.h ****   return result;
 689:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
 690:../firmware/CMSIS/core/cmsis_gcc.h **** }
 691:../firmware/CMSIS/core/cmsis_gcc.h **** 
 692:../firmware/CMSIS/core/cmsis_gcc.h **** 
 693:../firmware/CMSIS/core/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 695:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:../firmware/CMSIS/core/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:../firmware/CMSIS/core/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:../firmware/CMSIS/core/cmsis_gcc.h **** 
 699:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:../firmware/CMSIS/core/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 702:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:../firmware/CMSIS/core/cmsis_gcc.h **** {
 704:../firmware/CMSIS/core/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:../firmware/CMSIS/core/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:../firmware/CMSIS/core/cmsis_gcc.h ****   return 0U;
 707:../firmware/CMSIS/core/cmsis_gcc.h **** #else
 708:../firmware/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 709:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:../firmware/CMSIS/core/cmsis_gcc.h ****   return result;
 711:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
 712:../firmware/CMSIS/core/cmsis_gcc.h **** }
 713:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
 714:../firmware/CMSIS/core/cmsis_gcc.h **** 
 715:../firmware/CMSIS/core/cmsis_gcc.h **** 
 716:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 717:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:../firmware/CMSIS/core/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:../firmware/CMSIS/core/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:../firmware/CMSIS/core/cmsis_gcc.h ****   mode.
 721:../firmware/CMSIS/core/cmsis_gcc.h **** 
 722:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 50


 723:../firmware/CMSIS/core/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 725:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:../firmware/CMSIS/core/cmsis_gcc.h **** {
 727:../firmware/CMSIS/core/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:../firmware/CMSIS/core/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:../firmware/CMSIS/core/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:../firmware/CMSIS/core/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:../firmware/CMSIS/core/cmsis_gcc.h **** #else
 732:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
 734:../firmware/CMSIS/core/cmsis_gcc.h **** }
 735:../firmware/CMSIS/core/cmsis_gcc.h **** 
 736:../firmware/CMSIS/core/cmsis_gcc.h **** 
 737:../firmware/CMSIS/core/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 739:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:../firmware/CMSIS/core/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:../firmware/CMSIS/core/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:../firmware/CMSIS/core/cmsis_gcc.h **** 
 743:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:../firmware/CMSIS/core/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 746:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:../firmware/CMSIS/core/cmsis_gcc.h **** {
 748:../firmware/CMSIS/core/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:../firmware/CMSIS/core/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:../firmware/CMSIS/core/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:../firmware/CMSIS/core/cmsis_gcc.h **** #else
 752:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
 754:../firmware/CMSIS/core/cmsis_gcc.h **** }
 755:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
 756:../firmware/CMSIS/core/cmsis_gcc.h **** 
 757:../firmware/CMSIS/core/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:../firmware/CMSIS/core/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:../firmware/CMSIS/core/cmsis_gcc.h **** 
 760:../firmware/CMSIS/core/cmsis_gcc.h **** 
 761:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 762:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Get FPSCR
 763:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:../firmware/CMSIS/core/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 766:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:../firmware/CMSIS/core/cmsis_gcc.h **** {
 768:../firmware/CMSIS/core/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:../firmware/CMSIS/core/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:../firmware/CMSIS/core/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:../firmware/CMSIS/core/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:../firmware/CMSIS/core/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:../firmware/CMSIS/core/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:../firmware/CMSIS/core/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:../firmware/CMSIS/core/cmsis_gcc.h **** #else
 776:../firmware/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 777:../firmware/CMSIS/core/cmsis_gcc.h **** 
 778:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:../firmware/CMSIS/core/cmsis_gcc.h ****   return(result);
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 51


 780:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
 781:../firmware/CMSIS/core/cmsis_gcc.h **** #else
 782:../firmware/CMSIS/core/cmsis_gcc.h ****   return(0U);
 783:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
 784:../firmware/CMSIS/core/cmsis_gcc.h **** }
 785:../firmware/CMSIS/core/cmsis_gcc.h **** 
 786:../firmware/CMSIS/core/cmsis_gcc.h **** 
 787:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 788:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Set FPSCR
 789:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:../firmware/CMSIS/core/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 792:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:../firmware/CMSIS/core/cmsis_gcc.h **** {
 794:../firmware/CMSIS/core/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:../firmware/CMSIS/core/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:../firmware/CMSIS/core/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:../firmware/CMSIS/core/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:../firmware/CMSIS/core/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:../firmware/CMSIS/core/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:../firmware/CMSIS/core/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:../firmware/CMSIS/core/cmsis_gcc.h **** #else
 802:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
 804:../firmware/CMSIS/core/cmsis_gcc.h **** #else
 805:../firmware/CMSIS/core/cmsis_gcc.h ****   (void)fpscr;
 806:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
 807:../firmware/CMSIS/core/cmsis_gcc.h **** }
 808:../firmware/CMSIS/core/cmsis_gcc.h **** 
 809:../firmware/CMSIS/core/cmsis_gcc.h **** 
 810:../firmware/CMSIS/core/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:../firmware/CMSIS/core/cmsis_gcc.h **** 
 812:../firmware/CMSIS/core/cmsis_gcc.h **** 
 813:../firmware/CMSIS/core/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:../firmware/CMSIS/core/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:../firmware/CMSIS/core/cmsis_gcc.h ****   Access to dedicated instructions
 816:../firmware/CMSIS/core/cmsis_gcc.h ****   @{
 817:../firmware/CMSIS/core/cmsis_gcc.h **** */
 818:../firmware/CMSIS/core/cmsis_gcc.h **** 
 819:../firmware/CMSIS/core/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:../firmware/CMSIS/core/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:../firmware/CMSIS/core/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:../firmware/CMSIS/core/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:../firmware/CMSIS/core/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:../firmware/CMSIS/core/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:../firmware/CMSIS/core/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:../firmware/CMSIS/core/cmsis_gcc.h **** #else
 827:../firmware/CMSIS/core/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:../firmware/CMSIS/core/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:../firmware/CMSIS/core/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:../firmware/CMSIS/core/cmsis_gcc.h **** #endif
 831:../firmware/CMSIS/core/cmsis_gcc.h **** 
 832:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 833:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   No Operation
 834:../firmware/CMSIS/core/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 836:../firmware/CMSIS/core/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 52


 837:../firmware/CMSIS/core/cmsis_gcc.h **** 
 838:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 839:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 842:../firmware/CMSIS/core/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:../firmware/CMSIS/core/cmsis_gcc.h **** 
 844:../firmware/CMSIS/core/cmsis_gcc.h **** 
 845:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 846:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Wait For Event
 847:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:../firmware/CMSIS/core/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 850:../firmware/CMSIS/core/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:../firmware/CMSIS/core/cmsis_gcc.h **** 
 852:../firmware/CMSIS/core/cmsis_gcc.h **** 
 853:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 854:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Send Event
 855:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 857:../firmware/CMSIS/core/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:../firmware/CMSIS/core/cmsis_gcc.h **** 
 859:../firmware/CMSIS/core/cmsis_gcc.h **** 
 860:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 861:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:../firmware/CMSIS/core/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:../firmware/CMSIS/core/cmsis_gcc.h ****            after the instruction has been completed.
 865:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 866:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:../firmware/CMSIS/core/cmsis_gcc.h **** {
 868:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:../firmware/CMSIS/core/cmsis_gcc.h **** }
 870:../firmware/CMSIS/core/cmsis_gcc.h **** 
 871:../firmware/CMSIS/core/cmsis_gcc.h **** 
 872:../firmware/CMSIS/core/cmsis_gcc.h **** /**
 873:../firmware/CMSIS/core/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:../firmware/CMSIS/core/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:../firmware/CMSIS/core/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:../firmware/CMSIS/core/cmsis_gcc.h ****  */
 877:../firmware/CMSIS/core/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 878:../firmware/CMSIS/core/cmsis_gcc.h **** {
 879:../firmware/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 129              		.loc 3 879 3
 130              		.syntax unified
 131              	@ 879 "../firmware/CMSIS/core/cmsis_gcc.h" 1
 132 0004 BFF34F8F 		dsb 0xF
 133              	@ 0 "" 2
 880:../firmware/CMSIS/core/cmsis_gcc.h **** }
 134              		.loc 3 880 1
 135              		.thumb
 136              		.syntax unified
 137 0008 00BF     		nop
 138              	.LBE11:
 139              	.LBE10:
1941:../firmware/CMSIS/core/core_cm4.h ****   __DSB();                                                          /* Ensure all outstanding memor
1942:../firmware/CMSIS/core/core_cm4.h ****                                                                        buffered write are completed
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 53


1943:../firmware/CMSIS/core/core_cm4.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
1944:../firmware/CMSIS/core/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 140              		.loc 2 1944 32
 141 000a 064B     		ldr	r3, .L9
 142 000c DB68     		ldr	r3, [r3, #12]
 143              		.loc 2 1944 40
 144 000e 03F4E062 		and	r2, r3, #1792
1943:../firmware/CMSIS/core/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 145              		.loc 2 1943 6
 146 0012 0449     		ldr	r1, .L9
1943:../firmware/CMSIS/core/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 147              		.loc 2 1943 17
 148 0014 044B     		ldr	r3, .L9+4
 149 0016 1343     		orrs	r3, r3, r2
1943:../firmware/CMSIS/core/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 150              		.loc 2 1943 15
 151 0018 CB60     		str	r3, [r1, #12]
 152              	.LBB12:
 153              	.LBB13:
 879:../firmware/CMSIS/core/cmsis_gcc.h **** }
 154              		.loc 3 879 3
 155              		.syntax unified
 156              	@ 879 "../firmware/CMSIS/core/cmsis_gcc.h" 1
 157 001a BFF34F8F 		dsb 0xF
 158              	@ 0 "" 2
 159              		.loc 3 880 1
 160              		.thumb
 161              		.syntax unified
 162 001e 00BF     		nop
 163              	.L8:
 164              	.LBE13:
 165              	.LBE12:
1945:../firmware/CMSIS/core/core_cm4.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
1946:../firmware/CMSIS/core/core_cm4.h ****   __DSB();                                                          /* Ensure completion of memory 
1947:../firmware/CMSIS/core/core_cm4.h **** 
1948:../firmware/CMSIS/core/core_cm4.h ****   for(;;)                                                           /* wait until reset */
1949:../firmware/CMSIS/core/core_cm4.h ****   {
1950:../firmware/CMSIS/core/core_cm4.h ****     __NOP();
 166              		.loc 2 1950 5 discriminator 1
 167              		.syntax unified
 168              	@ 1950 "../firmware/CMSIS/core/core_cm4.h" 1
 169 0020 00BF     		nop
 170              	@ 0 "" 2
 171              		.thumb
 172              		.syntax unified
 173 0022 FDE7     		b	.L8
 174              	.L10:
 175              		.align	2
 176              	.L9:
 177 0024 00ED00E0 		.word	-536810240
 178 0028 0400FA05 		.word	100270084
 179              		.cfi_endproc
 180              	.LFE117:
 182              		.section	.text.SysTick_Config,"ax",%progbits
 183              		.align	1
 184              		.syntax unified
 185              		.thumb
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 54


 186              		.thumb_func
 188              	SysTick_Config:
 189              	.LFB126:
1951:../firmware/CMSIS/core/core_cm4.h ****   }
1952:../firmware/CMSIS/core/core_cm4.h **** }
1953:../firmware/CMSIS/core/core_cm4.h **** 
1954:../firmware/CMSIS/core/core_cm4.h **** /*@} end of CMSIS_Core_NVICFunctions */
1955:../firmware/CMSIS/core/core_cm4.h **** 
1956:../firmware/CMSIS/core/core_cm4.h **** /* ##########################  MPU functions  #################################### */
1957:../firmware/CMSIS/core/core_cm4.h **** 
1958:../firmware/CMSIS/core/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1959:../firmware/CMSIS/core/core_cm4.h **** 
1960:../firmware/CMSIS/core/core_cm4.h **** #include "mpu_armv7.h"
1961:../firmware/CMSIS/core/core_cm4.h **** 
1962:../firmware/CMSIS/core/core_cm4.h **** #endif
1963:../firmware/CMSIS/core/core_cm4.h **** 
1964:../firmware/CMSIS/core/core_cm4.h **** 
1965:../firmware/CMSIS/core/core_cm4.h **** /* ##########################  FPU functions  #################################### */
1966:../firmware/CMSIS/core/core_cm4.h **** /**
1967:../firmware/CMSIS/core/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1968:../firmware/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_Core_FpuFunctions FPU Functions
1969:../firmware/CMSIS/core/core_cm4.h ****   \brief    Function that provides FPU type.
1970:../firmware/CMSIS/core/core_cm4.h ****   @{
1971:../firmware/CMSIS/core/core_cm4.h ****  */
1972:../firmware/CMSIS/core/core_cm4.h **** 
1973:../firmware/CMSIS/core/core_cm4.h **** /**
1974:../firmware/CMSIS/core/core_cm4.h ****   \brief   get FPU type
1975:../firmware/CMSIS/core/core_cm4.h ****   \details returns the FPU type
1976:../firmware/CMSIS/core/core_cm4.h ****   \returns
1977:../firmware/CMSIS/core/core_cm4.h ****    - \b  0: No FPU
1978:../firmware/CMSIS/core/core_cm4.h ****    - \b  1: Single precision FPU
1979:../firmware/CMSIS/core/core_cm4.h ****    - \b  2: Double + Single precision FPU
1980:../firmware/CMSIS/core/core_cm4.h ****  */
1981:../firmware/CMSIS/core/core_cm4.h **** __STATIC_INLINE uint32_t SCB_GetFPUType(void)
1982:../firmware/CMSIS/core/core_cm4.h **** {
1983:../firmware/CMSIS/core/core_cm4.h ****   uint32_t mvfr0;
1984:../firmware/CMSIS/core/core_cm4.h **** 
1985:../firmware/CMSIS/core/core_cm4.h ****   mvfr0 = FPU->MVFR0;
1986:../firmware/CMSIS/core/core_cm4.h ****   if      ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x020U)
1987:../firmware/CMSIS/core/core_cm4.h ****   {
1988:../firmware/CMSIS/core/core_cm4.h ****     return 1U;           /* Single precision FPU */
1989:../firmware/CMSIS/core/core_cm4.h ****   }
1990:../firmware/CMSIS/core/core_cm4.h ****   else
1991:../firmware/CMSIS/core/core_cm4.h ****   {
1992:../firmware/CMSIS/core/core_cm4.h ****     return 0U;           /* No FPU */
1993:../firmware/CMSIS/core/core_cm4.h ****   }
1994:../firmware/CMSIS/core/core_cm4.h **** }
1995:../firmware/CMSIS/core/core_cm4.h **** 
1996:../firmware/CMSIS/core/core_cm4.h **** 
1997:../firmware/CMSIS/core/core_cm4.h **** /*@} end of CMSIS_Core_FpuFunctions */
1998:../firmware/CMSIS/core/core_cm4.h **** 
1999:../firmware/CMSIS/core/core_cm4.h **** 
2000:../firmware/CMSIS/core/core_cm4.h **** 
2001:../firmware/CMSIS/core/core_cm4.h **** /* ##################################    SysTick function  ########################################
2002:../firmware/CMSIS/core/core_cm4.h **** /**
2003:../firmware/CMSIS/core/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
2004:../firmware/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 55


2005:../firmware/CMSIS/core/core_cm4.h ****   \brief    Functions that configure the System.
2006:../firmware/CMSIS/core/core_cm4.h ****   @{
2007:../firmware/CMSIS/core/core_cm4.h ****  */
2008:../firmware/CMSIS/core/core_cm4.h **** 
2009:../firmware/CMSIS/core/core_cm4.h **** #if defined (__Vendor_SysTickConfig) && (__Vendor_SysTickConfig == 0U)
2010:../firmware/CMSIS/core/core_cm4.h **** 
2011:../firmware/CMSIS/core/core_cm4.h **** /**
2012:../firmware/CMSIS/core/core_cm4.h ****   \brief   System Tick Configuration
2013:../firmware/CMSIS/core/core_cm4.h ****   \details Initializes the System Timer and its interrupt, and starts the System Tick Timer.
2014:../firmware/CMSIS/core/core_cm4.h ****            Counter is in free running mode to generate periodic interrupts.
2015:../firmware/CMSIS/core/core_cm4.h ****   \param [in]  ticks  Number of ticks between two interrupts.
2016:../firmware/CMSIS/core/core_cm4.h ****   \return          0  Function succeeded.
2017:../firmware/CMSIS/core/core_cm4.h ****   \return          1  Function failed.
2018:../firmware/CMSIS/core/core_cm4.h ****   \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
2019:../firmware/CMSIS/core/core_cm4.h ****            function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.
2020:../firmware/CMSIS/core/core_cm4.h ****            must contain a vendor-specific implementation of this function.
2021:../firmware/CMSIS/core/core_cm4.h ****  */
2022:../firmware/CMSIS/core/core_cm4.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
2023:../firmware/CMSIS/core/core_cm4.h **** {
 190              		.loc 2 2023 1
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 8
 193              		@ frame_needed = 1, uses_anonymous_args = 0
 194 0000 80B5     		push	{r7, lr}
 195              	.LCFI8:
 196              		.cfi_def_cfa_offset 8
 197              		.cfi_offset 7, -8
 198              		.cfi_offset 14, -4
 199 0002 82B0     		sub	sp, sp, #8
 200              	.LCFI9:
 201              		.cfi_def_cfa_offset 16
 202 0004 00AF     		add	r7, sp, #0
 203              	.LCFI10:
 204              		.cfi_def_cfa_register 7
 205 0006 7860     		str	r0, [r7, #4]
2024:../firmware/CMSIS/core/core_cm4.h ****   if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 206              		.loc 2 2024 14
 207 0008 7B68     		ldr	r3, [r7, #4]
 208 000a 013B     		subs	r3, r3, #1
 209              		.loc 2 2024 6
 210 000c B3F1807F 		cmp	r3, #16777216
 211 0010 01D3     		bcc	.L12
2025:../firmware/CMSIS/core/core_cm4.h ****   {
2026:../firmware/CMSIS/core/core_cm4.h ****     return (1UL);                                                   /* Reload value impossible */
 212              		.loc 2 2026 12
 213 0012 0123     		movs	r3, #1
 214 0014 0FE0     		b	.L13
 215              	.L12:
2027:../firmware/CMSIS/core/core_cm4.h ****   }
2028:../firmware/CMSIS/core/core_cm4.h **** 
2029:../firmware/CMSIS/core/core_cm4.h ****   SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 216              		.loc 2 2029 10
 217 0016 0A4A     		ldr	r2, .L14
 218              		.loc 2 2029 20
 219 0018 7B68     		ldr	r3, [r7, #4]
 220 001a 013B     		subs	r3, r3, #1
 221              		.loc 2 2029 18
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 56


 222 001c 5360     		str	r3, [r2, #4]
2030:../firmware/CMSIS/core/core_cm4.h ****   NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Int
 223              		.loc 2 2030 3
 224 001e 0F21     		movs	r1, #15
 225 0020 4FF0FF30 		mov	r0, #-1
 226 0024 FFF7FEFF 		bl	__NVIC_SetPriority
2031:../firmware/CMSIS/core/core_cm4.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
 227              		.loc 2 2031 10
 228 0028 054B     		ldr	r3, .L14
 229              		.loc 2 2031 18
 230 002a 0022     		movs	r2, #0
 231 002c 9A60     		str	r2, [r3, #8]
2032:../firmware/CMSIS/core/core_cm4.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 232              		.loc 2 2032 10
 233 002e 044B     		ldr	r3, .L14
 234              		.loc 2 2032 18
 235 0030 0722     		movs	r2, #7
 236 0032 1A60     		str	r2, [r3]
2033:../firmware/CMSIS/core/core_cm4.h ****                    SysTick_CTRL_TICKINT_Msk   |
2034:../firmware/CMSIS/core/core_cm4.h ****                    SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTi
2035:../firmware/CMSIS/core/core_cm4.h ****   return (0UL);                                                     /* Function successful */
 237              		.loc 2 2035 10
 238 0034 0023     		movs	r3, #0
 239              	.L13:
2036:../firmware/CMSIS/core/core_cm4.h **** }
 240              		.loc 2 2036 1
 241 0036 1846     		mov	r0, r3
 242 0038 0837     		adds	r7, r7, #8
 243              	.LCFI11:
 244              		.cfi_def_cfa_offset 8
 245 003a BD46     		mov	sp, r7
 246              	.LCFI12:
 247              		.cfi_def_cfa_register 13
 248              		@ sp needed
 249 003c 80BD     		pop	{r7, pc}
 250              	.L15:
 251 003e 00BF     		.align	2
 252              	.L14:
 253 0040 10E000E0 		.word	-536813552
 254              		.cfi_endproc
 255              	.LFE126:
 257              		.global	TimingDelay
 258              		.section	.bss.TimingDelay,"aw",%nobits
 259              		.align	2
 262              	TimingDelay:
 263 0000 00000000 		.space	4
 264              		.section	.text.RCC_Configuration,"ax",%progbits
 265              		.align	1
 266              		.global	RCC_Configuration
 267              		.syntax unified
 268              		.thumb
 269              		.thumb_func
 271              	RCC_Configuration:
 272              	.LFB133:
   1:../User/BSP/bsp_config.c **** #include "bsp_config.h"
   2:../User/BSP/bsp_config.c **** #include "bsp_tim.h"
   3:../User/BSP/bsp_config.c **** #include "bsp_led.h"
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 57


   4:../User/BSP/bsp_config.c **** #include "bsp_adc.h"
   5:../User/BSP/bsp_config.c **** #include "i2c_eeprom.h"
   6:../User/BSP/bsp_config.c **** 
   7:../User/BSP/bsp_config.c **** __IO uint32_t TimingDelay = 0;
   8:../User/BSP/bsp_config.c **** 
   9:../User/BSP/bsp_config.c **** /*************************************************************
  10:../User/BSP/bsp_config.c ****  * 所有外设时钟初始化
  11:../User/BSP/bsp_config.c ****  *************************************************************/
  12:../User/BSP/bsp_config.c **** void RCC_Configuration(void)
  13:../User/BSP/bsp_config.c **** {
 273              		.loc 1 13 1
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 0
 276              		@ frame_needed = 1, uses_anonymous_args = 0
 277 0000 80B5     		push	{r7, lr}
 278              	.LCFI13:
 279              		.cfi_def_cfa_offset 8
 280              		.cfi_offset 7, -8
 281              		.cfi_offset 14, -4
 282 0002 00AF     		add	r7, sp, #0
 283              	.LCFI14:
 284              		.cfi_def_cfa_register 7
  14:../User/BSP/bsp_config.c **** 		NVIC_Priority_Group_Set(NVIC_PER3_SUB1_PRIORITYGROUP);
 285              		.loc 1 14 3
 286 0004 4FF48060 		mov	r0, #1024
 287 0008 FFF7FEFF 		bl	NVIC_Priority_Group_Set
  15:../User/BSP/bsp_config.c **** 	
  16:../User/BSP/bsp_config.c **** 		RCC_Pclk1_Config(RCC_HCLK_DIV8);		//设置APB1的时钟频率为15Mhz同时TIM2时钟频率为30M
 288              		.loc 1 16 3
 289 000c 4FF4C060 		mov	r0, #1536
 290 0010 FFF7FEFF 		bl	RCC_Pclk1_Config
  17:../User/BSP/bsp_config.c ****     // Enable TIM1 clocks
  18:../User/BSP/bsp_config.c ****     RCC_APB2_Peripheral_Clock_Enable(RCC_APB2_PERIPH_TIM1);
 291              		.loc 1 18 5
 292 0014 4FF40060 		mov	r0, #2048
 293 0018 FFF7FEFF 		bl	RCC_APB2_Peripheral_Clock_Enable
  19:../User/BSP/bsp_config.c **** 		RCC_APB1_Peripheral_Clock_Enable(RCC_APB1_PERIPH_TIM2);
 294              		.loc 1 19 3
 295 001c 0120     		movs	r0, #1
 296 001e FFF7FEFF 		bl	RCC_APB1_Peripheral_Clock_Enable
  20:../User/BSP/bsp_config.c **** 		RCC_APB1_Peripheral_Clock_Enable(RCC_APB1_PERIPH_TIM4);
 297              		.loc 1 20 3
 298 0022 0420     		movs	r0, #4
 299 0024 FFF7FEFF 		bl	RCC_APB1_Peripheral_Clock_Enable
  21:../User/BSP/bsp_config.c **** 		RCC_APB1_Peripheral_Clock_Enable(RCC_APB1_PERIPH_TIM6);
 300              		.loc 1 21 3
 301 0028 1020     		movs	r0, #16
 302 002a FFF7FEFF 		bl	RCC_APB1_Peripheral_Clock_Enable
  22:../User/BSP/bsp_config.c ****     // Enable DMA clocks
  23:../User/BSP/bsp_config.c ****     RCC_AHB_Peripheral_Clock_Enable(RCC_AHB_PERIPH_DMA);
 303              		.loc 1 23 5
 304 002e 0120     		movs	r0, #1
 305 0030 FFF7FEFF 		bl	RCC_AHB_Peripheral_Clock_Enable
  24:../User/BSP/bsp_config.c **** 
  25:../User/BSP/bsp_config.c ****     // Enable GPIOA GPIOB clocks
  26:../User/BSP/bsp_config.c ****     RCC_AHB_Peripheral_Clock_Enable(RCC_AHB_PERIPH_GPIOA | RCC_AHB_PERIPH_GPIOB);
 306              		.loc 1 26 5
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 58


 307 0034 4FF4C070 		mov	r0, #384
 308 0038 FFF7FEFF 		bl	RCC_AHB_Peripheral_Clock_Enable
  27:../User/BSP/bsp_config.c ****     RCC_APB2_Peripheral_Clock_Enable(RCC_APB2_PERIPH_AFIO);
 309              		.loc 1 27 5
 310 003c 0120     		movs	r0, #1
 311 003e FFF7FEFF 		bl	RCC_APB2_Peripheral_Clock_Enable
  28:../User/BSP/bsp_config.c **** 
  29:../User/BSP/bsp_config.c ****     // Enable ADC clocks
  30:../User/BSP/bsp_config.c ****     RCC_AHB_Peripheral_Clock_Enable(RCC_AHB_PERIPH_ADC);
 312              		.loc 1 30 5
 313 0042 4FF48050 		mov	r0, #4096
 314 0046 FFF7FEFF 		bl	RCC_AHB_Peripheral_Clock_Enable
  31:../User/BSP/bsp_config.c **** 
  32:../User/BSP/bsp_config.c ****     ADC_Clock_Mode_Config(ADC_CKMOD_AHB, RCC_ADCHCLK_DIV4);
 315              		.loc 1 32 5
 316 004a 0221     		movs	r1, #2
 317 004c 0020     		movs	r0, #0
 318 004e FFF7FEFF 		bl	ADC_Clock_Mode_Config
  33:../User/BSP/bsp_config.c ****     RCC_ADC_1M_Clock_Config(RCC_ADC1MCLK_SRC_HSI, RCC_ADC1MCLK_DIV8);
 319              		.loc 1 33 5
 320 0052 4FF46051 		mov	r1, #14336
 321 0056 0020     		movs	r0, #0
 322 0058 FFF7FEFF 		bl	RCC_ADC_1M_Clock_Config
  34:../User/BSP/bsp_config.c **** 
  35:../User/BSP/bsp_config.c ****     // Enable COMP clocks
  36:../User/BSP/bsp_config.c ****     RCC_APB1_Peripheral_Clock_Enable(RCC_APB1_PERIPH_COMP | RCC_APB1_PERIPH_COMP_FILT);
 323              		.loc 1 36 5
 324 005c C020     		movs	r0, #192
 325 005e FFF7FEFF 		bl	RCC_APB1_Peripheral_Clock_Enable
  37:../User/BSP/bsp_config.c **** 
  38:../User/BSP/bsp_config.c ****     //I2C1  clocks enable
  39:../User/BSP/bsp_config.c ****     RCC_APB1_Peripheral_Clock_Enable(RCC_APB1_PERIPH_I2C1);
 326              		.loc 1 39 5
 327 0062 4FF40010 		mov	r0, #2097152
 328 0066 FFF7FEFF 		bl	RCC_APB1_Peripheral_Clock_Enable
  40:../User/BSP/bsp_config.c **** }
 329              		.loc 1 40 1
 330 006a 00BF     		nop
 331 006c 80BD     		pop	{r7, pc}
 332              		.cfi_endproc
 333              	.LFE133:
 335              		.section	.text.COMP_Configuratoin,"ax",%progbits
 336              		.align	1
 337              		.global	COMP_Configuratoin
 338              		.syntax unified
 339              		.thumb
 340              		.thumb_func
 342              	COMP_Configuratoin:
 343              	.LFB134:
  41:../User/BSP/bsp_config.c **** 
  42:../User/BSP/bsp_config.c **** 
  43:../User/BSP/bsp_config.c **** /*************************************************************
  44:../User/BSP/bsp_config.c ****  * 比较器初始化，需要根据实际的计算值调整VC2的值
  45:../User/BSP/bsp_config.c ****  *************************************************************/
  46:../User/BSP/bsp_config.c **** void COMP_Configuratoin(void)
  47:../User/BSP/bsp_config.c **** {
 344              		.loc 1 47 1
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 59


 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 40
 347              		@ frame_needed = 1, uses_anonymous_args = 0
 348 0000 80B5     		push	{r7, lr}
 349              	.LCFI15:
 350              		.cfi_def_cfa_offset 8
 351              		.cfi_offset 7, -8
 352              		.cfi_offset 14, -4
 353 0002 8CB0     		sub	sp, sp, #48
 354              	.LCFI16:
 355              		.cfi_def_cfa_offset 56
 356 0004 02AF     		add	r7, sp, #8
 357              	.LCFI17:
 358              		.cfi_def_cfa 7, 48
  48:../User/BSP/bsp_config.c ****     COMP_InitType COMP_Initial;
  49:../User/BSP/bsp_config.c **** 
  50:../User/BSP/bsp_config.c ****     /*Set ref1  voltage div*/
  51:../User/BSP/bsp_config.c **** //	  /*min 0.05v,  设置保护电压为3.038 4.6A  */
  52:../User/BSP/bsp_config.c **** //    COMP_Voltage_Reference_Config(0, DISABLE, 58, ENABLE, 0, DISABLE);
  53:../User/BSP/bsp_config.c **** 
  54:../User/BSP/bsp_config.c **** 		/*min 0.05v,  设置保护电压为3.165 5A  */
  55:../User/BSP/bsp_config.c ****     COMP_Voltage_Reference_Config(0, DISABLE, 61, ENABLE, 0, DISABLE);
 359              		.loc 1 55 5
 360 0006 0023     		movs	r3, #0
 361 0008 0193     		str	r3, [sp, #4]
 362 000a 0023     		movs	r3, #0
 363 000c 0093     		str	r3, [sp]
 364 000e 0123     		movs	r3, #1
 365 0010 3D22     		movs	r2, #61
 366 0012 0021     		movs	r1, #0
 367 0014 0020     		movs	r0, #0
 368 0016 FFF7FEFF 		bl	COMP_Voltage_Reference_Config
  56:../User/BSP/bsp_config.c **** 	
  57:../User/BSP/bsp_config.c ****     /*Initial comp1*/
  58:../User/BSP/bsp_config.c ****     COMP_Initializes_Structure(&COMP_Initial);
 369              		.loc 1 58 5
 370 001a 3B1D     		adds	r3, r7, #4
 371 001c 1846     		mov	r0, r3
 372 001e FFF7FEFF 		bl	COMP_Initializes_Structure
  59:../User/BSP/bsp_config.c ****     COMP_Initial.SampWindow = 30;
 373              		.loc 1 59 29
 374 0022 1E23     		movs	r3, #30
 375 0024 87F82030 		strb	r3, [r7, #32]
  60:../User/BSP/bsp_config.c ****     COMP_Initial.Threshold = 20;
 376              		.loc 1 60 28
 377 0028 1423     		movs	r3, #20
 378 002a 87F82130 		strb	r3, [r7, #33]
  61:../User/BSP/bsp_config.c ****     COMP_Initial.ClkPsc = 1;
 379              		.loc 1 61 25
 380 002e 0123     		movs	r3, #1
 381 0030 BB84     		strh	r3, [r7, #36]	@ movhi
  62:../User/BSP/bsp_config.c ****     COMP_Initial.FilterEn = ENABLE;
 382              		.loc 1 62 27
 383 0032 0123     		movs	r3, #1
 384 0034 87F82230 		strb	r3, [r7, #34]
  63:../User/BSP/bsp_config.c ****     COMP_Initial.InpSel = COMP2_INPSEL_PA3;
 385              		.loc 1 63 25
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 60


 386 0038 2023     		movs	r3, #32
 387 003a 7B61     		str	r3, [r7, #20]
  64:../User/BSP/bsp_config.c ****     COMP_Initial.InmSel = COMP2_INMSEL_VREF_VC2;
 388              		.loc 1 64 25
 389 003c 0023     		movs	r3, #0
 390 003e BB61     		str	r3, [r7, #24]
  65:../User/BSP/bsp_config.c ****     COMP_Initializes(COMP2, &COMP_Initial);
 391              		.loc 1 65 5
 392 0040 3B1D     		adds	r3, r7, #4
 393 0042 1946     		mov	r1, r3
 394 0044 0120     		movs	r0, #1
 395 0046 FFF7FEFF 		bl	COMP_Initializes
  66:../User/BSP/bsp_config.c **** 
  67:../User/BSP/bsp_config.c ****     /*trig initial as tim1 break*/
  68:../User/BSP/bsp_config.c ****     COMP_Output_Trigger_Config(COMP2, COMP2_OUTSEL_TIM1_BKIN);
 396              		.loc 1 68 5
 397 004a 4FF40071 		mov	r1, #512
 398 004e 0120     		movs	r0, #1
 399 0050 FFF7FEFF 		bl	COMP_Output_Trigger_Config
  69:../User/BSP/bsp_config.c **** 
  70:../User/BSP/bsp_config.c ****     /*enable comp*/
  71:../User/BSP/bsp_config.c ****     COMP_ON(COMP2);
 400              		.loc 1 71 5
 401 0054 0120     		movs	r0, #1
 402 0056 FFF7FEFF 		bl	COMP_ON
  72:../User/BSP/bsp_config.c **** }
 403              		.loc 1 72 1
 404 005a 00BF     		nop
 405 005c 2837     		adds	r7, r7, #40
 406              	.LCFI18:
 407              		.cfi_def_cfa_offset 8
 408 005e BD46     		mov	sp, r7
 409              	.LCFI19:
 410              		.cfi_def_cfa_register 13
 411              		@ sp needed
 412 0060 80BD     		pop	{r7, pc}
 413              		.cfi_endproc
 414              	.LFE134:
 416              		.section	.text.IDLE_GPIO_Config,"ax",%progbits
 417              		.align	1
 418              		.global	IDLE_GPIO_Config
 419              		.syntax unified
 420              		.thumb
 421              		.thumb_func
 423              	IDLE_GPIO_Config:
 424              	.LFB135:
  73:../User/BSP/bsp_config.c **** 
  74:../User/BSP/bsp_config.c **** /*************************************************************
  75:../User/BSP/bsp_config.c **** * 空闲端口初始化，初始化为推挽输出，低电平
  76:../User/BSP/bsp_config.c ****  *************************************************************/
  77:../User/BSP/bsp_config.c **** void IDLE_GPIO_Config(void)
  78:../User/BSP/bsp_config.c **** {
 425              		.loc 1 78 1
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 24
 428              		@ frame_needed = 1, uses_anonymous_args = 0
 429 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 61


 430              	.LCFI20:
 431              		.cfi_def_cfa_offset 8
 432              		.cfi_offset 7, -8
 433              		.cfi_offset 14, -4
 434 0002 86B0     		sub	sp, sp, #24
 435              	.LCFI21:
 436              		.cfi_def_cfa_offset 32
 437 0004 00AF     		add	r7, sp, #0
 438              	.LCFI22:
 439              		.cfi_def_cfa_register 7
  79:../User/BSP/bsp_config.c **** 	GPIO_InitType GPIO_InitStructure;
  80:../User/BSP/bsp_config.c **** 	
  81:../User/BSP/bsp_config.c **** 	RCC_AHB_Peripheral_Clock_Enable(RCC_AHB_PERIPH_GPIOD);
 440              		.loc 1 81 2
 441 0006 4FF48060 		mov	r0, #1024
 442 000a FFF7FEFF 		bl	RCC_AHB_Peripheral_Clock_Enable
  82:../User/BSP/bsp_config.c **** 	
  83:../User/BSP/bsp_config.c **** 	GPIO_Structure_Initialize(&GPIO_InitStructure);
 443              		.loc 1 83 2
 444 000e 3B46     		mov	r3, r7
 445 0010 1846     		mov	r0, r3
 446 0012 FFF7FEFF 		bl	GPIO_Structure_Initialize
  84:../User/BSP/bsp_config.c **** 	/*配置GPIO为推挽输出功能 */
  85:../User/BSP/bsp_config.c **** 	GPIO_InitStructure.Pin       = GPIO_PIN_2 | GPIO_PIN_15;	
 447              		.loc 1 85 31
 448 0016 48F20403 		movw	r3, #32772
 449 001a 3B60     		str	r3, [r7]
  86:../User/BSP/bsp_config.c **** 	GPIO_InitStructure.GPIO_Current = GPIO_DS_2MA;
 450              		.loc 1 86 34
 451 001c 0023     		movs	r3, #0
 452 001e 3B61     		str	r3, [r7, #16]
  87:../User/BSP/bsp_config.c **** 	GPIO_InitStructure.GPIO_Mode = GPIO_MODE_OUT_PP;				
 453              		.loc 1 87 31
 454 0020 0123     		movs	r3, #1
 455 0022 7B60     		str	r3, [r7, #4]
  88:../User/BSP/bsp_config.c **** 	GPIO_Peripheral_Initialize(GPIOA, &GPIO_InitStructure);
 456              		.loc 1 88 2
 457 0024 3B46     		mov	r3, r7
 458 0026 1946     		mov	r1, r3
 459 0028 1548     		ldr	r0, .L19
 460 002a FFF7FEFF 		bl	GPIO_Peripheral_Initialize
  89:../User/BSP/bsp_config.c **** 	
  90:../User/BSP/bsp_config.c **** 	/*PB6用于输入捕获*/
  91:../User/BSP/bsp_config.c **** 	GPIO_InitStructure.Pin       = GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_7;				
 461              		.loc 1 91 31
 462 002e B023     		movs	r3, #176
 463 0030 3B60     		str	r3, [r7]
  92:../User/BSP/bsp_config.c **** 	GPIO_InitStructure.GPIO_Current = GPIO_DS_2MA;
 464              		.loc 1 92 34
 465 0032 0023     		movs	r3, #0
 466 0034 3B61     		str	r3, [r7, #16]
  93:../User/BSP/bsp_config.c **** 	GPIO_InitStructure.GPIO_Mode = GPIO_MODE_OUT_PP;		
 467              		.loc 1 93 31
 468 0036 0123     		movs	r3, #1
 469 0038 7B60     		str	r3, [r7, #4]
  94:../User/BSP/bsp_config.c **** 	GPIO_Peripheral_Initialize(GPIOB, &GPIO_InitStructure);
 470              		.loc 1 94 2
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 62


 471 003a 3B46     		mov	r3, r7
 472 003c 1946     		mov	r1, r3
 473 003e 1148     		ldr	r0, .L19+4
 474 0040 FFF7FEFF 		bl	GPIO_Peripheral_Initialize
  95:../User/BSP/bsp_config.c **** 	
  96:../User/BSP/bsp_config.c **** 	/*PD14 PD15 */
  97:../User/BSP/bsp_config.c **** 	GPIO_InitStructure.Pin       = GPIO_PIN_14 | GPIO_PIN_15;				
 475              		.loc 1 97 31
 476 0044 4FF44043 		mov	r3, #49152
 477 0048 3B60     		str	r3, [r7]
  98:../User/BSP/bsp_config.c **** 	GPIO_InitStructure.GPIO_Current = GPIO_DS_2MA;
 478              		.loc 1 98 34
 479 004a 0023     		movs	r3, #0
 480 004c 3B61     		str	r3, [r7, #16]
  99:../User/BSP/bsp_config.c **** 	GPIO_InitStructure.GPIO_Mode = GPIO_MODE_OUT_PP;		
 481              		.loc 1 99 31
 482 004e 0123     		movs	r3, #1
 483 0050 7B60     		str	r3, [r7, #4]
 100:../User/BSP/bsp_config.c **** 	GPIO_Peripheral_Initialize(GPIOD, &GPIO_InitStructure);
 484              		.loc 1 100 2
 485 0052 3B46     		mov	r3, r7
 486 0054 1946     		mov	r1, r3
 487 0056 0C48     		ldr	r0, .L19+8
 488 0058 FFF7FEFF 		bl	GPIO_Peripheral_Initialize
 101:../User/BSP/bsp_config.c **** 	
 102:../User/BSP/bsp_config.c **** 	
 103:../User/BSP/bsp_config.c **** 	GPIO_Pins_Reset(GPIOA,GPIO_PIN_2 | GPIO_PIN_15);
 489              		.loc 1 103 2
 490 005c 48F20401 		movw	r1, #32772
 491 0060 0748     		ldr	r0, .L19
 492 0062 FFF7FEFF 		bl	GPIO_Pins_Reset
 104:../User/BSP/bsp_config.c **** 	GPIO_Pins_Reset(GPIOB,GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_7);
 493              		.loc 1 104 2
 494 0066 B021     		movs	r1, #176
 495 0068 0648     		ldr	r0, .L19+4
 496 006a FFF7FEFF 		bl	GPIO_Pins_Reset
 105:../User/BSP/bsp_config.c **** 	GPIO_Pins_Reset(GPIOD,GPIO_PIN_14 | GPIO_PIN_15);
 497              		.loc 1 105 2
 498 006e 4FF44041 		mov	r1, #49152
 499 0072 0548     		ldr	r0, .L19+8
 500 0074 FFF7FEFF 		bl	GPIO_Pins_Reset
 106:../User/BSP/bsp_config.c **** }
 501              		.loc 1 106 1
 502 0078 00BF     		nop
 503 007a 1837     		adds	r7, r7, #24
 504              	.LCFI23:
 505              		.cfi_def_cfa_offset 8
 506 007c BD46     		mov	sp, r7
 507              	.LCFI24:
 508              		.cfi_def_cfa_register 13
 509              		@ sp needed
 510 007e 80BD     		pop	{r7, pc}
 511              	.L20:
 512              		.align	2
 513              	.L19:
 514 0080 00340240 		.word	1073886208
 515 0084 00380240 		.word	1073887232
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 63


 516 0088 00400240 		.word	1073889280
 517              		.cfi_endproc
 518              	.LFE135:
 520              		.section	.text.GPIO_Config,"ax",%progbits
 521              		.align	1
 522              		.global	GPIO_Config
 523              		.syntax unified
 524              		.thumb
 525              		.thumb_func
 527              	GPIO_Config:
 528              	.LFB136:
 107:../User/BSP/bsp_config.c **** 
 108:../User/BSP/bsp_config.c **** /*************************************************************
 109:../User/BSP/bsp_config.c ****  * 端口初始化
 110:../User/BSP/bsp_config.c ****  *************************************************************/
 111:../User/BSP/bsp_config.c **** void GPIO_Config(void)
 112:../User/BSP/bsp_config.c **** {
 529              		.loc 1 112 1
 530              		.cfi_startproc
 531              		@ args = 0, pretend = 0, frame = 24
 532              		@ frame_needed = 1, uses_anonymous_args = 0
 533 0000 80B5     		push	{r7, lr}
 534              	.LCFI25:
 535              		.cfi_def_cfa_offset 8
 536              		.cfi_offset 7, -8
 537              		.cfi_offset 14, -4
 538 0002 86B0     		sub	sp, sp, #24
 539              	.LCFI26:
 540              		.cfi_def_cfa_offset 32
 541 0004 00AF     		add	r7, sp, #0
 542              	.LCFI27:
 543              		.cfi_def_cfa_register 7
 113:../User/BSP/bsp_config.c ****     GPIO_InitType GPIO_InitStructure;
 114:../User/BSP/bsp_config.c ****     GPIO_Structure_Initialize(&GPIO_InitStructure);
 544              		.loc 1 114 5
 545 0006 3B46     		mov	r3, r7
 546 0008 1846     		mov	r0, r3
 547 000a FFF7FEFF 		bl	GPIO_Structure_Initialize
 115:../User/BSP/bsp_config.c ****     /*配置GPIO为推挽输出功能 */
 116:../User/BSP/bsp_config.c ****     GPIO_InitStructure.GPIO_Current = GPIO_DS_4MA;
 548              		.loc 1 116 37
 549 000e 0223     		movs	r3, #2
 550 0010 3B61     		str	r3, [r7, #16]
 117:../User/BSP/bsp_config.c ****     GPIO_InitStructure.GPIO_Mode = GPIO_MODE_OUT_PP;
 551              		.loc 1 117 34
 552 0012 0123     		movs	r3, #1
 553 0014 7B60     		str	r3, [r7, #4]
 118:../User/BSP/bsp_config.c ****     GPIO_InitStructure.Pin       = GPIO_PIN_6;					//I2C WP引脚
 554              		.loc 1 118 34
 555 0016 4023     		movs	r3, #64
 556 0018 3B60     		str	r3, [r7]
 119:../User/BSP/bsp_config.c ****     GPIO_Peripheral_Initialize(GPIOA, &GPIO_InitStructure);
 557              		.loc 1 119 5
 558 001a 3B46     		mov	r3, r7
 559 001c 1946     		mov	r1, r3
 560 001e 3D48     		ldr	r0, .L22
 561 0020 FFF7FEFF 		bl	GPIO_Peripheral_Initialize
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 64


 120:../User/BSP/bsp_config.c **** 
 121:../User/BSP/bsp_config.c ****     GPIO_InitStructure.Pin       = GPIO_PIN_7;				 //LED灯引脚
 562              		.loc 1 121 34
 563 0024 8023     		movs	r3, #128
 564 0026 3B60     		str	r3, [r7]
 122:../User/BSP/bsp_config.c ****     GPIO_Peripheral_Initialize(GPIOB, &GPIO_InitStructure);
 565              		.loc 1 122 5
 566 0028 3B46     		mov	r3, r7
 567 002a 1946     		mov	r1, r3
 568 002c 3A48     		ldr	r0, .L22+4
 569 002e FFF7FEFF 		bl	GPIO_Peripheral_Initialize
 123:../User/BSP/bsp_config.c **** 
 124:../User/BSP/bsp_config.c ****     /*配置 I2C 引脚  I2C1  SCK(PA4) SDA(PA5)  AF8*/
 125:../User/BSP/bsp_config.c ****     GPIO_InitStructure.Pin            = GPIO_PIN_4 | GPIO_PIN_5;
 570              		.loc 1 125 39
 571 0032 3023     		movs	r3, #48
 572 0034 3B60     		str	r3, [r7]
 126:../User/BSP/bsp_config.c ****     GPIO_InitStructure.GPIO_Slew_Rate = GPIO_SLEW_RATE_SLOW;
 573              		.loc 1 126 39
 574 0036 0123     		movs	r3, #1
 575 0038 FB60     		str	r3, [r7, #12]
 127:../User/BSP/bsp_config.c ****     GPIO_InitStructure.GPIO_Mode      = GPIO_MODE_AF_OD;
 576              		.loc 1 127 39
 577 003a 1223     		movs	r3, #18
 578 003c 7B60     		str	r3, [r7, #4]
 128:../User/BSP/bsp_config.c ****     GPIO_InitStructure.GPIO_Alternate = GPIO_AF8_I2C1;
 579              		.loc 1 128 39
 580 003e 0823     		movs	r3, #8
 581 0040 7B61     		str	r3, [r7, #20]
 129:../User/BSP/bsp_config.c ****     GPIO_InitStructure.GPIO_Pull      = GPIO_PULL_UP;
 582              		.loc 1 129 39
 583 0042 0123     		movs	r3, #1
 584 0044 BB60     		str	r3, [r7, #8]
 130:../User/BSP/bsp_config.c ****     GPIO_Peripheral_Initialize(GPIOA, &GPIO_InitStructure);
 585              		.loc 1 130 5
 586 0046 3B46     		mov	r3, r7
 587 0048 1946     		mov	r1, r3
 588 004a 3248     		ldr	r0, .L22
 589 004c FFF7FEFF 		bl	GPIO_Peripheral_Initialize
 131:../User/BSP/bsp_config.c **** 
 132:../User/BSP/bsp_config.c ****     /*配置 TIM1, CH1(PA8),CH2(PA9),CH3(PA10) CH1N(PA7),CH2N(PB0),CH3N(PB1)*/
 133:../User/BSP/bsp_config.c ****     GPIO_Structure_Initialize(&GPIO_InitStructure);
 590              		.loc 1 133 5
 591 0050 3B46     		mov	r3, r7
 592 0052 1846     		mov	r0, r3
 593 0054 FFF7FEFF 		bl	GPIO_Structure_Initialize
 134:../User/BSP/bsp_config.c ****     GPIO_InitStructure.GPIO_Current = GPIO_DS_4MA;
 594              		.loc 1 134 37
 595 0058 0223     		movs	r3, #2
 596 005a 3B61     		str	r3, [r7, #16]
 135:../User/BSP/bsp_config.c ****     GPIO_InitStructure.GPIO_Mode  = GPIO_MODE_AF_PP;
 597              		.loc 1 135 35
 598 005c 0223     		movs	r3, #2
 599 005e 7B60     		str	r3, [r7, #4]
 136:../User/BSP/bsp_config.c ****     GPIO_InitStructure.GPIO_Alternate = GPIO_AF3_TIM1;
 600              		.loc 1 136 39
 601 0060 0323     		movs	r3, #3
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 65


 602 0062 7B61     		str	r3, [r7, #20]
 137:../User/BSP/bsp_config.c ****     GPIO_InitStructure.Pin        = GPIO_PIN_8 | GPIO_PIN_9 | GPIO_PIN_10;
 603              		.loc 1 137 35
 604 0064 4FF4E063 		mov	r3, #1792
 605 0068 3B60     		str	r3, [r7]
 138:../User/BSP/bsp_config.c ****     GPIO_Peripheral_Initialize(GPIOA, &GPIO_InitStructure);
 606              		.loc 1 138 5
 607 006a 3B46     		mov	r3, r7
 608 006c 1946     		mov	r1, r3
 609 006e 2948     		ldr	r0, .L22
 610 0070 FFF7FEFF 		bl	GPIO_Peripheral_Initialize
 139:../User/BSP/bsp_config.c **** 
 140:../User/BSP/bsp_config.c ****     GPIO_InitStructure.GPIO_Alternate = GPIO_AF6_TIM1;
 611              		.loc 1 140 39
 612 0074 0623     		movs	r3, #6
 613 0076 7B61     		str	r3, [r7, #20]
 141:../User/BSP/bsp_config.c ****     GPIO_InitStructure.Pin        = GPIO_PIN_7;
 614              		.loc 1 141 35
 615 0078 8023     		movs	r3, #128
 616 007a 3B60     		str	r3, [r7]
 142:../User/BSP/bsp_config.c ****     GPIO_Peripheral_Initialize(GPIOA, &GPIO_InitStructure);
 617              		.loc 1 142 5
 618 007c 3B46     		mov	r3, r7
 619 007e 1946     		mov	r1, r3
 620 0080 2448     		ldr	r0, .L22
 621 0082 FFF7FEFF 		bl	GPIO_Peripheral_Initialize
 143:../User/BSP/bsp_config.c **** 
 144:../User/BSP/bsp_config.c ****     GPIO_InitStructure.GPIO_Alternate = GPIO_AF6_TIM1;
 622              		.loc 1 144 39
 623 0086 0623     		movs	r3, #6
 624 0088 7B61     		str	r3, [r7, #20]
 145:../User/BSP/bsp_config.c ****     GPIO_InitStructure.Pin        = GPIO_PIN_0 | GPIO_PIN_1;
 625              		.loc 1 145 35
 626 008a 0323     		movs	r3, #3
 627 008c 3B60     		str	r3, [r7]
 146:../User/BSP/bsp_config.c ****     GPIO_Peripheral_Initialize(GPIOB, &GPIO_InitStructure);
 628              		.loc 1 146 5
 629 008e 3B46     		mov	r3, r7
 630 0090 1946     		mov	r1, r3
 631 0092 2148     		ldr	r0, .L22+4
 632 0094 FFF7FEFF 		bl	GPIO_Peripheral_Initialize
 147:../User/BSP/bsp_config.c **** 
 148:../User/BSP/bsp_config.c **** 		GPIO_InitStructure.GPIO_Mode  = GPIO_MODE_INPUT;
 633              		.loc 1 148 33
 634 0098 0023     		movs	r3, #0
 635 009a 7B60     		str	r3, [r7, #4]
 149:../User/BSP/bsp_config.c **** 		GPIO_InitStructure.GPIO_Pull      = GPIO_PULL_DOWN;
 636              		.loc 1 149 37
 637 009c 0223     		movs	r3, #2
 638 009e BB60     		str	r3, [r7, #8]
 150:../User/BSP/bsp_config.c **** 		GPIO_InitStructure.GPIO_Alternate = GPIO_AF9_TIM4;
 639              		.loc 1 150 37
 640 00a0 0923     		movs	r3, #9
 641 00a2 7B61     		str	r3, [r7, #20]
 151:../User/BSP/bsp_config.c ****     GPIO_InitStructure.Pin        = GPIO_PIN_11;
 642              		.loc 1 151 35
 643 00a4 4FF40063 		mov	r3, #2048
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 66


 644 00a8 3B60     		str	r3, [r7]
 152:../User/BSP/bsp_config.c ****     GPIO_Peripheral_Initialize(GPIOA, &GPIO_InitStructure);
 645              		.loc 1 152 5
 646 00aa 3B46     		mov	r3, r7
 647 00ac 1946     		mov	r1, r3
 648 00ae 1948     		ldr	r0, .L22
 649 00b0 FFF7FEFF 		bl	GPIO_Peripheral_Initialize
 153:../User/BSP/bsp_config.c **** 		
 154:../User/BSP/bsp_config.c ****     /*配置 ADC*/
 155:../User/BSP/bsp_config.c ****     GPIO_Structure_Initialize(&GPIO_InitStructure);
 650              		.loc 1 155 5
 651 00b4 3B46     		mov	r3, r7
 652 00b6 1846     		mov	r0, r3
 653 00b8 FFF7FEFF 		bl	GPIO_Structure_Initialize
 156:../User/BSP/bsp_config.c ****     GPIO_InitStructure.GPIO_Mode = GPIO_MODE_ANALOG;
 654              		.loc 1 156 34
 655 00bc 0323     		movs	r3, #3
 656 00be 7B60     		str	r3, [r7, #4]
 157:../User/BSP/bsp_config.c ****     //current   vbus
 158:../User/BSP/bsp_config.c ****     GPIO_InitStructure.Pin       = GPIO_PIN_0 | GPIO_PIN_1  | GPIO_PIN_2;
 657              		.loc 1 158 34
 658 00c0 0723     		movs	r3, #7
 659 00c2 3B60     		str	r3, [r7]
 159:../User/BSP/bsp_config.c ****     GPIO_Peripheral_Initialize(GPIOA, &GPIO_InitStructure);
 660              		.loc 1 159 5
 661 00c4 3B46     		mov	r3, r7
 662 00c6 1946     		mov	r1, r3
 663 00c8 1248     		ldr	r0, .L22
 664 00ca FFF7FEFF 		bl	GPIO_Peripheral_Initialize
 160:../User/BSP/bsp_config.c **** 
 161:../User/BSP/bsp_config.c ****     /*配置比较器 COMP2*/
 162:../User/BSP/bsp_config.c ****     GPIO_Structure_Initialize(&GPIO_InitStructure);
 665              		.loc 1 162 5
 666 00ce 3B46     		mov	r3, r7
 667 00d0 1846     		mov	r0, r3
 668 00d2 FFF7FEFF 		bl	GPIO_Structure_Initialize
 163:../User/BSP/bsp_config.c ****     GPIO_InitStructure.GPIO_Current = GPIO_DS_4MA;
 669              		.loc 1 163 37
 670 00d6 0223     		movs	r3, #2
 671 00d8 3B61     		str	r3, [r7, #16]
 164:../User/BSP/bsp_config.c ****     GPIO_InitStructure.GPIO_Mode = GPIO_MODE_ANALOG;
 672              		.loc 1 164 34
 673 00da 0323     		movs	r3, #3
 674 00dc 7B60     		str	r3, [r7, #4]
 165:../User/BSP/bsp_config.c ****     GPIO_InitStructure.Pin       = GPIO_PIN_3;			//inp
 675              		.loc 1 165 34
 676 00de 0823     		movs	r3, #8
 677 00e0 3B60     		str	r3, [r7]
 166:../User/BSP/bsp_config.c ****     GPIO_Peripheral_Initialize(GPIOA, &GPIO_InitStructure);
 678              		.loc 1 166 5
 679 00e2 3B46     		mov	r3, r7
 680 00e4 1946     		mov	r1, r3
 681 00e6 0B48     		ldr	r0, .L22
 682 00e8 FFF7FEFF 		bl	GPIO_Peripheral_Initialize
 167:../User/BSP/bsp_config.c **** 
 168:../User/BSP/bsp_config.c ****     GPIO_InitStructure.GPIO_Mode      = GPIO_MODE_AF_PP;
 683              		.loc 1 168 39
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 67


 684 00ec 0223     		movs	r3, #2
 685 00ee 7B60     		str	r3, [r7, #4]
 169:../User/BSP/bsp_config.c ****     GPIO_InitStructure.Pin            = GPIO_PIN_12;//out
 686              		.loc 1 169 39
 687 00f0 4FF48053 		mov	r3, #4096
 688 00f4 3B60     		str	r3, [r7]
 170:../User/BSP/bsp_config.c ****     GPIO_InitStructure.GPIO_Alternate = GPIO_AF8_COMP2;
 689              		.loc 1 170 39
 690 00f6 0823     		movs	r3, #8
 691 00f8 7B61     		str	r3, [r7, #20]
 171:../User/BSP/bsp_config.c ****     GPIO_Peripheral_Initialize(GPIOA, &GPIO_InitStructure);
 692              		.loc 1 171 5
 693 00fa 3B46     		mov	r3, r7
 694 00fc 1946     		mov	r1, r3
 695 00fe 0548     		ldr	r0, .L22
 696 0100 FFF7FEFF 		bl	GPIO_Peripheral_Initialize
 172:../User/BSP/bsp_config.c ****     COMP_Configuratoin();
 697              		.loc 1 172 5
 698 0104 FFF7FEFF 		bl	COMP_Configuratoin
 173:../User/BSP/bsp_config.c **** 		
 174:../User/BSP/bsp_config.c **** 		IDLE_GPIO_Config();
 699              		.loc 1 174 3
 700 0108 FFF7FEFF 		bl	IDLE_GPIO_Config
 175:../User/BSP/bsp_config.c **** 		
 176:../User/BSP/bsp_config.c **** //		GPIO_Structure_Initialize(&GPIO_InitStructure);
 177:../User/BSP/bsp_config.c **** //    GPIO_InitStructure.GPIO_Current = GPIO_DS_4MA;
 178:../User/BSP/bsp_config.c **** //    GPIO_InitStructure.GPIO_Mode  = GPIO_MODE_AF_PP;
 179:../User/BSP/bsp_config.c **** //    GPIO_InitStructure.GPIO_Alternate = GPIO_AF6_TIM2;
 180:../User/BSP/bsp_config.c **** //    GPIO_InitStructure.Pin        = GPIO_PIN_15;
 181:../User/BSP/bsp_config.c **** //    GPIO_Peripheral_Initialize(GPIOA, &GPIO_InitStructure);
 182:../User/BSP/bsp_config.c **** }
 701              		.loc 1 182 1
 702 010c 00BF     		nop
 703 010e 1837     		adds	r7, r7, #24
 704              	.LCFI28:
 705              		.cfi_def_cfa_offset 8
 706 0110 BD46     		mov	sp, r7
 707              	.LCFI29:
 708              		.cfi_def_cfa_register 13
 709              		@ sp needed
 710 0112 80BD     		pop	{r7, pc}
 711              	.L23:
 712              		.align	2
 713              	.L22:
 714 0114 00340240 		.word	1073886208
 715 0118 00380240 		.word	1073887232
 716              		.cfi_endproc
 717              	.LFE136:
 719              		.section	.text.SysTick_Configuration,"ax",%progbits
 720              		.align	1
 721              		.global	SysTick_Configuration
 722              		.syntax unified
 723              		.thumb
 724              		.thumb_func
 726              	SysTick_Configuration:
 727              	.LFB137:
 183:../User/BSP/bsp_config.c **** 
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 68


 184:../User/BSP/bsp_config.c **** 
 185:../User/BSP/bsp_config.c **** 
 186:../User/BSP/bsp_config.c **** 
 187:../User/BSP/bsp_config.c **** /*************************************************************
 188:../User/BSP/bsp_config.c ****  * systick Configures
 189:../User/BSP/bsp_config.c ****  *************************************************************/
 190:../User/BSP/bsp_config.c **** void SysTick_Configuration(uint32_t freq)
 191:../User/BSP/bsp_config.c **** {
 728              		.loc 1 191 1
 729              		.cfi_startproc
 730              		@ args = 0, pretend = 0, frame = 8
 731              		@ frame_needed = 1, uses_anonymous_args = 0
 732 0000 80B5     		push	{r7, lr}
 733              	.LCFI30:
 734              		.cfi_def_cfa_offset 8
 735              		.cfi_offset 7, -8
 736              		.cfi_offset 14, -4
 737 0002 82B0     		sub	sp, sp, #8
 738              	.LCFI31:
 739              		.cfi_def_cfa_offset 16
 740 0004 00AF     		add	r7, sp, #0
 741              	.LCFI32:
 742              		.cfi_def_cfa_register 7
 743 0006 7860     		str	r0, [r7, #4]
 192:../User/BSP/bsp_config.c ****     /* Config  SysTick  */
 193:../User/BSP/bsp_config.c ****     SysTick_Config(SystemClockFrequency / freq);
 744              		.loc 1 193 5
 745 0008 054B     		ldr	r3, .L25
 746 000a 1A68     		ldr	r2, [r3]
 747 000c 7B68     		ldr	r3, [r7, #4]
 748 000e B2FBF3F3 		udiv	r3, r2, r3
 749 0012 1846     		mov	r0, r3
 750 0014 FFF7FEFF 		bl	SysTick_Config
 194:../User/BSP/bsp_config.c **** }
 751              		.loc 1 194 1
 752 0018 00BF     		nop
 753 001a 0837     		adds	r7, r7, #8
 754              	.LCFI33:
 755              		.cfi_def_cfa_offset 8
 756 001c BD46     		mov	sp, r7
 757              	.LCFI34:
 758              		.cfi_def_cfa_register 13
 759              		@ sp needed
 760 001e 80BD     		pop	{r7, pc}
 761              	.L26:
 762              		.align	2
 763              	.L25:
 764 0020 00000000 		.word	SystemClockFrequency
 765              		.cfi_endproc
 766              	.LFE137:
 768              		.section	.text.Delay_ms,"ax",%progbits
 769              		.align	1
 770              		.global	Delay_ms
 771              		.syntax unified
 772              		.thumb
 773              		.thumb_func
 775              	Delay_ms:
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 69


 776              	.LFB138:
 195:../User/BSP/bsp_config.c **** 
 196:../User/BSP/bsp_config.c **** 
 197:../User/BSP/bsp_config.c **** /*************************************************************
 198:../User/BSP/bsp_config.c ****  *  ms延时程序,1ms为一个单位
 199:../User/BSP/bsp_config.c ****  *  nTime: 延时时间
 200:../User/BSP/bsp_config.c ****  *************************************************************/
 201:../User/BSP/bsp_config.c **** void Delay_ms(__IO u32 nTime)
 202:../User/BSP/bsp_config.c **** {
 777              		.loc 1 202 1
 778              		.cfi_startproc
 779              		@ args = 0, pretend = 0, frame = 8
 780              		@ frame_needed = 1, uses_anonymous_args = 0
 781              		@ link register save eliminated.
 782 0000 80B4     		push	{r7}
 783              	.LCFI35:
 784              		.cfi_def_cfa_offset 4
 785              		.cfi_offset 7, -4
 786 0002 83B0     		sub	sp, sp, #12
 787              	.LCFI36:
 788              		.cfi_def_cfa_offset 16
 789 0004 00AF     		add	r7, sp, #0
 790              	.LCFI37:
 791              		.cfi_def_cfa_register 7
 792 0006 7860     		str	r0, [r7, #4]
 203:../User/BSP/bsp_config.c ****     TimingDelay = nTime;
 793              		.loc 1 203 17
 794 0008 7B68     		ldr	r3, [r7, #4]
 795 000a 074A     		ldr	r2, .L29
 796 000c 1360     		str	r3, [r2]
 204:../User/BSP/bsp_config.c **** 
 205:../User/BSP/bsp_config.c ****     while (TimingDelay != 0);
 797              		.loc 1 205 11
 798 000e 00BF     		nop
 799              	.L28:
 800              		.loc 1 205 24 discriminator 1
 801 0010 054B     		ldr	r3, .L29
 802 0012 1B68     		ldr	r3, [r3]
 803 0014 002B     		cmp	r3, #0
 804 0016 FBD1     		bne	.L28
 206:../User/BSP/bsp_config.c **** }
 805              		.loc 1 206 1
 806 0018 00BF     		nop
 807 001a 00BF     		nop
 808 001c 0C37     		adds	r7, r7, #12
 809              	.LCFI38:
 810              		.cfi_def_cfa_offset 4
 811 001e BD46     		mov	sp, r7
 812              	.LCFI39:
 813              		.cfi_def_cfa_register 13
 814              		@ sp needed
 815 0020 5DF8047B 		ldr	r7, [sp], #4
 816              	.LCFI40:
 817              		.cfi_restore 7
 818              		.cfi_def_cfa_offset 0
 819 0024 7047     		bx	lr
 820              	.L30:
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 70


 821 0026 00BF     		.align	2
 822              	.L29:
 823 0028 00000000 		.word	TimingDelay
 824              		.cfi_endproc
 825              	.LFE138:
 827              		.section	.text.TimingDelay_Decrement,"ax",%progbits
 828              		.align	1
 829              		.global	TimingDelay_Decrement
 830              		.syntax unified
 831              		.thumb
 832              		.thumb_func
 834              	TimingDelay_Decrement:
 835              	.LFB139:
 207:../User/BSP/bsp_config.c **** 
 208:../User/BSP/bsp_config.c **** /*************************************************************
 209:../User/BSP/bsp_config.c ****  *  获取节拍程序
 210:../User/BSP/bsp_config.c ****  *  在 SysTick 中断函数 SysTick_Handler()调用
 211:../User/BSP/bsp_config.c ****  *************************************************************/
 212:../User/BSP/bsp_config.c **** void TimingDelay_Decrement(void)
 213:../User/BSP/bsp_config.c **** {
 836              		.loc 1 213 1
 837              		.cfi_startproc
 838              		@ args = 0, pretend = 0, frame = 0
 839              		@ frame_needed = 1, uses_anonymous_args = 0
 840              		@ link register save eliminated.
 841 0000 80B4     		push	{r7}
 842              	.LCFI41:
 843              		.cfi_def_cfa_offset 4
 844              		.cfi_offset 7, -4
 845 0002 00AF     		add	r7, sp, #0
 846              	.LCFI42:
 847              		.cfi_def_cfa_register 7
 214:../User/BSP/bsp_config.c ****     if (TimingDelay != 0x00)
 848              		.loc 1 214 21
 849 0004 064B     		ldr	r3, .L34
 850 0006 1B68     		ldr	r3, [r3]
 851              		.loc 1 214 8
 852 0008 002B     		cmp	r3, #0
 853 000a 04D0     		beq	.L33
 215:../User/BSP/bsp_config.c ****     {
 216:../User/BSP/bsp_config.c ****         TimingDelay--;
 854              		.loc 1 216 20
 855 000c 044B     		ldr	r3, .L34
 856 000e 1B68     		ldr	r3, [r3]
 857 0010 013B     		subs	r3, r3, #1
 858 0012 034A     		ldr	r2, .L34
 859 0014 1360     		str	r3, [r2]
 860              	.L33:
 217:../User/BSP/bsp_config.c ****     }
 218:../User/BSP/bsp_config.c **** }
 861              		.loc 1 218 1
 862 0016 00BF     		nop
 863 0018 BD46     		mov	sp, r7
 864              	.LCFI43:
 865              		.cfi_def_cfa_register 13
 866              		@ sp needed
 867 001a 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 71


 868              	.LCFI44:
 869              		.cfi_restore 7
 870              		.cfi_def_cfa_offset 0
 871 001e 7047     		bx	lr
 872              	.L35:
 873              		.align	2
 874              	.L34:
 875 0020 00000000 		.word	TimingDelay
 876              		.cfi_endproc
 877              	.LFE139:
 879              		.section	.text.IWDG_Config,"ax",%progbits
 880              		.align	1
 881              		.global	IWDG_Config
 882              		.syntax unified
 883              		.thumb
 884              		.thumb_func
 886              	IWDG_Config:
 887              	.LFB140:
 219:../User/BSP/bsp_config.c **** 
 220:../User/BSP/bsp_config.c **** 
 221:../User/BSP/bsp_config.c **** /*************************************************************
 222:../User/BSP/bsp_config.c ****  *独立看门狗初始化
 223:../User/BSP/bsp_config.c ****  *配置为500ms
 224:../User/BSP/bsp_config.c ****  *复位时间计算：LSI频率为30KHZ想要配置为500mS 即为2Hz
 225:../User/BSP/bsp_config.c ****  *40000/128/2 = 156  128为时钟分频
 226:../User/BSP/bsp_config.c ****  *************************************************************/
 227:../User/BSP/bsp_config.c **** void IWDG_Config(void)
 228:../User/BSP/bsp_config.c **** {
 888              		.loc 1 228 1
 889              		.cfi_startproc
 890              		@ args = 0, pretend = 0, frame = 0
 891              		@ frame_needed = 1, uses_anonymous_args = 0
 892 0000 80B5     		push	{r7, lr}
 893              	.LCFI45:
 894              		.cfi_def_cfa_offset 8
 895              		.cfi_offset 7, -8
 896              		.cfi_offset 14, -4
 897 0002 00AF     		add	r7, sp, #0
 898              	.LCFI46:
 899              		.cfi_def_cfa_register 7
 229:../User/BSP/bsp_config.c ****     /* The timeout may varies due to LSI frequency dispersion */
 230:../User/BSP/bsp_config.c ****     /* Disable write protection to IWDG_PREDIV and IWDG_RELV registers */
 231:../User/BSP/bsp_config.c ****     IWDG_Write_Protection_Disable();
 900              		.loc 1 231 5
 901 0004 FFF7FEFF 		bl	IWDG_Write_Protection_Disable
 232:../User/BSP/bsp_config.c **** 
 233:../User/BSP/bsp_config.c ****     /* IWDG counter clock */
 234:../User/BSP/bsp_config.c ****     IWDG_Prescaler_Division_Set(IWDG_CONFIG_PRESCALER_DIV128);
 902              		.loc 1 234 5
 903 0008 0520     		movs	r0, #5
 904 000a FFF7FEFF 		bl	IWDG_Prescaler_Division_Set
 235:../User/BSP/bsp_config.c **** 
 236:../User/BSP/bsp_config.c ****     /* Sets IWDG reload value */
 237:../User/BSP/bsp_config.c ****     /* Set counter reload value to obtain x second IWDG TimeOut.
 238:../User/BSP/bsp_config.c ****      Counter Reload Value Time = x(second)/IWDG counter clock period
 239:../User/BSP/bsp_config.c ****                                = x(second) / (LSI/IWDG_prescaler)
 240:../User/BSP/bsp_config.c ****     */
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 72


 241:../User/BSP/bsp_config.c ****     IWDG_Counter_Reload(156);
 905              		.loc 1 241 5
 906 000e 9C20     		movs	r0, #156
 907 0010 FFF7FEFF 		bl	IWDG_Counter_Reload
 242:../User/BSP/bsp_config.c **** 
 243:../User/BSP/bsp_config.c ****     /* Reload counter with IWDG_PREDIV value in IWDG_RELV register to prevent reset */
 244:../User/BSP/bsp_config.c ****     IWDG_Key_Reload();
 908              		.loc 1 244 5
 909 0014 FFF7FEFF 		bl	IWDG_Key_Reload
 245:../User/BSP/bsp_config.c **** 
 246:../User/BSP/bsp_config.c ****     /* Enable IWDG (the LSI oscillator will be enabled by hardware) */
 247:../User/BSP/bsp_config.c ****     IWDG_Enable();
 910              		.loc 1 247 5
 911 0018 FFF7FEFF 		bl	IWDG_Enable
 248:../User/BSP/bsp_config.c **** 
 249:../User/BSP/bsp_config.c **** }
 912              		.loc 1 249 1
 913 001c 00BF     		nop
 914 001e 80BD     		pop	{r7, pc}
 915              		.cfi_endproc
 916              	.LFE140:
 918              		.section	.text.System_Init,"ax",%progbits
 919              		.align	1
 920              		.global	System_Init
 921              		.syntax unified
 922              		.thumb
 923              		.thumb_func
 925              	System_Init:
 926              	.LFB141:
 250:../User/BSP/bsp_config.c **** 
 251:../User/BSP/bsp_config.c **** 
 252:../User/BSP/bsp_config.c **** 
 253:../User/BSP/bsp_config.c **** 
 254:../User/BSP/bsp_config.c **** /*************************************************************
 255:../User/BSP/bsp_config.c ****  * 系统初始化
 256:../User/BSP/bsp_config.c ****  *************************************************************/
 257:../User/BSP/bsp_config.c **** void System_Init(void)
 258:../User/BSP/bsp_config.c **** {    
 927              		.loc 1 258 1
 928              		.cfi_startproc
 929              		@ args = 0, pretend = 0, frame = 0
 930              		@ frame_needed = 1, uses_anonymous_args = 0
 931 0000 80B5     		push	{r7, lr}
 932              	.LCFI47:
 933              		.cfi_def_cfa_offset 8
 934              		.cfi_offset 7, -8
 935              		.cfi_offset 14, -4
 936 0002 00AF     		add	r7, sp, #0
 937              	.LCFI48:
 938              		.cfi_def_cfa_register 7
 259:../User/BSP/bsp_config.c ****     RCC_Configuration();
 939              		.loc 1 259 5
 940 0004 FFF7FEFF 		bl	RCC_Configuration
 941              	.LBB14:
 942              	.LBB15:
 142:../firmware/CMSIS/core/cmsis_gcc.h **** }
 943              		.loc 3 142 3
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 73


 944              		.syntax unified
 945              	@ 142 "../firmware/CMSIS/core/cmsis_gcc.h" 1
 946 0008 72B6     		cpsid i
 947              	@ 0 "" 2
 143:../firmware/CMSIS/core/cmsis_gcc.h **** 
 948              		.loc 3 143 1
 949              		.thumb
 950              		.syntax unified
 951 000a 00BF     		nop
 952              	.LBE15:
 953              	.LBE14:
 260:../User/BSP/bsp_config.c ****     __disable_irq();
 261:../User/BSP/bsp_config.c ****     SysTick_Configuration(1000);
 954              		.loc 1 261 5
 955 000c 4FF47A70 		mov	r0, #1000
 956 0010 FFF7FEFF 		bl	SysTick_Configuration
 262:../User/BSP/bsp_config.c ****     GPIO_Config();
 957              		.loc 1 262 5
 958 0014 FFF7FEFF 		bl	GPIO_Config
 263:../User/BSP/bsp_config.c ****     TIM1_PWM_Init(SET);
 959              		.loc 1 263 5
 960 0018 0120     		movs	r0, #1
 961 001a FFF7FEFF 		bl	TIM1_PWM_Init
 264:../User/BSP/bsp_config.c **** //		TIM4_ETR_Init();
 265:../User/BSP/bsp_config.c **** 		TIM6_1Khz_Init();
 962              		.loc 1 265 3
 963 001e FFF7FEFF 		bl	TIM6_1Khz_Init
 266:../User/BSP/bsp_config.c **** 		TIM4_Capture_Config();
 964              		.loc 1 266 3
 965 0022 FFF7FEFF 		bl	TIM4_Capture_Config
 267:../User/BSP/bsp_config.c ****     Adc_Init();
 966              		.loc 1 267 5
 967 0026 FFF7FEFF 		bl	Adc_Init
 968              	.LBB16:
 969              	.LBB17:
 131:../firmware/CMSIS/core/cmsis_gcc.h **** }
 970              		.loc 3 131 3
 971              		.syntax unified
 972              	@ 131 "../firmware/CMSIS/core/cmsis_gcc.h" 1
 973 002a 62B6     		cpsie i
 974              	@ 0 "" 2
 132:../firmware/CMSIS/core/cmsis_gcc.h **** 
 975              		.loc 3 132 1
 976              		.thumb
 977              		.syntax unified
 978 002c 00BF     		nop
 979              	.LBE17:
 980              	.LBE16:
 268:../User/BSP/bsp_config.c **** 
 269:../User/BSP/bsp_config.c ****     __enable_irq();
 270:../User/BSP/bsp_config.c **** 		switch_pwm(INV_ALL_ON);
 981              		.loc 1 270 3
 982 002e 0120     		movs	r0, #1
 983 0030 FFF7FEFF 		bl	switch_pwm
 271:../User/BSP/bsp_config.c **** 	  //自动重装载值最大为2499
 272:../User/BSP/bsp_config.c **** //		pwm_duty_set(2500,2500,2500);
 273:../User/BSP/bsp_config.c **** 		pwm_duty_set(1250,1250,1250);
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 74


 984              		.loc 1 273 3
 985 0034 40F2E242 		movw	r2, #1250
 986 0038 40F2E241 		movw	r1, #1250
 987 003c 40F2E240 		movw	r0, #1250
 988 0040 FFF7FEFF 		bl	pwm_duty_set
 274:../User/BSP/bsp_config.c **** //	  pwm_duty_set(2400,1922,109);
 275:../User/BSP/bsp_config.c **** 	
 276:../User/BSP/bsp_config.c **** 		I2C_EE_Init();
 989              		.loc 1 276 3
 990 0044 FFF7FEFF 		bl	I2C_EE_Init
 277:../User/BSP/bsp_config.c **** }
 991              		.loc 1 277 1
 992 0048 00BF     		nop
 993 004a 80BD     		pop	{r7, pc}
 994              		.cfi_endproc
 995              	.LFE141:
 997              		.section	.text.FLASH_Read_Out_Protection,"ax",%progbits
 998              		.align	1
 999              		.global	FLASH_Read_Out_Protection
 1000              		.syntax unified
 1001              		.thumb
 1002              		.thumb_func
 1004              	FLASH_Read_Out_Protection:
 1005              	.LFB142:
 278:../User/BSP/bsp_config.c **** 
 279:../User/BSP/bsp_config.c **** void FLASH_Read_Out_Protection(void)
 280:../User/BSP/bsp_config.c **** {
 1006              		.loc 1 280 1
 1007              		.cfi_startproc
 1008              		@ args = 0, pretend = 0, frame = 0
 1009              		@ frame_needed = 1, uses_anonymous_args = 0
 1010 0000 80B5     		push	{r7, lr}
 1011              	.LCFI49:
 1012              		.cfi_def_cfa_offset 8
 1013              		.cfi_offset 7, -8
 1014              		.cfi_offset 14, -4
 1015 0002 00AF     		add	r7, sp, #0
 1016              	.LCFI50:
 1017              		.cfi_def_cfa_register 7
 281:../User/BSP/bsp_config.c **** 	if (FLASH_Read_Out_Protection_Status_Get() == RESET)		//先读取下读保护标志位有没有置
 1018              		.loc 1 281 6
 1019 0004 FFF7FEFF 		bl	FLASH_Read_Out_Protection_Status_Get
 1020 0008 0346     		mov	r3, r0
 1021              		.loc 1 281 5
 1022 000a 002B     		cmp	r3, #0
 1023 000c 07D1     		bne	.L40
 282:../User/BSP/bsp_config.c **** 	{
 283:../User/BSP/bsp_config.c **** 		 FLASH_Unlock();
 1024              		.loc 1 283 4
 1025 000e FFF7FEFF 		bl	FLASH_Unlock
 284:../User/BSP/bsp_config.c **** 		 FLASH_Read_Out_Protection_L1_Enable();
 1026              		.loc 1 284 4
 1027 0012 FFF7FEFF 		bl	FLASH_Read_Out_Protection_L1_Enable
 285:../User/BSP/bsp_config.c **** 		 FLASH_Lock();
 1028              		.loc 1 285 4
 1029 0016 FFF7FEFF 		bl	FLASH_Lock
 286:../User/BSP/bsp_config.c **** 		 NVIC_SystemReset();			//软复位，生效读保护
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 75


 1030              		.loc 1 286 4
 1031 001a FFF7FEFF 		bl	__NVIC_SystemReset
 1032              	.L40:
 287:../User/BSP/bsp_config.c **** 	}
 288:../User/BSP/bsp_config.c **** }
 1033              		.loc 1 288 1
 1034 001e 00BF     		nop
 1035 0020 80BD     		pop	{r7, pc}
 1036              		.cfi_endproc
 1037              	.LFE142:
 1039              		.text
 1040              	.Letext0:
 1041              		.file 4 "../firmware/CMSIS/device/n32g430.h"
 1042              		.file 5 "d:\\program files (x86)\\arm gnu toolchain arm-none-eabi\\12.3 rel1\\arm-none-eabi\\inclu
 1043              		.file 6 "d:\\program files (x86)\\arm gnu toolchain arm-none-eabi\\12.3 rel1\\arm-none-eabi\\inclu
 1044              		.file 7 "../firmware/n32g430_std_periph_driver/inc/n32g430_adc.h"
 1045              		.file 8 "../firmware/n32g430_std_periph_driver/inc/n32g430_comp.h"
 1046              		.file 9 "../firmware/n32g430_std_periph_driver/inc/n32g430_flash.h"
 1047              		.file 10 "../firmware/n32g430_std_periph_driver/inc/n32g430_gpio.h"
 1048              		.file 11 "../firmware/n32g430_std_periph_driver/inc/n32g430_iwdg.h"
 1049              		.file 12 "../User/BSP/bsp_tim.h"
 1050              		.file 13 "../firmware/CMSIS/device/system_n32g430.h"
 1051              		.file 14 "../User/BSP/i2c_eeprom.h"
 1052              		.file 15 "../User/BSP/bsp_adc.h"
 1053              		.file 16 "../firmware/n32g430_std_periph_driver/inc/n32g430_rcc.h"
 1054              		.file 17 "../firmware/n32g430_std_periph_driver/inc/misc.h"
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 76


DEFINED SYMBOLS
                            *ABS*:00000000 bsp_config.c
C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s:21     .text.__NVIC_SetPriority:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s:26     .text.__NVIC_SetPriority:00000000 __NVIC_SetPriority
C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s:101    .text.__NVIC_SetPriority:0000004c $d
C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s:107    .text.__NVIC_SystemReset:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s:112    .text.__NVIC_SystemReset:00000000 __NVIC_SystemReset
C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s:177    .text.__NVIC_SystemReset:00000024 $d
C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s:183    .text.SysTick_Config:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s:188    .text.SysTick_Config:00000000 SysTick_Config
C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s:253    .text.SysTick_Config:00000040 $d
C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s:262    .bss.TimingDelay:00000000 TimingDelay
C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s:259    .bss.TimingDelay:00000000 $d
C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s:265    .text.RCC_Configuration:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s:271    .text.RCC_Configuration:00000000 RCC_Configuration
C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s:336    .text.COMP_Configuratoin:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s:342    .text.COMP_Configuratoin:00000000 COMP_Configuratoin
C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s:417    .text.IDLE_GPIO_Config:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s:423    .text.IDLE_GPIO_Config:00000000 IDLE_GPIO_Config
C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s:514    .text.IDLE_GPIO_Config:00000080 $d
C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s:521    .text.GPIO_Config:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s:527    .text.GPIO_Config:00000000 GPIO_Config
C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s:714    .text.GPIO_Config:00000114 $d
C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s:720    .text.SysTick_Configuration:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s:726    .text.SysTick_Configuration:00000000 SysTick_Configuration
C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s:764    .text.SysTick_Configuration:00000020 $d
C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s:769    .text.Delay_ms:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s:775    .text.Delay_ms:00000000 Delay_ms
C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s:823    .text.Delay_ms:00000028 $d
C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s:828    .text.TimingDelay_Decrement:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s:834    .text.TimingDelay_Decrement:00000000 TimingDelay_Decrement
C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s:875    .text.TimingDelay_Decrement:00000020 $d
C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s:880    .text.IWDG_Config:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s:886    .text.IWDG_Config:00000000 IWDG_Config
C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s:919    .text.System_Init:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s:925    .text.System_Init:00000000 System_Init
C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s:998    .text.FLASH_Read_Out_Protection:00000000 $t
C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s:1004   .text.FLASH_Read_Out_Protection:00000000 FLASH_Read_Out_Protection

UNDEFINED SYMBOLS
NVIC_Priority_Group_Set
RCC_Pclk1_Config
RCC_APB2_Peripheral_Clock_Enable
RCC_APB1_Peripheral_Clock_Enable
RCC_AHB_Peripheral_Clock_Enable
ADC_Clock_Mode_Config
RCC_ADC_1M_Clock_Config
COMP_Voltage_Reference_Config
COMP_Initializes_Structure
COMP_Initializes
COMP_Output_Trigger_Config
COMP_ON
GPIO_Structure_Initialize
GPIO_Peripheral_Initialize
GPIO_Pins_Reset
SystemClockFrequency
IWDG_Write_Protection_Disable
ARM GAS  C:\Users\ZShuai\AppData\Local\Temp\ccq2XKJD.s 			page 77


IWDG_Prescaler_Division_Set
IWDG_Counter_Reload
IWDG_Key_Reload
IWDG_Enable
TIM1_PWM_Init
TIM6_1Khz_Init
TIM4_Capture_Config
Adc_Init
switch_pwm
pwm_duty_set
I2C_EE_Init
FLASH_Read_Out_Protection_Status_Get
FLASH_Unlock
FLASH_Read_Out_Protection_L1_Enable
FLASH_Lock
